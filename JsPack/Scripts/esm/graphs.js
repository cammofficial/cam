var _0x4405=['edges','outEdges','inEdges','weight','layer','balance','owner','removeEdge','origin','remove','destination','incidentWith','includes','adjacentTo','getCommonEdge','getOtherEnd','getCommonEdges','edgeTo','find','getNeighbors','push','degree','length','inDegree','outDegree','toString','index','getCommonVertex','getEnds','changeOrigin','changeDestination','changeVertex','directTo','reverse','createReverseEdge','reversed','init','reinit','consecutiveNodes','root','Node','modifiedNodes','reduction','bubble','reduce','count','dequeue','queued','pertinentLeafCount','markBlocked','getBlockedSiblings','parent','immediateSiblings','markUnblocked','blocked','getMaximalConsecutiveBlockedSiblings','pertinentChildCount','unmarked','enqueue','markQueued','templateL1','templateP3','templateQ1','templateQ2','templateP2','templateQ3','pertinentRoot','hasChildren','label','full','templateP1','type','children','fullChildren','pNode','partialChildren','addChild','getFirstFullChild','partial','moveFullChildrenTo','replaceChild','emptyChildren','getFirstEmptyChild','removeChild','templateP4','getPartialChild','becomeChild','destroy','fullChildrenAreEndMost','endMostChildren','get','checkLabelDirected','empty','add','destroyed','qNode','pseudoRoot','childrenAreFull','fullChildrenAreAdjacent','endMostChildrenAreEmptyOrPartial','fullChildrenAreAdjacentTo','absorbPartialChild','partialChildrenAtEnds','NodePair','readInReverseDirection','_type','data','right','fullLeft','fullRight','partialChildrenList','partialLeft','_label','left','partialRight','childCount','circularLink','undefined','getNonDirectedSibling','getEndMostDirectedSibling','getOther','directionIndicator','setPseudoRoot','fullChildrenList','twoChildrenLeft','addToFullList','removeFromFullList','addToPartialList','removeFromPartialList','addChildToQNode','contains','addChildToPseudoRoot','removeChildFromPNode','removeChildFromQNode','replace','getPertinentNeighbor','getEmptyNeighbor','getEndMostChild','replaceFullChildrenWith','getFullLeavesFrom','removeAt','getEndmostLeaves','getLeaf','getAllNodes','getQChildren','siblingOf','Type','getFullLeavesTo','direction','getFullLeaves','nextPSibling','nodes','trackDirection','directedTowardsIndex','indexOf','splice','slice','getVertices','enumVertices','edgeFromVertex','replaceEdge','bigAngles','_bigAngles','embedding','graph','set','vertexCopyToOrigMap','edgeCopyToOrigMap','has','reverseEdges','replaceEdges','delete','addEdge','setReverseEdges','isVertexBimodal','keys','contractEdge','quasiCapacity','externalFace','countSourceSwitches','enumerateFaces','_faces','faceOnLeftMap','faceOnRightMap','enumerateFaceEdges','prevInEmbedding','edgesBetween','vertices','faces','min','max','intersects','getLeaves','addChildren','collectLeaves','item','insert','swim','getMin','lower','less','kess','floor','sink','exchange','clone','cloneSubset','createEdgeP','createReverseMaps','entries','vertexOrigToCopyMap','edgeOrigToCopyMap','tree','level','forEach','Right','layoutTraits','Left','assistantPosition','Normal','reassignLevels','treeLevels','sort','treeLayoutAssistant','createEdge','removeAllEdges','createVertex','width','height','addVertexAndOutEdges','addVertex','debugId','splitEdge','temporary','findShortestPathVS','setItemIndices','findShortestPathBfs','findShortestWeightedPathVS','MAX_VALUE','value','dfsConnectivity','searchCounter','getBiconnectedComponents','getConnectedComponents','cutVertices','foundComponents','backMostEdges','secondLevel','stackToComponent2','pop','biconnectivityDfs','searchOrder','visitedEdges','last','getBiconnectedComponents2','shift','processed','BlockCutpointGraph','directFromRoot','addAll','getOutsideVertex','father','getCutvertex','getOutsideVertexN','mergeBlocks','setNewParent','removeBnode','stillPlanar','isPlanar','getOutsideVertexCP','embedOnSameFace','containsAll','DualGraph','get3EdgeConnectedComponents','getCutPairs','test3EdgeConnectivity','cutEdge','treeEdge','child','edge','findBlockSeparationPairs','findBlockSeparationPairsB','spTreeEdge','replacementFor','forReverse','any','depthFirstSearch','searchComponent','searchParent','getStNumbering','stOrder','joins','findPath','convertToStGraph','isCycleEdge','isPlanarSingleBicomponent','verticesInStOrder','savedPqTree','getPlanarEmbedding','addBlockEmbedding','getPlanarEmbeddingSingleBicomp','getUpwardEmbedding','entireEmbed','tEdgeOrder','entireEmbedDfs','findPlanarSubgraph','findPlanarSubgraphByBookEmbedding','findPlanarSubgraphBySimpleEdgeInsertion','size','clear','minAdjacenciesNeighbor','maxIndependentSet','intervals','vertexIntervals','removeVertex','MAX_SAFE_INTEGER','countAdjacencies','minDegreeVertex','planarize','getDualGraph','getIncidentFaces','getFaceVertices','findShortestPathSS','findShortestWeightedPathSS','vertexToFaceMap','getCommonEdgeMinWeight','splitFace','makeAcyclic','unshift','getDualGraphE','postCounter','topologicalSortDfs','getWeightedTopologicalNumbering','topologicalSort','getWeightedTopologicalNumberingTS','splitToMaxDegree','splitToMaxDegreeV','This\x20method\x20can\x20be\x20applied\x20only\x20on\x20an\x20acyclic\x20graph.','Not\x20a\x20transitive\x20graph.','blockToBnodeMap','cutToCnodeMap','blocks','onComponentBlocks','cutVerticesB','isPendant','adjacentBlocks','isBnode','directFrom','findPendantCut','isCnode','getBlock','mapVertices','targetGraph','incidentFaces','createDirectedEdges','edgeToFaceMap','getNextRightFaceEdge','faceToVertexMap','dgCreateVertex','dgCreateEdge','splitExternalFace','leftExVertex','leftExFace','rightExFace','rightExVertex','getReverse','getOriginalEdge','setFaceIndices','intervalVertices','overlaps','setInclusionLevel','levelVertices','maxWeightedIndependentSet','inclusionLevels','assignVertexToLevel','OverlapGraph','links','items','isNode','getWeight','isLink','_expandable','_autoRoute','findPaths','getSize','findShortestPath','findLongestPath','findCycle','enumAllCycles','enumAllCyclesDirected','markedStack','pointStack','vertexIdx','toDelete','deleted','mark','anchoring','keepGroupLayout','margins','_anchoring','_keepGroupLayout','multipleGraphsPlacement','_multipleGraphsPlacement','_margins','setsLinkEndPoints','setsLinkPoints','requiresConnectedGraph','routeRepeatingLinks','requiresBezierLinks','requiresCascadingLinks','isStatic','nodeDistance','keepRootPosition','linkType','Default','Horizontal','requiresSimpleGraph','Cascading','rarrange','isHorizontal','levelDistance','isStraight','offsetBranch','Straight','TopToBottom','BottomToTop','points','LeftToRight','RightToLeft','fromVertex','top','bottom','getType','constructor','__typeName','_levelDistance','_nodeDistance','_keepRootPosition','_direction','_linkType','union','GetLFarCenter','Vertical','GetLNearCenter','GetBNearCenter','MoveNode','center','SetLinkPoints','_fcl_multiMerge','_fcl_processed','prototype','call','Mirror','GetBreadth','GetBCenter','GetLength','GetLCenter','GetBNear','GetBFar','GetBFarRect','GetLNearRect','GetLFarRect','GetL','fromCenterAndSize','node','branchPadding','linkPadding','nodeOrder','progressCounter','branchings','visitedNodes','flowchartNodes','arrange','orientation','placedNodes','furthestL','getStartNodes','topologicalOrder','postOrder','deferredMerge','OffsetL','layoutRect','SetLinkPointsA','composeFlowChart','composeBlocks','getIncomingDownLinks','registerMerge','getIncomingLoopLinks','getOutgoingLoopLinks','getOutgoingDownLinks','branches','followedByMergeNode','nextNodes','getFlowchartNode','getSequence','parentBlock','getDownLinks','isStartNode','isDownLink','isVisited','isBackLink','getTopologicalOrder','segmentsFromPoints','pullLinksApart','splitPaths','_mf_segments','horizontal','abs','_branchPadding','_linkPadding','_orientation','dumpGraph','log','************************','fullBreadth','loopDepth','maxLoopDepth','incomingLink','currentLink','getOutLinks','getInLinks','getBackLinks','flowchartLayout','disjoint','getContentBreadth','contentBreadth','getFullBreadth','getLoopDepth','setLoopDepth','getArranged','arranged','setIncomingLink','getNode','measure','sequence','getIncomingLink','arrangeOverflow','middleBlock','leftBlock','rootNode','mergeMap','mergeNodes','centeredBranching','centerNonEmptyBranch','twoEmptyBranches','sortBranches','arrangedAsMerge','intersectsWith','GetLFar','OffsetOutLinks','rightBlock','GetBFarCenter','GetLinkPoints','GetB','connectNodeBorderCenters','getBNearest','getBFurthest','getLinkPadding','GetLNear','concat','getMergeNodes','containsPoint','polylineIntersectsRect','polylinesIntersect','calcAngle','xint','yint','_fcl_arranged','isEmpty','vertex','branchCircles','arrangeCircles','sqrt','measureCircles','isRoot','radius','sweepAngle','angle','sin','centerDelta','fromPoints','centerX','centerY','childCircles','cos','rotatePoint','_root','layerDistance','siftingRounds','initialMinimizeCrossingsDown','uBaryCenter','dLinkCount','uPriority','dPriority','gridPosition','dummy','dummificationLevel','layers','dummify','minimizeCrossings','swapPairs','layout','indexInLayer','minDistances','getMinDist','computeLeftClasses','computeClasses','nodeLeftClass','computeRightClasses','nodeRightClass','nodesInLongLink','placeLeftToRight','placeLeft','POSITIVE_INFINITY','rightSibling','upNodes','diff','dump','layer\x20','NEGATIVE_INFINITY','leftSibling','downNodes','assignCoordinates','placeRightToLeft','setMinDist','placeSequence','adjustDirections','getNeighborOnLayer','placeSingle','combineSequences','placeRight','uLinkCount','layoutLayer','calcDownData','calcUpData','moveLeft','mapVirtualNode','nodeToLinkMap','linkToNodeMap','dBaryCenter','dedummify','minimizeCrossingsDir','countCrossings','_layerDistance','_siftingRounds','refineStage','initialTemperature','temperature','iterations','calcSpringForce','applyForce','moveToEpsilonCircle','random','attraction','pow','calcRepulsionForce','_iterations','ceil','bendAdjacentLinks','_bendAdjacentLinks','enableAssistants','compactAssistants','assistantType','branchBounds','branchDistance','hasAssistants','_enableAssistants','_compactAssistants','squarify','padding','layoutArea','containerPadding','minNodeSize','requiresHierarchyInfo','weights','master','calcWeights','arrangeSiblings','arrangeSquare','doSquarify','evalRatio','subtractPadding','layoutRow','subordinates','layOutArea','headerSize','inflate','_squarify','_padding','_layoutArea','_containerPadding','vertexPoints','edgePoints','cells','PointMap','bounds','MIN_SAFE_INTEGER','updateBounds','getCell','updateBoundsFromPoints','equals','Bend','columnWidths','rowHeights','setCellDimensions','minWidth','maxWidth','minHeight','maxHeight','columnPositions','rowPositions','getEdgePointPosition','horizontalEdges','getPosition','getEdgeBend','maxHNeighbors','getEdgeLane','val','refineCacheEdges','refineDegreeOneVertices','removeRedundantBends','removeUnusedColumns','setApartOverlappingEdges','refineSpace','removeUnusedRows','EdgeSegment','removeFromCell','content','containsVertexOrBend','removeEdgeOrBend','refineUTurns','manhDistance','edgeContainsRange','removeSegmentsFromRange','normalizePath','containsEdgeSegment','setSegmentsInRange','verticalEdges','countEdges','setHorizontalEdgesInRange','containsVertex','setVerticalEdgesInRange','getBendNeighborPoints','neighborPoints','bendsToTheLeft','lane','maxNeighbors','horizontalLane','PermutationSet','permuteHorizontalEdgeLanes','first','verticalLane','maxVNeighbors','list','countVerticalEdgesCrossings','permuteVerticalEdgeLanes','bendsToTheTop','Cell','containsEdge','getEdgeSegment','Rectangle','key','current','heapPermute','swap','permutations','stsort','leftV','rightV','dest','origF','destF','rightMostOutgoing','getOutEdges','leftMostOutgoing','getNext','getInEdges','leftMostIncoming','getPrevious','getOutMedian','getInMedian','newHSegment','newVSegment','dualGraph','edgeToPathMap','pathToVertexMap','hSegments','vSegments','orig','vertexSegments','edgeSegments','minLaneSize','drawingGrid','applyGrid','planarMakeBiconnected','source','mergePaths','refine','alignEndsToNode','_refine','_minLaneSize'];var _0x30da=function(_0x440ab5,_0x2f80bc){_0x440ab5=_0x440ab5-0x0;var _0x1c2c0e=_0x4405[_0x440ab5];return _0x1c2c0e;};import{Utils,Queue,Grid}from'@mindfusion/collections';import{Rect,Point,Geometry,Circle}from'@mindfusion/drawing';const AssistantPosition={'Left':0x1,'Right':0x2};const AssistantType={'Normal':0x1,'Left':0x2,'Right':0x3};const Anchoring={'Ignore':0x0,'Keep':0x1,'Reassign':0x2,'Custom':0x3};const LayoutDirection={'TopToBottom':0x0,'LeftToRight':0x1,'BottomToTop':0x2,'RightToLeft':0x3};const TreeLayoutLinkType={'Default':0x0,'Straight':0x1,'Cascading':0x2};const MultipleGraphsPlacement={'Vertical':0x0,'Horizontal':0x1};const Orientation={'Vertical':0x0,'Horizontal':0x1};class Vertex{constructor(){this[_0x30da('0x0')]=[];this[_0x30da('0x1')]=[];this[_0x30da('0x2')]=[];this[_0x30da('0x3')]=0x1;}['clone'](){var copy=new Vertex();if(this['layer']!==undefined)copy[_0x30da('0x4')]=this['layer'];if(this[_0x30da('0x3')]!==undefined)copy[_0x30da('0x3')]=this[_0x30da('0x3')];if(this[_0x30da('0x5')]!==undefined)copy[_0x30da('0x5')]=this['balance'];if(this['owner']!==undefined)copy['owner']=this[_0x30da('0x6')];return copy;}[_0x30da('0x7')](edge){if(edge[_0x30da('0x8')]==this){Utils[_0x30da('0x9')](this[_0x30da('0x0')],edge);Utils[_0x30da('0x9')](this['outEdges'],edge);edge[_0x30da('0x8')]=null;}if(edge[_0x30da('0xa')]==this){Utils['remove'](this['edges'],edge);Utils[_0x30da('0x9')](this['inEdges'],edge);edge[_0x30da('0xa')]=null;}}[_0x30da('0xb')](edge){return this[_0x30da('0x0')][_0x30da('0xc')](edge);}[_0x30da('0xd')](vertex){return this[_0x30da('0xe')](vertex)!=null;}[_0x30da('0xe')](vertex){return this['edges']['find'](edge=>edge[_0x30da('0xf')](this)===vertex);}[_0x30da('0x10')](vertex){return this[_0x30da('0x0')]['every'](function(edge){return edge[_0x30da('0xf')](this)===vertex;},this);}[_0x30da('0x11')](vertex){return this[_0x30da('0x1')][_0x30da('0x12')](edge=>edge[_0x30da('0xa')]==vertex);}[_0x30da('0x13')](){var neighbors=[];this[_0x30da('0x2')]['forEach'](function(e){neighbors[_0x30da('0x14')](e[_0x30da('0xf')](this));},this);this['outEdges']['forEach'](function(e){neighbors[_0x30da('0x14')](e[_0x30da('0xf')](this));},this);return neighbors;}[_0x30da('0x15')](){return this['edges'][_0x30da('0x16')];}[_0x30da('0x17')](){return this[_0x30da('0x2')][_0x30da('0x16')];}[_0x30da('0x18')](){return this[_0x30da('0x1')][_0x30da('0x16')];}[_0x30da('0x19')](){return this[_0x30da('0x1a')][_0x30da('0x19')]();}}class Edge{constructor(origin,destination,prototype){this[_0x30da('0x8')]=origin;this[_0x30da('0xa')]=destination;this[_0x30da('0x3')]=0x1;if(prototype){this['weight']=prototype['weight'];}}[_0x30da('0xf')](vertex){return this['origin']==vertex?this[_0x30da('0xa')]:this[_0x30da('0x8')];}[_0x30da('0x1b')](edge){if(this[_0x30da('0x8')]==edge[_0x30da('0x8')]||this[_0x30da('0x8')]==edge[_0x30da('0xa')])return this['origin'];if(this['destination']==edge['origin']||this[_0x30da('0xa')]==edge['destination'])return this[_0x30da('0xa')];return null;}['joins'](v1,v2){if(this['origin']==v1&&this[_0x30da('0xa')]==v2||this['origin']==v2&&this[_0x30da('0xa')]==v1)return!![];return![];}[_0x30da('0x1c')](){return[this[_0x30da('0x8')],this[_0x30da('0xa')]];}['incidentWith'](vertex){return this[_0x30da('0x8')]==vertex||this['destination']==vertex;}['adjacentTo'](edge){return this[_0x30da('0x8')][_0x30da('0x0')]['includes'](edge)||this[_0x30da('0xa')][_0x30da('0x0')][_0x30da('0xc')](edge);}[_0x30da('0x1d')](v){Utils[_0x30da('0x9')](this[_0x30da('0x8')][_0x30da('0x0')],this);Utils['remove'](this['origin'][_0x30da('0x1')],this);v[_0x30da('0x0')]['push'](this);v[_0x30da('0x1')][_0x30da('0x14')](this);this[_0x30da('0x8')]=v;}[_0x30da('0x1e')](v){Utils[_0x30da('0x9')](this[_0x30da('0xa')]['edges'],this);Utils[_0x30da('0x9')](this[_0x30da('0xa')][_0x30da('0x2')],this);v[_0x30da('0x0')][_0x30da('0x14')](this);v['inEdges']['push'](this);this[_0x30da('0xa')]=v;}[_0x30da('0x1f')](v,w){if(this[_0x30da('0x8')]==v)this['changeOrigin'](w);else if(this[_0x30da('0xa')]==v)this[_0x30da('0x1e')](w);}['reverse'](){var oldOrigin=this[_0x30da('0x8')];var oldDest=this[_0x30da('0xa')];this[_0x30da('0x8')]=oldDest;Utils[_0x30da('0x9')](oldOrigin[_0x30da('0x1')],this);this['origin']['outEdges'][_0x30da('0x14')](this);this[_0x30da('0xa')]=oldOrigin;Utils[_0x30da('0x9')](oldDest['inEdges'],this);this[_0x30da('0xa')][_0x30da('0x2')]['push'](this);}[_0x30da('0x20')](destination){if(this[_0x30da('0xa')]!=destination)this[_0x30da('0x21')]();}[_0x30da('0x22')](){var r=new Edge(this[_0x30da('0xa')],this[_0x30da('0x8')],this);r[_0x30da('0x23')]=!![];return r;}[_0x30da('0x19')](){return this[_0x30da('0x8')][_0x30da('0x1a')][_0x30da('0x19')]()+'-'+this['destination'][_0x30da('0x1a')][_0x30da('0x19')]();}}class PQTree{constructor(){this['init']();}[_0x30da('0x24')](){if(this['consecutiveNodes']!=null){this[_0x30da('0x25')]();this[_0x30da('0x26')]=null;}this['modifiedNodes']=[];this[_0x30da('0x27')]=new PQTree[(_0x30da('0x28'))]();}[_0x30da('0x25')](){for(let node of this[_0x30da('0x29')])node[_0x30da('0x25')]();if(this['consecutiveNodes']!=null){for(let node of this[_0x30da('0x26')])node[_0x30da('0x25')]();}}[_0x30da('0x2a')](s){this['consecutiveNodes']=s;this['reinit']();let proot=null;if(this[_0x30da('0x2b')](s))proot=this[_0x30da('0x2c')](s);if(proot==null)this[_0x30da('0x24')]();return proot;}[_0x30da('0x2b')](s){let queue=new Queue();let blockCount=0x0;let blockedNodes=0x0;let offTheTop=0x0;for(let node of s)queue['enqueue'](node);let blockedList=[];while(queue[_0x30da('0x2d')]+blockCount+offTheTop>0x1){if(queue['count']==0x0)return![];let x=queue[_0x30da('0x2e')]();if(!x[_0x30da('0x2f')])x[_0x30da('0x30')]=0x1;x[_0x30da('0x31')]();let bs=x[_0x30da('0x32')]();let us=x['getUnblockedSiblings']();if(us[_0x30da('0x16')]>0x0){let y=us[0x0];x[_0x30da('0x33')]=y[_0x30da('0x33')];x['markUnblocked']();}else if(x[_0x30da('0x34')]==null||x[_0x30da('0x34')][_0x30da('0x2d')]<0x2){x[_0x30da('0x35')]();}if(!x[_0x30da('0x36')]){let y=x[_0x30da('0x33')];let list=[];if(bs['length']>0x0){list=x[_0x30da('0x37')]();for(let z of list){z[_0x30da('0x35')]();z[_0x30da('0x33')]=y;y['pertinentChildCount']=y[_0x30da('0x38')]+0x1;}}if(y==null){offTheTop=0x1;}else{y[_0x30da('0x38')]=y[_0x30da('0x38')]+0x1;if(y[_0x30da('0x39')]){queue[_0x30da('0x3a')](y);y[_0x30da('0x3b')]();}}blockCount-=bs['length'];blockedNodes-=list[_0x30da('0x16')];}else{blockedList['push'](x);blockCount=blockCount+0x1-bs[_0x30da('0x16')];blockedNodes++;}}if(blockCount>0x1)return![];if(blockCount==0x1&&blockedNodes>0x1){let z=new PQTree['Node']();z['pertinentChildCount']=blockedNodes;z['setPseudoRoot'](blockedList);}return!![];}['reduce'](s){let queue=new Queue();for(let x of s){queue['enqueue'](x);x[_0x30da('0x30')]=0x1;}while(queue[_0x30da('0x2d')]>0x0){let x=queue['dequeue']();this[_0x30da('0x29')]['push'](x);if(x[_0x30da('0x30')]<s[_0x30da('0x16')]&&s[_0x30da('0x16')]!=0x1){let y=x['parent'];y['pertinentLeafCount']=y[_0x30da('0x30')]+x[_0x30da('0x30')];y[_0x30da('0x38')]=y[_0x30da('0x38')]-0x1;if(y[_0x30da('0x38')]==0x0)queue['enqueue'](y);if(!(this[_0x30da('0x3c')](x)||this['templateP1'](x)||this[_0x30da('0x3d')](x)||this['templateP5'](x)||this[_0x30da('0x3e')](x)||this[_0x30da('0x3f')](x))){return null;}}else{this['pertinentRoot']=x;if(!(this[_0x30da('0x3c')](x)||this['templateP1'](x)||this[_0x30da('0x40')](x)||this['templateP4'](x)||this['templateP6'](x)||this['templateQ1'](x)||this[_0x30da('0x3f')](x)||this[_0x30da('0x41')](x))){return null;}}}return this[_0x30da('0x42')];}['templateL1'](lNode){if(lNode[_0x30da('0x43')]())return![];lNode[_0x30da('0x44')]=NodeLabel[_0x30da('0x45')];return!![];}[_0x30da('0x46')](pNode){if(pNode[_0x30da('0x47')]!=NodeType['pNode'])return![];if(pNode[_0x30da('0x48')]!=pNode[_0x30da('0x49')])return![];pNode[_0x30da('0x44')]=NodeLabel[_0x30da('0x45')];return!![];}[_0x30da('0x40')](pNode){if(pNode[_0x30da('0x47')]!=NodeType[_0x30da('0x4a')])return![];if(pNode[_0x30da('0x4b')]>0x0)return![];if(pNode['fullChildren']==0x0)return![];if(pNode[_0x30da('0x49')]>0x1&&pNode['emptyChildren']>0x0){let fullSubTree=new PQTree['Node']();fullSubTree[_0x30da('0x44')]=NodeLabel[_0x30da('0x45')];pNode['moveFullChildrenTo'](fullSubTree);pNode[_0x30da('0x4c')](fullSubTree);this[_0x30da('0x42')]=fullSubTree;}else{this[_0x30da('0x42')]=pNode[_0x30da('0x4d')]();}return!![];}[_0x30da('0x3d')](pNode){if(pNode[_0x30da('0x47')]!=NodeType[_0x30da('0x4a')])return![];if(pNode[_0x30da('0x4b')]>0x0)return![];if(pNode[_0x30da('0x49')]==0x0)return![];let parent=pNode['parent'];let qNode=new PQTree['Node']();qNode[_0x30da('0x47')]=NodeType['qNode'];qNode[_0x30da('0x44')]=NodeLabel[_0x30da('0x4e')];if(pNode[_0x30da('0x49')]>0x1){let fullSubTree=new PQTree[(_0x30da('0x28'))]();fullSubTree[_0x30da('0x44')]=NodeLabel[_0x30da('0x45')];pNode[_0x30da('0x4f')](fullSubTree);qNode[_0x30da('0x4c')](fullSubTree);}else{let fullChild=pNode[_0x30da('0x4d')]();pNode['removeChild'](fullChild);qNode[_0x30da('0x4c')](fullChild);}parent[_0x30da('0x50')](pNode,qNode);if(pNode[_0x30da('0x51')]>0x1){let emptySubTree=pNode;pNode[_0x30da('0x25')](![]);qNode[_0x30da('0x4c')](emptySubTree);}else{let emptyChild=pNode[_0x30da('0x52')]();pNode[_0x30da('0x53')](emptyChild);qNode['addChild'](emptyChild);}return!![];}[_0x30da('0x54')](pNode){if(pNode[_0x30da('0x47')]!=NodeType[_0x30da('0x4a')])return![];if(pNode[_0x30da('0x4b')]!=0x1)return![];let qNode=pNode[_0x30da('0x55')](0x0);if(pNode[_0x30da('0x49')]>0x0){if(pNode[_0x30da('0x49')]>0x1){let fullSubTree=new PQTree[(_0x30da('0x28'))]();fullSubTree['label']=NodeLabel['full'];pNode[_0x30da('0x4f')](fullSubTree);qNode['addChild'](fullSubTree);}else{let fullChild=pNode[_0x30da('0x4d')]();pNode[_0x30da('0x53')](fullChild);qNode[_0x30da('0x4c')](fullChild);}}if(pNode[_0x30da('0x48')]==0x1){if(pNode[_0x30da('0x33')]!=null){if(pNode['parent']['destroyed']){pNode[_0x30da('0x56')](qNode);}else{pNode['parent'][_0x30da('0x50')](pNode,qNode);pNode['destroy']();this[_0x30da('0x42')]=qNode;}}else{qNode[_0x30da('0x33')]=null;this[_0x30da('0x27')]=qNode;this[_0x30da('0x42')]=qNode;}}else{this['pertinentRoot']=qNode;}return!![];}['templateP5'](pNode){if(pNode[_0x30da('0x47')]!=NodeType[_0x30da('0x4a')])return![];if(pNode['partialChildren']!=0x1)return![];let parent=pNode['parent'];let qNode=pNode['getPartialChild'](0x0);pNode[_0x30da('0x53')](qNode);if(pNode['fullChildren']>0x0){if(pNode['fullChildren']>0x1){let fullSubTree=new PQTree[(_0x30da('0x28'))]();fullSubTree[_0x30da('0x44')]=NodeLabel[_0x30da('0x45')];pNode[_0x30da('0x4f')](fullSubTree);qNode[_0x30da('0x4c')](fullSubTree);}else{let fullChild=pNode[_0x30da('0x4d')]();pNode[_0x30da('0x53')](fullChild);qNode[_0x30da('0x4c')](fullChild);}}parent['replaceChild'](pNode,qNode);switch(pNode['emptyChildren']){case 0x0:pNode[_0x30da('0x57')]();break;case 0x1:{let emptyChild=pNode[_0x30da('0x52')]();pNode[_0x30da('0x53')](emptyChild);qNode[_0x30da('0x4c')](emptyChild);pNode[_0x30da('0x57')]();}break;default:pNode[_0x30da('0x25')](![]);qNode[_0x30da('0x4c')](pNode);break;}return!![];}['templateP6'](pNode){if(pNode[_0x30da('0x47')]!=NodeType[_0x30da('0x4a')])return![];if(pNode[_0x30da('0x4b')]!=0x2)return![];let qNode1=pNode[_0x30da('0x55')](0x0);let qNode2=pNode['getPartialChild'](0x1);if(!qNode1[_0x30da('0x58')]()||!qNode2[_0x30da('0x58')]())return![];qNode1[_0x30da('0x30')]=pNode[_0x30da('0x30')];if(pNode[_0x30da('0x49')]>0x0){if(pNode[_0x30da('0x49')]>0x1){let fullSubTree=new PQTree[(_0x30da('0x28'))]();fullSubTree['label']=NodeLabel['full'];pNode[_0x30da('0x4f')](fullSubTree);qNode1[_0x30da('0x4c')](fullSubTree);}else{let fullChild=pNode[_0x30da('0x4d')]();pNode['removeChild'](fullChild);qNode1[_0x30da('0x4c')](fullChild);}}if(qNode1[_0x30da('0x44')]==NodeLabel[_0x30da('0x4e')]&&qNode2[_0x30da('0x44')]==NodeLabel['partial']){let endMostChildren1=qNode2[_0x30da('0x59')];let endMostChildren2=qNode1[_0x30da('0x59')];if(endMostChildren1['count']==0x2&&endMostChildren2['count']==0x2){let tempNode=null;let fullEndMostNode1=null;let emptyEndMostNode1=null;for(let i=0x0;i<endMostChildren1[_0x30da('0x2d')];i++){tempNode=endMostChildren1[_0x30da('0x5a')](i);if(tempNode[_0x30da('0x5b')](null,NodeLabel[_0x30da('0x45')]))fullEndMostNode1=tempNode;else if(tempNode[_0x30da('0x5b')](null,NodeLabel[_0x30da('0x5c')]))emptyEndMostNode1=tempNode;}let fullEndMostNode2=null;let emptyEndMostNode2=null;for(let i=0x0;i<endMostChildren2[_0x30da('0x2d')];i++){tempNode=endMostChildren2[_0x30da('0x5a')](i);if(tempNode[_0x30da('0x5b')](null,NodeLabel[_0x30da('0x45')]))fullEndMostNode2=tempNode;else if(tempNode[_0x30da('0x5b')](null,NodeLabel[_0x30da('0x5c')]))emptyEndMostNode2=tempNode;}if(fullEndMostNode1!=null&&emptyEndMostNode1!=null&&fullEndMostNode2!=null&&emptyEndMostNode2!=null){fullEndMostNode1['parent']=qNode1;emptyEndMostNode1[_0x30da('0x33')]=qNode1;fullEndMostNode1[_0x30da('0x34')][_0x30da('0x5d')](fullEndMostNode2);fullEndMostNode2['immediateSiblings']['add'](fullEndMostNode1);endMostChildren2['remove'](fullEndMostNode2);endMostChildren2[_0x30da('0x5d')](emptyEndMostNode1);endMostChildren1[_0x30da('0x9')](fullEndMostNode1);endMostChildren1[_0x30da('0x9')](emptyEndMostNode1);qNode2[_0x30da('0x4f')](qNode1);pNode['removeChild'](qNode2);}}}qNode2['destroy']();if(pNode['children']==0x1){if(pNode[_0x30da('0x33')]!=null){if(pNode['parent'][_0x30da('0x5e')]){pNode['becomeChild'](qNode1);}else{pNode[_0x30da('0x33')]['replaceChild'](pNode,qNode1);pNode[_0x30da('0x57')]();this['pertinentRoot']=qNode1;}}else{qNode1[_0x30da('0x33')]=null;this[_0x30da('0x27')]=qNode1;this[_0x30da('0x42')]=qNode1;}}else{this[_0x30da('0x42')]=qNode1;}return!![];}[_0x30da('0x3e')](qNode){if(qNode[_0x30da('0x47')]!=NodeType[_0x30da('0x5f')])return![];if(qNode[_0x30da('0x60')])return![];if(!qNode[_0x30da('0x61')]())return![];qNode[_0x30da('0x44')]=NodeLabel[_0x30da('0x45')];return!![];}[_0x30da('0x3f')](qNode){if(qNode[_0x30da('0x47')]!=NodeType[_0x30da('0x5f')])return![];if(qNode[_0x30da('0x60')])return![];if(qNode['partialChildren']>0x1)return![];if(!qNode[_0x30da('0x62')]())return![];if(qNode['endMostChildrenAreEmptyOrPartial']()&&qNode[_0x30da('0x49')]!=0x0)return![];qNode['label']=NodeLabel['partial'];if(qNode['partialChildren']==0x1){let partialChild=qNode['getPartialChild'](0x0);if(!qNode['fullChildrenAreAdjacentTo'](partialChild))return![];let endMostChildren=qNode[_0x30da('0x59')];if(qNode[_0x30da('0x49')]==0x0&&!endMostChildren['contains'](partialChild))return![];if(!partialChild['fullChildrenAreEndMost']())return![];qNode['absorbPartialChild'](partialChild);}return!![];}[_0x30da('0x41')](qNode){if(qNode[_0x30da('0x47')]!=NodeType[_0x30da('0x5f')])return![];if(qNode[_0x30da('0x4b')]>0x2)return![];if(!qNode[_0x30da('0x60')]&&!qNode[_0x30da('0x63')]())return![];qNode['label']=NodeLabel[_0x30da('0x4e')];if(qNode[_0x30da('0x4b')]==0x1){let partialChild=qNode[_0x30da('0x55')](0x0);if(!qNode[_0x30da('0x64')](partialChild))return![];if(!partialChild[_0x30da('0x58')]())return![];if(qNode[_0x30da('0x60')]&&!qNode['partialChildrenAtEnds']())return![];qNode[_0x30da('0x65')](partialChild);}else if(qNode['partialChildren']==0x2){let partialChild1=qNode[_0x30da('0x55')](0x0);let partialChild2=qNode[_0x30da('0x55')](0x1);if(qNode[_0x30da('0x49')]==0x0&&!partialChild1['siblingOf'](partialChild2))return![];if(!partialChild1[_0x30da('0x58')]()||!partialChild2[_0x30da('0x58')]())return![];if(!(qNode[_0x30da('0x64')](partialChild1)&&qNode[_0x30da('0x64')](partialChild2)))return![];if(qNode['pseudoRoot']&&!qNode[_0x30da('0x66')]())return![];qNode[_0x30da('0x65')](partialChild1);qNode[_0x30da('0x65')](partialChild2);}if(qNode[_0x30da('0x60')])qNode[_0x30da('0x57')]();return!![];}}PQTree[_0x30da('0x28')]=class{constructor(type,data){if(type==null)type=NodeType[_0x30da('0x4a')];this['init'](type);if(data)this['data']=data;if(type==NodeType['directionIndicator']){this[_0x30da('0x34')]=new PQTree[(_0x30da('0x67'))](-0x1);this[_0x30da('0x68')]=![];}}[_0x30da('0x24')](nodeType){this[_0x30da('0x69')]=nodeType;this[_0x30da('0x6a')]=null;this[_0x30da('0x33')]=null;this[_0x30da('0x34')]=null;this['endMostChildren']=null;this['circularLink']=null;this['left']=null;this[_0x30da('0x6b')]=null;this['childCount']=0x0;this['fullChildrenList']=null;this[_0x30da('0x6c')]=null;this[_0x30da('0x6d')]=null;this[_0x30da('0x49')]=0x0;this[_0x30da('0x6e')]=null;this[_0x30da('0x6f')]=null;this['partialRight']=null;this[_0x30da('0x4b')]=0x0;this[_0x30da('0x38')]=0x0;this[_0x30da('0x30')]=0x0;this[_0x30da('0x70')]=NodeLabel[_0x30da('0x5c')];this['blocked']=![];this[_0x30da('0x2f')]=![];this['pseudoRoot']=![];this[_0x30da('0x5e')]=![];}[_0x30da('0x57')](){if(this[_0x30da('0x60')]){this[_0x30da('0x33')]=null;this[_0x30da('0x34')]=null;this[_0x30da('0x71')]=null;this['right']=null;this['fullLeft']=null;this[_0x30da('0x6d')]=null;this[_0x30da('0x6f')]=null;this[_0x30da('0x72')]=null;this[_0x30da('0x73')]=0x0;this[_0x30da('0x4b')]=0x0;this[_0x30da('0x38')]=0x0;this['pertinentLeafCount']=0x0;this[_0x30da('0x74')]=null;this[_0x30da('0x6e')]=null;this[_0x30da('0x2f')]=![];}else{this[_0x30da('0x24')](NodeType['qNode']);}this[_0x30da('0x5e')]=!![];}[_0x30da('0x25')](reinitParent){if(typeof reinitParent==_0x30da('0x75'))reinitParent=!![];this['label']=NodeLabel['empty'];this[_0x30da('0x2f')]=![];this[_0x30da('0x36')]=![];this[_0x30da('0x38')]=0x0;this['pertinentLeafCount']=0x0;let parent=this[_0x30da('0x33')];if(reinitParent&&parent!=null&&(parent['label']!=NodeLabel['empty']||parent['queued']||parent[_0x30da('0x36')]||parent[_0x30da('0x38')]!=0x0||parent[_0x30da('0x30')]!=0x0||parent['fullChildren']!=0x0||parent[_0x30da('0x4b')]!=0x0)){parent[_0x30da('0x25')]();}}[_0x30da('0x32')](){let blockedSiblings=[];if(this['immediateSiblings']!=null){let node=this['getNonDirectedSibling'](this[_0x30da('0x34')][_0x30da('0x5a')](0x1));if(node!=null&&node['blocked'])blockedSiblings[_0x30da('0x14')](node);node=this[_0x30da('0x76')](this[_0x30da('0x34')]['get'](0x0));if(node!=null&&node[_0x30da('0x36')])blockedSiblings[_0x30da('0x14')](node);}return blockedSiblings;}['getUnblockedSiblings'](){let unblockedSiblings=[];if(this[_0x30da('0x34')]!=null){let node=this[_0x30da('0x76')](this[_0x30da('0x34')][_0x30da('0x5a')](0x1));if(node==null){node=this[_0x30da('0x77')](this['immediateSiblings'][_0x30da('0x5a')](0x1));if(node!=null)unblockedSiblings[_0x30da('0x14')](node);}else if(!node[_0x30da('0x36')]&&node[_0x30da('0x33')]!=null&&!node[_0x30da('0x33')][_0x30da('0x5e')]){unblockedSiblings[_0x30da('0x14')](node);}node=this[_0x30da('0x76')](this[_0x30da('0x34')]['get'](0x0));if(node==null){node=this[_0x30da('0x77')](this[_0x30da('0x34')][_0x30da('0x5a')](0x0));if(node!=null)unblockedSiblings[_0x30da('0x14')](node);}else if(!node[_0x30da('0x36')]&&node[_0x30da('0x33')]!=null&&!node[_0x30da('0x33')][_0x30da('0x5e')]){unblockedSiblings[_0x30da('0x14')](node);}}return unblockedSiblings;}[_0x30da('0x77')](otherSide){let endmost=null;if(this[_0x30da('0x34')][_0x30da('0x78')](otherSide)!=null)endmost=this[_0x30da('0x34')]['getOther'](otherSide)['getEndMostDirectedSibling'](this);else if(this[_0x30da('0x47')]==NodeType['directionIndicator'])endmost=this;return endmost;}[_0x30da('0x76')](otherSide){let sibling=null;if(this[_0x30da('0x34')]['getOther'](otherSide)!=null){sibling=!(this[_0x30da('0x34')][_0x30da('0x78')](otherSide)[_0x30da('0x47')]==NodeType[_0x30da('0x79')])?this[_0x30da('0x34')][_0x30da('0x78')](otherSide):this[_0x30da('0x34')][_0x30da('0x78')](otherSide)[_0x30da('0x76')](this);}return sibling;}[_0x30da('0x7a')](blockedList){this['type']=NodeType['qNode'];this['pseudoRoot']=!![];let endmostChildren=[];let prevNode=null;for(let node of blockedList){if(!node[_0x30da('0x36')])continue;node[_0x30da('0x33')]=this;for(let i=0x0;i<=0x1;++i){if(!node['getNonDirectedSibling'](node['immediateSiblings'][_0x30da('0x5a')](i))[_0x30da('0x36')]){if(endmostChildren[_0x30da('0x16')]==0x0)prevNode=node[_0x30da('0x34')][_0x30da('0x5a')](0x1-i);endmostChildren[_0x30da('0x14')](node);break;}}}let prchildren=[];let prchild=endmostChildren[0x0];prchildren[_0x30da('0x14')](prchild);prchild[_0x30da('0x33')]=this;while(prchild!=endmostChildren[0x1]){let swap=prchild;prchild=prchild[_0x30da('0x34')][_0x30da('0x78')](prevNode);prevNode=swap;prchildren[_0x30da('0x14')](prchild);prchild[_0x30da('0x33')]=this;}for(let child of prchildren)this[_0x30da('0x4c')](child,![]);this[_0x30da('0x59')][_0x30da('0x5d')](prchildren[0x0]);this[_0x30da('0x59')][_0x30da('0x5d')](prchildren[prchildren[_0x30da('0x16')]-0x1]);}[_0x30da('0x37')](){let blockedSiblings=[];for(let i=0x0;i<this[_0x30da('0x34')][_0x30da('0x2d')];i++){let previousNode=this;let currentNode=this[_0x30da('0x34')]['get'](i);while(currentNode!=null&&(currentNode[_0x30da('0x36')]||currentNode[_0x30da('0x47')]==NodeType[_0x30da('0x79')])){if(!(currentNode[_0x30da('0x47')]==NodeType[_0x30da('0x79')]))blockedSiblings[_0x30da('0x14')](currentNode);let nextNode=currentNode[_0x30da('0x34')]['getOther'](previousNode);previousNode=currentNode;currentNode=nextNode;}}return blockedSiblings;}[_0x30da('0x31')](){this[_0x30da('0x36')]=!![];}[_0x30da('0x35')](){this[_0x30da('0x36')]=![];}[_0x30da('0x3b')](){this[_0x30da('0x2f')]=!![];}['fullChildrenAreAdjacent'](){if(this['fullChildren']==0x0)return!![];let currentChild=null;let fullCount=0x1;for(let i=0x0;i<this[_0x30da('0x7b')][_0x30da('0x34')][_0x30da('0x2d')];i++){currentChild=this['fullChildrenList'][_0x30da('0x34')]['get'](i);let previousChild=this[_0x30da('0x7b')];while(fullCount<this[_0x30da('0x49')]&&currentChild!=null&&(currentChild['label']==NodeLabel['full']||currentChild[_0x30da('0x47')]==NodeType['directionIndicator'])){if(!(currentChild[_0x30da('0x47')]==NodeType[_0x30da('0x79')]))fullCount++;let nextChild=currentChild[_0x30da('0x34')][_0x30da('0x78')](previousChild);previousChild=currentChild;currentChild=nextChild;}}return fullCount==this[_0x30da('0x49')];}['fullChildrenAreAdjacentTo'](node){if(this['fullChildren']==0x0)return!![];return this['fullChildrenAreAdjacent']()&&(node[_0x30da('0x34')][_0x30da('0x5a')](0x0)!=null&&node['immediateSiblings']['get'](0x0)[_0x30da('0x5b')](node,NodeLabel[_0x30da('0x45')])||node['immediateSiblings'][_0x30da('0x5a')](0x1)!=null&&node[_0x30da('0x34')][_0x30da('0x5a')](0x1)[_0x30da('0x5b')](node,NodeLabel[_0x30da('0x45')]));}[_0x30da('0x58')](){if(this['fullChildren']==0x0)return!![];if(!this[_0x30da('0x62')]())return![];for(let i=0x0;i<this[_0x30da('0x59')][_0x30da('0x2d')];i++){if(this[_0x30da('0x60')]){let endNode=this[_0x30da('0x59')][_0x30da('0x5a')](i);if(endNode['immediateSiblings']['get'](0x0)!=null&&endNode[_0x30da('0x34')][_0x30da('0x5a')](0x0)[_0x30da('0x33')]!=this){endNode=endNode[_0x30da('0x34')]['get'](0x0);}else if(endNode[_0x30da('0x34')][_0x30da('0x5a')](0x1)!=null&&endNode[_0x30da('0x34')][_0x30da('0x5a')](0x1)[_0x30da('0x33')]!=this){endNode=endNode[_0x30da('0x34')][_0x30da('0x5a')](0x1);}if(this[_0x30da('0x59')][_0x30da('0x5a')](i)['checkLabelDirected'](endNode,NodeLabel[_0x30da('0x45')]))return!![];}else{if(this['endMostChildren']['get'](i)[_0x30da('0x5b')](null,NodeLabel[_0x30da('0x45')]))return!![];}}return![];}[_0x30da('0x66')](){if(this[_0x30da('0x4b')]==0x0)return!![];if(this[_0x30da('0x4b')]==0x1){for(let i=0x0;i<this[_0x30da('0x59')]['count'];i++){if(this['pseudoRoot']){let endNode=this[_0x30da('0x59')][_0x30da('0x5a')](i);if(endNode[_0x30da('0x34')][_0x30da('0x5a')](0x0)!=null&&endNode[_0x30da('0x34')][_0x30da('0x5a')](0x0)[_0x30da('0x33')]!=this){endNode=endNode[_0x30da('0x34')][_0x30da('0x5a')](0x0);}else if(endNode[_0x30da('0x34')]['get'](0x1)!=null&&endNode[_0x30da('0x34')]['get'](0x1)['parent']!=this){endNode=endNode[_0x30da('0x34')]['get'](0x1);}if(this[_0x30da('0x59')][_0x30da('0x5a')](i)[_0x30da('0x5b')](endNode,NodeLabel[_0x30da('0x4e')]))return!![];}else{if(this['endMostChildren'][_0x30da('0x5a')](i)[_0x30da('0x5b')](null,NodeLabel[_0x30da('0x4e')]))return!![];}}return![];}for(let i=0x0;i<this[_0x30da('0x59')][_0x30da('0x2d')];i++){if(this[_0x30da('0x60')]){let endNode=this[_0x30da('0x59')]['get'](i);if(endNode[_0x30da('0x34')][_0x30da('0x5a')](0x0)!=null&&endNode[_0x30da('0x34')]['get'](0x0)[_0x30da('0x33')]!=this){endNode=endNode['immediateSiblings'][_0x30da('0x5a')](0x0);}else if(endNode[_0x30da('0x34')][_0x30da('0x5a')](0x1)!=null&&endNode[_0x30da('0x34')][_0x30da('0x5a')](0x1)['parent']!=this){endNode=endNode[_0x30da('0x34')]['get'](0x1);}if(!this['endMostChildren']['get'](i)[_0x30da('0x5b')](endNode,NodeLabel['partial']))return![];}else{if(!this[_0x30da('0x59')]['get'](i)[_0x30da('0x5b')](null,NodeLabel['partial']))return![];}}return!![];}[_0x30da('0x63')](){for(let i=0x0;i<this[_0x30da('0x59')][_0x30da('0x2d')];i++){if(this[_0x30da('0x59')][_0x30da('0x5a')](i)['checkLabelDirected'](null,NodeLabel[_0x30da('0x45')]))return![];}return!![];}['childrenAreFull'](){if(this[_0x30da('0x47')]==NodeType[_0x30da('0x5f')]){let countFullEndMost=0x0;for(let i=0x0;i<this['endMostChildren']['count'];i++){if(this[_0x30da('0x59')][_0x30da('0x5a')](i)[_0x30da('0x5b')](null,NodeLabel[_0x30da('0x45')]))countFullEndMost++;}return countFullEndMost==this['endMostChildren'][_0x30da('0x2d')]&&this[_0x30da('0x62')]();}return this['fullChildren']==this[_0x30da('0x73')];}[_0x30da('0x7c')](){if(this[_0x30da('0x59')][_0x30da('0x2d')]==0x2)return this['endMostChildren'][_0x30da('0x5a')](0x0)[_0x30da('0x34')]['get'](0x0)==this['endMostChildren']['get'](0x1);return![];}[_0x30da('0x55')](index){if(index==0x0)return this['partialChildrenList'];if(index==0x1)return this['partialChildrenList'][_0x30da('0x72')];return null;}[_0x30da('0x4d')](){return this[_0x30da('0x7b')];}[_0x30da('0x52')](){let child=this[_0x30da('0x74')];do{if(child[_0x30da('0x44')]==NodeLabel[_0x30da('0x5c')])break;child=child[_0x30da('0x6b')];}while(child!=this[_0x30da('0x74')]);return child;}[_0x30da('0x7d')](node){this[_0x30da('0x49')]++;node['fullLeft']=null;node[_0x30da('0x6d')]=null;if(this[_0x30da('0x7b')]==null){this[_0x30da('0x7b')]=node;this[_0x30da('0x7b')]['fullLeft']=this[_0x30da('0x7b')];this[_0x30da('0x7b')][_0x30da('0x6d')]=this[_0x30da('0x7b')];}else{node[_0x30da('0x6c')]=this[_0x30da('0x7b')][_0x30da('0x6c')];node[_0x30da('0x6c')][_0x30da('0x6d')]=node;this[_0x30da('0x7b')]['fullLeft']=node;node['fullRight']=this[_0x30da('0x7b')];this['fullChildrenList']=node;}}[_0x30da('0x7e')](node){this[_0x30da('0x49')]--;if(node[_0x30da('0x6d')]==node){node[_0x30da('0x6d')]=null;node[_0x30da('0x6c')]=null;this[_0x30da('0x7b')]=null;}else{if(node==this[_0x30da('0x7b')]){this[_0x30da('0x7b')]=this[_0x30da('0x7b')][_0x30da('0x6d')];}node[_0x30da('0x6d')]['fullLeft']=node['fullLeft'];node[_0x30da('0x6c')][_0x30da('0x6d')]=node[_0x30da('0x6d')];node[_0x30da('0x6c')]=null;node[_0x30da('0x6d')]=null;}}[_0x30da('0x7f')](node){this['partialChildren']++;node[_0x30da('0x6f')]=null;node['partialRight']=null;if(this['partialChildrenList']==null){this[_0x30da('0x6e')]=node;this['partialChildrenList'][_0x30da('0x6f')]=this['partialChildrenList'];this[_0x30da('0x6e')][_0x30da('0x72')]=this[_0x30da('0x6e')];}else{node[_0x30da('0x6f')]=this[_0x30da('0x6e')][_0x30da('0x6f')];node[_0x30da('0x6f')][_0x30da('0x72')]=node;this[_0x30da('0x6e')][_0x30da('0x6f')]=node;node['partialRight']=this[_0x30da('0x6e')];this[_0x30da('0x6e')]=node;}}[_0x30da('0x80')](node){this[_0x30da('0x4b')]--;if(node[_0x30da('0x72')]==node){node['partialRight']=null;node[_0x30da('0x6f')]=null;this[_0x30da('0x6e')]=null;}else{if(node==this[_0x30da('0x6e')]){this[_0x30da('0x6e')]=this[_0x30da('0x6e')][_0x30da('0x72')];}node['partialRight'][_0x30da('0x6f')]=node[_0x30da('0x6f')];node[_0x30da('0x6f')][_0x30da('0x72')]=node['partialRight'];node[_0x30da('0x6f')]=null;node[_0x30da('0x72')]=null;}}['addChildToPNode'](node){node[_0x30da('0x33')]=this;this[_0x30da('0x73')]++;node[_0x30da('0x71')]=null;node[_0x30da('0x6b')]=null;node[_0x30da('0x34')]=null;if(this['circularLink']==null){this[_0x30da('0x74')]=node;this['circularLink']['left']=this[_0x30da('0x74')];this[_0x30da('0x74')][_0x30da('0x6b')]=this['circularLink'];}else{node['left']=this[_0x30da('0x74')][_0x30da('0x71')];node[_0x30da('0x71')][_0x30da('0x6b')]=node;this[_0x30da('0x74')][_0x30da('0x71')]=node;node[_0x30da('0x6b')]=this[_0x30da('0x74')];this[_0x30da('0x74')]=node;}}['removeChildFromPNode'](node){node[_0x30da('0x33')]=null;this[_0x30da('0x73')]--;if(node==this[_0x30da('0x74')]){if(node[_0x30da('0x6b')]==node){node[_0x30da('0x6b')]=null;node['left']=null;this[_0x30da('0x74')]=null;}else{this[_0x30da('0x74')]=this['circularLink'][_0x30da('0x6b')];node['right']['left']=node[_0x30da('0x71')];node[_0x30da('0x71')][_0x30da('0x6b')]=node[_0x30da('0x6b')];node[_0x30da('0x71')]=null;node['right']=null;}}else{node[_0x30da('0x6b')][_0x30da('0x71')]=node['left'];node[_0x30da('0x71')]['right']=node['right'];node[_0x30da('0x71')]=null;node[_0x30da('0x6b')]=null;}}[_0x30da('0x81')](node){node['parent']=this;let sibling=null;if(node['immediateSiblings']!=null){if(node['immediateSiblings']['get'](0x0)!=null&&this[_0x30da('0x59')]['contains'](node[_0x30da('0x34')][_0x30da('0x5a')](0x0))){sibling=node[_0x30da('0x34')][_0x30da('0x5a')](0x0);}else if(node[_0x30da('0x34')][_0x30da('0x5a')](0x1)!=null&&this[_0x30da('0x59')][_0x30da('0x82')](node[_0x30da('0x34')]['get'](0x1))){sibling=node[_0x30da('0x34')][_0x30da('0x5a')](0x1);}}else{node[_0x30da('0x34')]=new PQTree[(_0x30da('0x67'))]();}if(sibling==null){for(let i=0x0;i<this[_0x30da('0x59')]['count'];i++){if(this[_0x30da('0x59')][_0x30da('0x5a')](i)[_0x30da('0x44')]==node['label']){sibling=this['endMostChildren'][_0x30da('0x5a')](i);break;}if(this['endMostChildren'][_0x30da('0x5a')](i)[_0x30da('0x44')]==NodeLabel[_0x30da('0x45')]&&node[_0x30da('0x44')]==NodeLabel[_0x30da('0x4e')]){sibling=this[_0x30da('0x59')][_0x30da('0x5a')](i);break;}if(this['endMostChildren']['get'](i)[_0x30da('0x44')]==NodeLabel[_0x30da('0x4e')]&&node['label']==NodeLabel[_0x30da('0x45')]){sibling=this[_0x30da('0x59')]['get'](i);break;}}}if(sibling==null&&this[_0x30da('0x59')][_0x30da('0x2d')]>0x0){sibling=this[_0x30da('0x59')][_0x30da('0x5a')](0x0);}if(sibling!=null){if(this['endMostChildren'][_0x30da('0x2d')]>0x1){this[_0x30da('0x59')][_0x30da('0x9')](sibling);}this[_0x30da('0x59')][_0x30da('0x5d')](node);sibling['immediateSiblings'][_0x30da('0x5d')](node);node['immediateSiblings'][_0x30da('0x5d')](sibling);}else{this['endMostChildren']['add'](node);}}['removeChildFromQNode'](node){node[_0x30da('0x33')]=null;if(node[_0x30da('0x34')][_0x30da('0x5a')](0x1)==null){this[_0x30da('0x59')][_0x30da('0x9')](node);if(node[_0x30da('0x34')]['get'](0x0)!=null){if(!this['endMostChildren']['contains'](node['immediateSiblings']['get'](0x0))){this['endMostChildren'][_0x30da('0x5d')](node['immediateSiblings'][_0x30da('0x5a')](0x0));}node['immediateSiblings'][_0x30da('0x5a')](0x0)[_0x30da('0x34')][_0x30da('0x9')](node);node['immediateSiblings']=null;}}else{node[_0x30da('0x34')][_0x30da('0x5a')](0x0)[_0x30da('0x34')][_0x30da('0x9')](node);node[_0x30da('0x34')][_0x30da('0x5a')](0x1)[_0x30da('0x34')]['remove'](node);node['immediateSiblings']=null;}}[_0x30da('0x83')](node){node[_0x30da('0x33')]=this;if(this[_0x30da('0x74')]==null){this['circularLink']=node;}if(node[_0x30da('0x34')]!=null&&node[_0x30da('0x34')][_0x30da('0x2d')]==0x2){if(!(node['immediateSiblings'][_0x30da('0x5a')](0x0)[_0x30da('0x33')]==this&&node[_0x30da('0x34')]['get'](0x1)[_0x30da('0x33')]==this)){this[_0x30da('0x59')]['add'](node);}}}['addChild'](node,updateTree){if(typeof updateTree==_0x30da('0x75'))updateTree=!![];if(node[_0x30da('0x44')]==NodeLabel['full'])this[_0x30da('0x7d')](node);else if(node['label']==NodeLabel['partial'])this[_0x30da('0x7f')](node);if(!updateTree)return;if(this[_0x30da('0x47')]==NodeType[_0x30da('0x4a')])this['addChildToPNode'](node);else if(this[_0x30da('0x47')]==NodeType[_0x30da('0x5f')]&&!this[_0x30da('0x60')])this[_0x30da('0x81')](node);else if(this[_0x30da('0x47')]==NodeType[_0x30da('0x5f')]&&this[_0x30da('0x60')])this[_0x30da('0x83')](node);}[_0x30da('0x53')](node,updateTree){if(typeof updateTree==_0x30da('0x75'))updateTree=!![];if(node['label']==NodeLabel[_0x30da('0x45')])this[_0x30da('0x7e')](node);else if(node[_0x30da('0x44')]==NodeLabel['partial'])this[_0x30da('0x80')](node);if(!updateTree)return;if(this['type']==NodeType['pNode'])this[_0x30da('0x84')](node);else if(this[_0x30da('0x47')]==NodeType['qNode'])this[_0x30da('0x85')](node);}['replaceChild'](node,newNode){if(this['type']==NodeType[_0x30da('0x5f')]){newNode[_0x30da('0x34')]=node[_0x30da('0x34')];if(node[_0x30da('0x34')][_0x30da('0x5a')](0x0)!=null)node[_0x30da('0x34')][_0x30da('0x5a')](0x0)[_0x30da('0x34')][_0x30da('0x86')](node,newNode);if(node[_0x30da('0x34')][_0x30da('0x5a')](0x1)!=null)node[_0x30da('0x34')][_0x30da('0x5a')](0x1)[_0x30da('0x34')][_0x30da('0x86')](node,newNode);if(this['endMostChildren'][_0x30da('0x9')](node))this[_0x30da('0x59')]['add'](newNode);}else{newNode[_0x30da('0x71')]=node[_0x30da('0x71')];if(node[_0x30da('0x71')]!=null)node[_0x30da('0x71')][_0x30da('0x6b')]=newNode;newNode[_0x30da('0x6b')]=node['right'];if(node[_0x30da('0x6b')]!=null)node[_0x30da('0x6b')][_0x30da('0x71')]=newNode;}newNode[_0x30da('0x33')]=this;this[_0x30da('0x53')](node,![]);this[_0x30da('0x4c')](newNode,![]);if(this[_0x30da('0x74')]==node)this[_0x30da('0x74')]=newNode;node[_0x30da('0x33')]=null;node['immediateSiblings']=null;node[_0x30da('0x71')]=null;node[_0x30da('0x6b')]=null;node['fullLeft']=null;node['fullRight']=null;node[_0x30da('0x6f')]=null;node['partialRight']=null;}[_0x30da('0x87')](si){let node=this[_0x30da('0x34')][_0x30da('0x5a')](si);if(node==null)return null;if(node[_0x30da('0x5b')](this,NodeLabel[_0x30da('0x45')])||node['checkLabelDirected'](this,NodeLabel[_0x30da('0x4e')]))return node;return null;}[_0x30da('0x88')](si){let node=this['immediateSiblings'][_0x30da('0x5a')](si);if(node==null)return null;if(node[_0x30da('0x5b')](this,NodeLabel[_0x30da('0x5c')]))return node;return null;}['getEndMostChild'](nodeLabel){let child=this[_0x30da('0x59')]['get'](0x0);if(child[_0x30da('0x5b')](null,nodeLabel))return child;if(this[_0x30da('0x59')]['count']>0x1){child=this[_0x30da('0x59')][_0x30da('0x5a')](0x1);if(child[_0x30da('0x5b')](null,nodeLabel))return child;}return null;}['absorbPartialChild'](qNode){if(qNode['type']!=NodeType[_0x30da('0x5f')])return;if(qNode[_0x30da('0x44')]!=NodeLabel[_0x30da('0x4e')])return;let fullConnectChild=qNode[_0x30da('0x87')](0x0)||qNode[_0x30da('0x87')](0x1);let emptyConnectChild=qNode[_0x30da('0x88')](0x0)||qNode[_0x30da('0x88')](0x1);let fullJoinChild=qNode[_0x30da('0x89')](NodeLabel[_0x30da('0x45')]);let emptyJoinChild=qNode[_0x30da('0x89')](NodeLabel[_0x30da('0x5c')]);if(fullConnectChild==null){this['endMostChildren'][_0x30da('0x9')](qNode);fullJoinChild[_0x30da('0x33')]=this;this[_0x30da('0x59')][_0x30da('0x5d')](fullJoinChild);}else{fullJoinChild[_0x30da('0x34')][_0x30da('0x5d')](fullConnectChild);fullConnectChild[_0x30da('0x34')][_0x30da('0x86')](qNode,fullJoinChild);}if(emptyConnectChild==null){this[_0x30da('0x59')]['remove'](qNode);emptyJoinChild[_0x30da('0x33')]=this;this[_0x30da('0x59')]['add'](emptyJoinChild);}else{emptyJoinChild[_0x30da('0x34')][_0x30da('0x5d')](emptyConnectChild);emptyConnectChild[_0x30da('0x34')]['replace'](qNode,emptyJoinChild);}if(qNode['fullChildren']>0x0){let node=qNode[_0x30da('0x7b')];do{let nextFull=node[_0x30da('0x6d')];qNode['removeChild'](node,![]);this[_0x30da('0x4c')](node,![]);node['parent']=this;if(nextFull==node)break;node=nextFull;}while(qNode['fullChildrenList']!=null);}this[_0x30da('0x53')](qNode,![]);qNode[_0x30da('0x57')]();}[_0x30da('0x8a')](node){if(this[_0x30da('0x49')]==0x0)return;let newSiblings=[];let fullLeavesStart=this[_0x30da('0x8b')]();if(fullLeavesStart!=null)newSiblings[_0x30da('0x14')](fullLeavesStart);let fullLeavesEnd=this['getFullLeavesTo']();if(fullLeavesEnd!=null)newSiblings[_0x30da('0x14')](fullLeavesEnd);if(newSiblings[_0x30da('0x16')]==0x0){this[_0x30da('0x59')]=new PQTree[(_0x30da('0x67'))]();this[_0x30da('0x59')][_0x30da('0x5d')](node);}else if(newSiblings[_0x30da('0x16')]==0x1){for(let i=0x0;i<this['endMostChildren']['count'];i++){let endNode=null;if(this[_0x30da('0x60')]){endNode=this['endMostChildren'][_0x30da('0x5a')](i);let siblings=endNode[_0x30da('0x34')];if(siblings[_0x30da('0x5a')](0x0)!=null&&siblings[_0x30da('0x5a')](0x0)['parent']!=this)endNode=siblings['get'](0x0);else if(siblings[_0x30da('0x5a')](0x1)!=null&&siblings[_0x30da('0x5a')](0x1)['parent']!=this)endNode=siblings[_0x30da('0x5a')](0x1);}if(this['endMostChildren'][_0x30da('0x5a')](i)[_0x30da('0x5b')](endNode,NodeLabel['full'])){this['endMostChildren'][_0x30da('0x8c')](i);break;}}this['endMostChildren'][_0x30da('0x5d')](node);}node[_0x30da('0x34')]=newSiblings[_0x30da('0x16')]>0x0?new PQTree[(_0x30da('0x67'))]():null;for(let i=0x0;i<newSiblings['length'];i++){let current=newSiblings[i];let siblings=current[_0x30da('0x34')];for(let j=0x0;j<=0x1;++j){if(siblings[_0x30da('0x5a')](j)!=null&&siblings[_0x30da('0x5a')](j)['checkLabelDirected'](current,NodeLabel['full'])){siblings[_0x30da('0x86')](siblings[_0x30da('0x5a')](j),node);node[_0x30da('0x34')][_0x30da('0x5d')](current);break;}}}node[_0x30da('0x33')]=this;while(this[_0x30da('0x7b')]!=null){let exFull=this[_0x30da('0x7b')];this[_0x30da('0x53')](exFull,![]);exFull['_label']=NodeLabel[_0x30da('0x5c')];}}[_0x30da('0x56')](theChild){this['circularLink']=theChild[_0x30da('0x74')];this['fullChildrenList']=theChild[_0x30da('0x7b')];this['partialChildrenList']=theChild[_0x30da('0x6e')];this['endMostChildren']=theChild['endMostChildren'];this[_0x30da('0x73')]=theChild[_0x30da('0x73')];this['fullChildren']=theChild[_0x30da('0x49')];this[_0x30da('0x4b')]=theChild[_0x30da('0x4b')];this[_0x30da('0x38')]=theChild[_0x30da('0x38')];this[_0x30da('0x30')]=theChild[_0x30da('0x30')];this[_0x30da('0x69')]=theChild[_0x30da('0x47')];this['data']=theChild[_0x30da('0x6a')];this[_0x30da('0x5e')]=theChild[_0x30da('0x5e')];this[_0x30da('0x60')]=theChild[_0x30da('0x60')];if(this[_0x30da('0x47')]==NodeType[_0x30da('0x5f')]){for(let i=0x0;i<this[_0x30da('0x59')][_0x30da('0x2d')];i++)this[_0x30da('0x59')][_0x30da('0x5a')](i)[_0x30da('0x33')]=this;if(this[_0x30da('0x49')]>0x0){let currentNode=this['fullChildrenList'];do{let nextNode=currentNode[_0x30da('0x6d')];currentNode[_0x30da('0x33')]=this;if(nextNode!=currentNode)currentNode=nextNode;else break;}while(currentNode!=this['fullChildrenList']);}}theChild[_0x30da('0x57')]();}['moveFullChildrenTo'](newParent){if(this[_0x30da('0x49')]>0x0){if(this[_0x30da('0x47')]==NodeType[_0x30da('0x4a')]){let currentNode=this['fullChildrenList'];do{let nextNode=currentNode[_0x30da('0x6d')];this['removeChild'](currentNode);newParent[_0x30da('0x4c')](currentNode);currentNode=nextNode;}while(this[_0x30da('0x7b')]!=null);}if(this['type']==NodeType[_0x30da('0x5f')]){let currentNode=this[_0x30da('0x7b')];do{let nextNode=currentNode[_0x30da('0x6d')];this[_0x30da('0x53')](currentNode,![]);newParent['addChild'](currentNode,![]);currentNode[_0x30da('0x33')]=newParent;if(nextNode!=currentNode)currentNode=nextNode;else break;}while(this[_0x30da('0x7b')]!=null);}}}[_0x30da('0x5b')](node,nodeLabel){if(this[_0x30da('0x47')]!=NodeType[_0x30da('0x79')])return this[_0x30da('0x44')]==nodeLabel;let sibling=this[_0x30da('0x34')]['getOther'](node);return sibling!=null&&sibling['checkLabelDirected'](this,nodeLabel);}[_0x30da('0x43')](){if(this[_0x30da('0x47')]==NodeType[_0x30da('0x4a')])return this[_0x30da('0x73')]>0x0;if(this['type']==NodeType[_0x30da('0x5f')])return this['endMostChildren']['count']>0x0;return![];}[_0x30da('0x8d')](){return[this[_0x30da('0x59')][_0x30da('0x5a')](0x0)[_0x30da('0x8e')](),this[_0x30da('0x59')][_0x30da('0x5a')](0x1)[_0x30da('0x8e')]()];}[_0x30da('0x8f')](list,nodeType){if(this[_0x30da('0x47')]==nodeType)list['push'](this);if(this[_0x30da('0x47')]==NodeType['pNode']){if(this['hasChildren']()){let child=this[_0x30da('0x74')];do{child['getAllNodes'](list,nodeType);child=child[_0x30da('0x6b')];}while(child!=this['circularLink']);}}if(this[_0x30da('0x47')]==NodeType[_0x30da('0x5f')]){for(let child of this[_0x30da('0x90')]())child[_0x30da('0x8f')](list,nodeType);}}[_0x30da('0x90')](){let list=[];if(this[_0x30da('0x43')]()){let previousNode=null;let child=this['endMostChildren'][_0x30da('0x5a')](0x0);let lastNode=null;if(this['pseudoRoot']){if(child[_0x30da('0x34')][_0x30da('0x5a')](0x0)!=null&&child['immediateSiblings'][_0x30da('0x5a')](0x0)[_0x30da('0x33')]!=this){previousNode=child[_0x30da('0x34')][_0x30da('0x5a')](0x0);}else if(child[_0x30da('0x34')][_0x30da('0x5a')](0x1)!=null&&child['immediateSiblings'][_0x30da('0x5a')](0x1)['parent']!=this){previousNode=child[_0x30da('0x34')]['get'](0x1);}if(this[_0x30da('0x59')][_0x30da('0x2d')]>0x1){let tempNode=this['endMostChildren']['get'](0x1);if(tempNode[_0x30da('0x34')][_0x30da('0x5a')](0x0)!=null&&tempNode[_0x30da('0x34')]['get'](0x0)[_0x30da('0x33')]!=this){lastNode=tempNode[_0x30da('0x34')][_0x30da('0x5a')](0x0);}else if(tempNode[_0x30da('0x34')]['get'](0x1)!=null&&tempNode[_0x30da('0x34')]['get'](0x1)[_0x30da('0x33')]!=this){lastNode=tempNode[_0x30da('0x34')][_0x30da('0x5a')](0x1);}}}do{list[_0x30da('0x14')](child);let nextNode=child[_0x30da('0x34')][_0x30da('0x78')](previousNode);previousNode=child;child=nextNode;}while(child!=lastNode);}return list;}[_0x30da('0x8e')](){if(this[_0x30da('0x48')]==0x0)return this;if(this['type']==NodeType[_0x30da('0x4a')])return this['circularLink']['getLeaf']();if(this[_0x30da('0x47')]==NodeType['qNode'])return this['endMostChildren'][_0x30da('0x5a')](0x0);return null;}[_0x30da('0x91')](node){if(this[_0x30da('0x34')][_0x30da('0x82')](node)&&node[_0x30da('0x34')][_0x30da('0x82')](this))return!![];if(this[_0x30da('0x34')]['get'](0x0)!=null&&this[_0x30da('0x34')]['get'](0x0)[_0x30da('0x47')]==NodeType[_0x30da('0x79')]&&this['immediateSiblings'][_0x30da('0x5a')](0x0)['immediateSiblings'][_0x30da('0x78')](this)==node)return!![];if(this[_0x30da('0x34')]['get'](0x1)!=null&&this['immediateSiblings'][_0x30da('0x5a')](0x1)[_0x30da('0x92')]==NodeType['directionIndicator']&&this['immediateSiblings'][_0x30da('0x5a')](0x1)[_0x30da('0x34')][_0x30da('0x78')](this)==node)return!![];return![];}[_0x30da('0x8b')](){let fullChild=this[_0x30da('0x7b')];let prevFullChild=null;let firstFullChild=null;do{if(fullChild[_0x30da('0x34')][_0x30da('0x5a')](0x0)==null||fullChild[_0x30da('0x34')]['get'](0x0)!=null&&!fullChild[_0x30da('0x34')]['get'](0x0)['checkLabelDirected'](fullChild,NodeLabel[_0x30da('0x45')])){prevFullChild=fullChild[_0x30da('0x34')][_0x30da('0x5a')](0x0);firstFullChild=fullChild;break;}if(fullChild['immediateSiblings'][_0x30da('0x5a')](0x1)==null||fullChild['immediateSiblings']['get'](0x1)!=null&&!fullChild['immediateSiblings'][_0x30da('0x5a')](0x1)[_0x30da('0x5b')](fullChild,NodeLabel[_0x30da('0x45')])){prevFullChild=fullChild[_0x30da('0x34')][_0x30da('0x5a')](0x1);firstFullChild=fullChild;break;}fullChild=fullChild[_0x30da('0x6d')];}while(fullChild!=this['fullChildrenList']);if(prevFullChild!=null&&prevFullChild['type']==NodeType[_0x30da('0x79')]){let nextNode=prevFullChild;let prevNode=firstFullChild;while(nextNode!=null&&nextNode[_0x30da('0x47')]==NodeType[_0x30da('0x79')]){let tempNode=nextNode;nextNode=nextNode[_0x30da('0x34')][_0x30da('0x78')](prevNode);prevNode=tempNode;}prevFullChild=nextNode;}return prevFullChild;}[_0x30da('0x93')](){let prevFullChild=this[_0x30da('0x8b')]();let nextFullChild=null;let fullChild=null;let tempFullChild=null;if(prevFullChild!=null){if(prevFullChild[_0x30da('0x34')]['get'](0x0)!=null&&prevFullChild[_0x30da('0x34')]['get'](0x0)[_0x30da('0x5b')](prevFullChild,NodeLabel[_0x30da('0x45')])){fullChild=prevFullChild['immediateSiblings'][_0x30da('0x5a')](0x0);}else if(prevFullChild[_0x30da('0x34')][_0x30da('0x5a')](0x1)!=null&&prevFullChild[_0x30da('0x34')]['get'](0x1)[_0x30da('0x5b')](prevFullChild,NodeLabel[_0x30da('0x45')])){fullChild=prevFullChild[_0x30da('0x34')][_0x30da('0x5a')](0x1);}nextFullChild=fullChild;let aPrevFullChild=prevFullChild;do{tempFullChild=nextFullChild;nextFullChild=nextFullChild['immediateSiblings'][_0x30da('0x78')](aPrevFullChild);aPrevFullChild=tempFullChild;}while(nextFullChild!=null&&(nextFullChild[_0x30da('0x5b')](aPrevFullChild,NodeLabel[_0x30da('0x45')])||nextFullChild['type']==NodeType[_0x30da('0x79')]));}else{fullChild=this[_0x30da('0x7b')];do{if(fullChild[_0x30da('0x34')][_0x30da('0x5a')](0x0)!=null&&!fullChild[_0x30da('0x34')][_0x30da('0x5a')](0x0)[_0x30da('0x5b')](fullChild,NodeLabel[_0x30da('0x45')])){nextFullChild=fullChild[_0x30da('0x34')][_0x30da('0x5a')](0x0);prevFullChild=fullChild;break;}if(fullChild[_0x30da('0x34')]['get'](0x1)!=null&&!fullChild['immediateSiblings'][_0x30da('0x5a')](0x1)['checkLabelDirected'](fullChild,NodeLabel[_0x30da('0x45')])){nextFullChild=fullChild[_0x30da('0x34')]['get'](0x1);prevFullChild=fullChild;break;}fullChild=fullChild[_0x30da('0x6d')];}while(fullChild!=this['fullChildrenList']);if(nextFullChild!=null&&nextFullChild['type']==NodeType[_0x30da('0x79')]){do{tempFullChild=nextFullChild;nextFullChild=nextFullChild['immediateSiblings']['getOther'](prevFullChild);prevFullChild=tempFullChild;}while(nextFullChild!=null&&nextFullChild[_0x30da('0x47')]==NodeType[_0x30da('0x79')]);}}return nextFullChild;}['getFullLeaves'](){let fullLeaves=[];let subLeaves=null;if(this[_0x30da('0x47')]==NodeType[_0x30da('0x5f')]){if(this[_0x30da('0x43')]()){let firstFullChild=null;let fullChild=this[_0x30da('0x7b')];let prevFullChild=null;do{if(fullChild[_0x30da('0x34')][_0x30da('0x5a')](0x0)==null||fullChild[_0x30da('0x34')][_0x30da('0x5a')](0x0)!=null&&!fullChild[_0x30da('0x34')][_0x30da('0x5a')](0x0)[_0x30da('0x5b')](fullChild,NodeLabel[_0x30da('0x45')])){prevFullChild=fullChild[_0x30da('0x34')][_0x30da('0x5a')](0x0);firstFullChild=fullChild;break;}if(fullChild[_0x30da('0x34')][_0x30da('0x5a')](0x1)==null||fullChild[_0x30da('0x34')][_0x30da('0x5a')](0x1)!=null&&!fullChild[_0x30da('0x34')]['get'](0x1)['checkLabelDirected'](fullChild,NodeLabel[_0x30da('0x45')])){prevFullChild=fullChild[_0x30da('0x34')][_0x30da('0x5a')](0x1);firstFullChild=fullChild;break;}fullChild=fullChild['fullRight'];}while(fullChild!=this[_0x30da('0x7b')]);if(prevFullChild!=null&&prevFullChild['type']==NodeType[_0x30da('0x79')]){let directedNodes=[];let nextNode=prevFullChild;let prevNode=firstFullChild;while(nextNode!=null&&nextNode[_0x30da('0x47')]==NodeType[_0x30da('0x79')]){if(prevNode==nextNode[_0x30da('0x94')])nextNode[_0x30da('0x68')]=![];else if(nextNode[_0x30da('0x34')][_0x30da('0x78')](prevNode)==nextNode['direction'])nextNode[_0x30da('0x68')]=!![];directedNodes[_0x30da('0x14')](nextNode);let tempNode=nextNode;nextNode=nextNode[_0x30da('0x34')][_0x30da('0x78')](prevNode);prevNode=tempNode;}for(let i=directedNodes[_0x30da('0x16')];i>0x0;i--){fullLeaves[_0x30da('0x14')](directedNodes[i-0x1]);}}fullChild=firstFullChild;do{if(fullChild[_0x30da('0x47')]==NodeType['directionIndicator']){if(prevFullChild==fullChild[_0x30da('0x94')])fullChild[_0x30da('0x68')]=!![];else if(fullChild[_0x30da('0x34')][_0x30da('0x78')](prevFullChild)==fullChild['direction'])fullChild['readInReverseDirection']=![];}subLeaves=fullChild['getFullLeaves']();fullLeaves['push'](...subLeaves);let tempFullChild=fullChild;fullChild=fullChild[_0x30da('0x34')]['getOther'](prevFullChild);prevFullChild=tempFullChild;}while(fullChild!=null&&(fullChild[_0x30da('0x5b')](prevFullChild,NodeLabel[_0x30da('0x45')])||fullChild['type']==NodeType[_0x30da('0x79')]));}}else{if(this[_0x30da('0x43')]()){let fullChild=this[_0x30da('0x7b')];do{subLeaves=fullChild[_0x30da('0x95')]();fullLeaves[_0x30da('0x14')](...subLeaves);fullChild=fullChild[_0x30da('0x6d')];}while(fullChild!=this[_0x30da('0x7b')]);}else{fullLeaves[_0x30da('0x14')](this);}}return fullLeaves;}get[_0x30da('0x47')](){return this[_0x30da('0x69')];}set['type'](value){if(this[_0x30da('0x69')]!=value){if(value==NodeType[_0x30da('0x5f')]){this['endMostChildren']=new PQTree[(_0x30da('0x67'))]();}if(value==NodeType[_0x30da('0x4a')]){let endMost1=this[_0x30da('0x59')][_0x30da('0x5a')](0x0);let endMost2=this[_0x30da('0x59')][_0x30da('0x5a')](0x1);this['_type']=NodeType['pNode'];this['circularLink']=endMost1;this[_0x30da('0x73')]=0x2;endMost1['immediateSiblings']=null;endMost1[_0x30da('0x71')]=endMost2;endMost1[_0x30da('0x6b')]=endMost2;endMost2['immediateSiblings']=null;endMost2['left']=endMost1;endMost2[_0x30da('0x6b')]=endMost1;this['endMostChildren']=null;}this['_type']=value;}}get[_0x30da('0x96')](){return this[_0x30da('0x6b')];}get['childLink'](){return this[_0x30da('0x74')];}get[_0x30da('0x48')](){return this[_0x30da('0x73')];}get['emptyChildren'](){return this[_0x30da('0x73')]-this[_0x30da('0x49')]-this['partialChildren'];}get[_0x30da('0x44')](){return this[_0x30da('0x70')];}set['label'](value){if(this[_0x30da('0x70')]!=value){if(this[_0x30da('0x33')]!=null)this['parent'][_0x30da('0x53')](this,![]);this['_label']=value;if(this[_0x30da('0x33')]!=null)this[_0x30da('0x33')]['addChild'](this,![]);}}get['unmarked'](){return!this[_0x30da('0x36')]&&!this[_0x30da('0x2f')];}get[_0x30da('0x94')](){return this['immediateSiblings']['direction'];}set[_0x30da('0x94')](value){if(this[_0x30da('0x34')][_0x30da('0x82')](value))this[_0x30da('0x34')][_0x30da('0x94')]=value;}};PQTree[_0x30da('0x67')]=class{constructor(directionIndex){this[_0x30da('0x97')]=[];this[_0x30da('0x98')]=![];if(typeof directionIndex!=_0x30da('0x75')){this[_0x30da('0x98')]=!![];this[_0x30da('0x99')]=directionIndex;}}[_0x30da('0x5d')](node){if(this['nodes'][_0x30da('0x16')]<0x2)this[_0x30da('0x97')][_0x30da('0x14')](node);if(this[_0x30da('0x98')]&&this['directedTowardsIndex']==-0x1)this['directedTowardsIndex']=this[_0x30da('0x9a')](node);}[_0x30da('0x9')](node){if(this[_0x30da('0x98')]){if(this['directedTowardsIndex']==0x1&&this[_0x30da('0x9a')](node)==0x0)this[_0x30da('0x99')]=0x0;else if(this[_0x30da('0x9a')](node)==this[_0x30da('0x99')])this[_0x30da('0x99')]=-0x1;}let index=this[_0x30da('0x97')]['indexOf'](node);if(index>-0x1){this[_0x30da('0x97')][_0x30da('0x9b')](index,0x1);return!![];}else{return![];}}[_0x30da('0x8c')](index){if(index>=this[_0x30da('0x97')][_0x30da('0x16')])return![];this['nodes'][_0x30da('0x9b')](index,0x1);return!![];}['getOther'](node){if(this[_0x30da('0x97')][_0x30da('0x16')]==0x1){if(node==null)return this[_0x30da('0x97')][0x0];if(node==this[_0x30da('0x97')][0x0])return null;}if(this[_0x30da('0x97')]['length']==0x2){if(node==this['nodes'][0x0])return this[_0x30da('0x97')][0x1];if(node==this[_0x30da('0x97')][0x1])return this[_0x30da('0x97')][0x0];}return null;}['replace'](oldNode,newNode){for(let i=0x0;i<this[_0x30da('0x97')][_0x30da('0x16')];++i){if(this[_0x30da('0x97')][i]==oldNode){this[_0x30da('0x97')][i]=newNode;break;}}}['indexOf'](node){return this[_0x30da('0x97')]['indexOf'](node);}[_0x30da('0x82')](node){return this[_0x30da('0x97')]['includes'](node);}[_0x30da('0x5a')](index){if(index<this[_0x30da('0x97')][_0x30da('0x16')])return this[_0x30da('0x97')][index];return null;}get[_0x30da('0x2d')](){return this[_0x30da('0x97')][_0x30da('0x16')];}get[_0x30da('0x94')](){if(this[_0x30da('0x99')]==-0x1)return null;return this[_0x30da('0x5a')](this['directedTowardsIndex']);}set['direction'](value){if(value==null)this[_0x30da('0x99')]=-0x1;else if(this['contains'](value))this[_0x30da('0x99')]=this[_0x30da('0x9a')](value);else this[_0x30da('0x99')]=-0x1;}};const NodeType={'pNode':0x0,'qNode':0x1,'directionIndicator':0x2};const NodeLabel={'empty':0x0,'partial':0x1,'full':0x2};class Face{constructor(prototype){if(prototype==null)this[_0x30da('0x0')]=[];else this[_0x30da('0x0')]=prototype['edges'][_0x30da('0x9c')]();}[_0x30da('0xb')](v){for(let e of this[_0x30da('0x0')])if(e['incidentWith'](v))return!![];return![];}[_0x30da('0xd')](face){for(let e1 of this[_0x30da('0x0')])for(let e2 of face[_0x30da('0x0')])if(e1==e2)return!![];return![];}[_0x30da('0xe')](face){for(let e1 of this[_0x30da('0x0')])for(let e2 of face[_0x30da('0x0')])if(e1==e2)return e1;return null;}get['degree'](){return this[_0x30da('0x0')][_0x30da('0x16')];}[_0x30da('0x9d')](){let vertices=new Set();for(let edge of this['edges']){vertices[_0x30da('0x5d')](edge[_0x30da('0x8')]);vertices[_0x30da('0x5d')](edge['destination']);}return vertices;}[_0x30da('0x9e')](){let vertices=[];for(let i=0x0;i<this[_0x30da('0x0')][_0x30da('0x16')];i++){let edge1=this[_0x30da('0x0')][i];let edge2=this[_0x30da('0x0')][(i+0x1)%this[_0x30da('0x0')][_0x30da('0x16')]];let v=edge1[_0x30da('0x1b')](edge2);vertices[_0x30da('0x14')](v);}return vertices;}['isCycle'](){for(let i=0x0;i<this[_0x30da('0x0')][_0x30da('0x16')];i++){let e1=this[_0x30da('0x0')][i];let e2=this['edges'][(i+0x1)%this['edges'][_0x30da('0x16')]];if(e1[_0x30da('0xa')]==e2[_0x30da('0xa')]||e1[_0x30da('0x8')]==e2[_0x30da('0x8')])return![];}return!![];}[_0x30da('0x9f')](vertex){for(let i=0x0;i<this['edges']['length'];i++){let e1=this['edges'][i];let e2=this['edges'][(i+0x1)%this[_0x30da('0x0')]['length']];if(e1[_0x30da('0xb')](vertex)&&e2[_0x30da('0xb')](vertex))return e2;}return null;}[_0x30da('0xa0')](edge,replacement){let edgeIndex=this[_0x30da('0x0')][_0x30da('0x9a')](edge);if(edgeIndex==-0x1)return;let nextIndex=(edgeIndex+0x1)%this[_0x30da('0x0')][_0x30da('0x16')];let reverse=replacement[0x0][_0x30da('0xd')](this[_0x30da('0x0')][nextIndex]);if(reverse){replacement=replacement[_0x30da('0x9c')]();replacement[_0x30da('0x21')]();}this[_0x30da('0x0')][_0x30da('0x9b')](edgeIndex,0x1,...replacement);}get[_0x30da('0xa1')](){if(this['_bigAngles']==null)this['_bigAngles']=[];return this[_0x30da('0xa2')];}}class Embedding{constructor(graph,copy,vertexCopyToOrigMap,edgeCopyToOrigMap){if(graph){this['graph']=graph;this[_0x30da('0xa3')]=new Map();}if(copy){this[_0x30da('0xa4')]=copy[_0x30da('0xa4')];this[_0x30da('0xa3')]=copy[_0x30da('0xa3')];}if(vertexCopyToOrigMap){this[_0x30da('0xa3')]=new Map();for(const [vertex,edges]of copy[_0x30da('0xa3')]['entries']()){let originalEdges=[];for(let edge of edges)originalEdges[_0x30da('0x14')](edgeCopyToOrigMap['get'](edge));this[_0x30da('0xa3')][_0x30da('0xa5')](vertexCopyToOrigMap['get'](vertex),originalEdges);}}}['addBlockEmbedding'](block,blockEmbedding){for(const [vertex,edges]of blockEmbedding['entries']()){let v=block[_0x30da('0xa6')][_0x30da('0x5a')](vertex);this[_0x30da('0x5d')](v);for(let edgeCopy of edges){let e=block[_0x30da('0xa7')][_0x30da('0x5a')](edgeCopy);this[_0x30da('0xa3')][_0x30da('0x5a')](v)[_0x30da('0x14')](e);}}}[_0x30da('0x5d')](v){if(!this['embedding'][_0x30da('0xa8')](v))this[_0x30da('0xa3')]['set'](v,[]);}[_0x30da('0x9')](v){if(this[_0x30da('0xa3')][_0x30da('0xa8')](v)){for(let e of this[_0x30da('0xa3')]['get'](v)){let w=e['getOtherEnd'](v);Utils[_0x30da('0x9')](this[_0x30da('0xa3')][_0x30da('0x5a')](w),e);}this[_0x30da('0xa3')]['delete'](v);}}['getNextRightFaceEdge'](e){let r=this['reverseEdges'][_0x30da('0x5a')](e);let adjacentEdges=this[_0x30da('0xa3')][_0x30da('0x5a')](r[_0x30da('0x8')]);let position=adjacentEdges[_0x30da('0x9a')](r);return adjacentEdges[(position+0x1)%adjacentEdges['length']];}['createDirectedEdges'](){this[_0x30da('0xa9')]=new Map();for(const [v,edges]of this['embedding']['entries']()){for(let i=0x0;i<edges['length'];++i){let e=edges[i];if(e[_0x30da('0x8')]!=v){let r=e[_0x30da('0x22')]();this[_0x30da('0xa9')][_0x30da('0xa5')](e,r);this['reverseEdges']['set'](r,e);edges[i]=r;}}}}[_0x30da('0xaa')](e,e1,e2,r,r1,r2,newVertex){let originEm=this[_0x30da('0xa3')][_0x30da('0x5a')](e[_0x30da('0x8')]);let destEm=this[_0x30da('0xa3')][_0x30da('0x5a')](e[_0x30da('0xa')]);let ei=originEm[_0x30da('0x9a')](e);let ri=destEm[_0x30da('0x9a')](r);originEm[ei]=e1;destEm[ri]=r1;this['reverseEdges'][_0x30da('0xab')](e);this[_0x30da('0xa9')][_0x30da('0xab')](r);this[_0x30da('0xa9')][_0x30da('0xa5')](e1,r2);this[_0x30da('0xa9')][_0x30da('0xa5')](e2,r1);this['reverseEdges'][_0x30da('0xa5')](r2,e1);this['reverseEdges'][_0x30da('0xa5')](r1,e2);this[_0x30da('0xa3')][_0x30da('0xa5')](newVertex,[e2,r2]);}[_0x30da('0xac')](e,r,fromEdge,toEdge){this[_0x30da('0xa9')][_0x30da('0xa5')](e,r);this[_0x30da('0xa9')][_0x30da('0xa5')](r,e);let v1=e[_0x30da('0x8')];toEdge=this[_0x30da('0xa9')][_0x30da('0x5a')](toEdge);let em1=this[_0x30da('0xa3')]['get'](v1);let pos1=em1['indexOf'](toEdge);em1['splice'](pos1+0x1,0x0,e);let v2=e[_0x30da('0xa')];let em2=this[_0x30da('0xa3')][_0x30da('0x5a')](v2);let pos2=em2[_0x30da('0x9a')](fromEdge);em2[_0x30da('0x9b')](pos2,0x0,r);}['getNext'](v,e){let vem=this[_0x30da('0xa3')]['get'](v);let next=null;if(e[_0x30da('0x8')]==v){let i=vem[_0x30da('0x9a')](e);next=vem[(i+0x1)%vem[_0x30da('0x16')]];}if(e[_0x30da('0xa')]==v){let i=vem[_0x30da('0x9a')](this[_0x30da('0xa9')][_0x30da('0x5a')](e));next=vem[(i+0x1)%vem[_0x30da('0x16')]];}if(next!=null)return next[_0x30da('0x23')]?this[_0x30da('0xa9')]['get'](next):next;return null;}['getPrevious'](v,e){let vem=this[_0x30da('0xa3')][_0x30da('0x5a')](v);let prev=null;if(e[_0x30da('0x8')]==v){let i=vem['indexOf'](e);i--;if(i<0x0)i=vem[_0x30da('0x16')]-0x1;prev=vem[i];}if(e[_0x30da('0xa')]==v){let i=vem[_0x30da('0x9a')](this[_0x30da('0xa9')]['get'](e));i--;if(i<0x0)i=vem[_0x30da('0x16')]-0x1;prev=vem[i];}if(prev!=null)return prev[_0x30da('0x23')]?this['reverseEdges']['get'](prev):prev;return null;}[_0x30da('0xad')](e,r){this[_0x30da('0xa9')][_0x30da('0xa5')](e,r);this[_0x30da('0xa9')]['set'](r,e);}[_0x30da('0xae')](v){let edges=this[_0x30da('0xa3')]['get'](v);if(edges[_0x30da('0x16')]<0x4)return!![];let directionChanges=0x0;for(let i=0x0;i<edges[_0x30da('0x16')];i++){let e1=edges[i];let e2=edges[(i+0x1)%edges[_0x30da('0x16')]];if(e1[_0x30da('0x8')]==v&&e2['destination']==v||e1[_0x30da('0xa')]==v&&e2[_0x30da('0x8')]==v)directionChanges++;}return directionChanges<=0x2;}['isBimodal'](){for(let v of this['embedding'][_0x30da('0xaf')]()){if(!this[_0x30da('0xae')](v))return![];}return!![];}[_0x30da('0xb0')](edge,vertex){this[_0x30da('0x5d')](vertex);let oem=this[_0x30da('0x5a')](edge[_0x30da('0x8')]);let oi=oem[_0x30da('0x9a')](edge);for(let i=0x0;i<oem[_0x30da('0x16')];i++){let ei=(i+oi)%oem['length'];let e=oem[ei];if(e!=edge)this[_0x30da('0x5a')](vertex)[_0x30da('0x14')](e);}let dem=this['get'](edge['destination']);let di=dem[_0x30da('0x9a')](edge);for(let i=0x0;i<dem[_0x30da('0x16')];i++){let ei=(i+di)%dem[_0x30da('0x16')];let e=dem[ei];if(e!=edge)this[_0x30da('0x5a')](vertex)[_0x30da('0x14')](e);}this[_0x30da('0xa3')][_0x30da('0xab')](edge['origin']);this[_0x30da('0xa3')]['delete'](edge['destination']);}[_0x30da('0xa0')](edge,vertex){this[_0x30da('0x5d')](vertex);this[_0x30da('0xa3')][_0x30da('0x5a')](vertex)[_0x30da('0x14')](...vertex[_0x30da('0x0')]);let oem=this[_0x30da('0x5a')](edge['origin']);let oi=oem[_0x30da('0x9a')](edge);oem[oi]=vertex[_0x30da('0x0')][0x0];let dem=this[_0x30da('0x5a')](edge[_0x30da('0xa')]);let di=dem[_0x30da('0x9a')](edge);dem[di]=vertex['edges'][0x1];}[_0x30da('0xb1')](face){return face!=this[_0x30da('0xb2')]?this['countSourceSwitches'](face)-0x1:this[_0x30da('0xb3')](face)+0x1;}[_0x30da('0xb3')](face){let count=0x0;for(let i=0x0;i<face[_0x30da('0x0')][_0x30da('0x16')];i++){let e1=face[_0x30da('0x0')][i];let e2=face[_0x30da('0x0')][(i+0x1)%face[_0x30da('0x0')][_0x30da('0x16')]];if(e1[_0x30da('0x8')]==e2[_0x30da('0x8')])count++;}return count;}[_0x30da('0xb4')](){this[_0x30da('0xb5')]=[];this[_0x30da('0xb6')]=new Map();this[_0x30da('0xb7')]=new Map();for(let edge of this[_0x30da('0xa4')]['edges']){if(!this[_0x30da('0xb7')][_0x30da('0xa8')](edge))this[_0x30da('0xb5')][_0x30da('0x14')](this[_0x30da('0xb8')](edge,edge[_0x30da('0x8')]));if(!this['faceOnLeftMap']['has'](edge))this[_0x30da('0xb5')][_0x30da('0x14')](this['enumerateFaceEdges'](edge,edge[_0x30da('0xa')]));}if(this[_0x30da('0xb5')][_0x30da('0x16')]>0x0)this['externalFace']=this[_0x30da('0xb5')][0x0];}[_0x30da('0xb8')](startEdge,startVertex){let face=new Face();let currentEdge=startEdge;let currentVertex=startVertex;do{face[_0x30da('0x0')][_0x30da('0x14')](currentEdge);if(currentVertex==currentEdge[_0x30da('0x8')])this[_0x30da('0xb7')][_0x30da('0xa5')](currentEdge,face);else this[_0x30da('0xb6')]['set'](currentEdge,face);currentVertex=currentEdge[_0x30da('0xf')](currentVertex);currentEdge=this['prevInEmbedding'](currentEdge,currentVertex);}while(currentEdge!=startEdge);return face;}[_0x30da('0xb9')](edge,vertex){let vem=this[_0x30da('0xa3')]['get'](vertex);let index=vem[_0x30da('0x9a')](edge)-0x1;if(index<0x0)index=vem[_0x30da('0x16')]-0x1;return vem[index];}['insertEdge'](edge,vertex,face){for(let i=0x0;i<face[_0x30da('0x0')][_0x30da('0x16')];i++){let e1=face[_0x30da('0x0')][i];let e2=face[_0x30da('0x0')][(i+0x1)%face[_0x30da('0x0')]['length']];let v=e1[_0x30da('0x1b')](e2);if(v==vertex){let idx=this[_0x30da('0xa3')][_0x30da('0x5a')](v)[_0x30da('0x9a')](e2);this['embedding'][_0x30da('0x5a')](v)[_0x30da('0x9b')](idx+0x1,0x0,edge);return;}}}[_0x30da('0xba')](edge1,edge2,vertex){let edges=[];let vem=this[_0x30da('0x5a')](vertex);let si=vem[_0x30da('0x9a')](edge1);let ei=vem['indexOf'](edge2);for(let i=0x1;i<vem[_0x30da('0x16')];i++){let ci=(i+si)%vem[_0x30da('0x16')];if(ci==ei)break;let e=vem[ci];edges['push'](e);}return edges;}['getReverse'](e){return this[_0x30da('0xa9')][_0x30da('0x5a')](e);}[_0x30da('0x5a')](v){return this[_0x30da('0xa3')]['get'](v);}get[_0x30da('0xbb')](){return this[_0x30da('0xa3')][_0x30da('0xaf')]();}get[_0x30da('0xbc')](){if(this['_faces']==null)this[_0x30da('0xb4')]();return this[_0x30da('0xb5')];}}class Interval{constructor(min,max){this[_0x30da('0xbd')]=min;this['max']=max;}[_0x30da('0x82')](interval){return this[_0x30da('0xbd')]<=interval['min']&&interval[_0x30da('0xbe')]<=this[_0x30da('0xbe')];}['intersects'](interval){if(this['min']>=interval['max'])return![];if(interval['min']>=this[_0x30da('0xbe')])return![];return!![];}['overlaps'](interval){if(interval['contains'](this)||this[_0x30da('0x82')](interval))return![];return this[_0x30da('0xbf')](interval);}}class BinaryTree{constructor(item){this[_0x30da('0x27')]=new BinaryTree[(_0x30da('0x28'))](item);}[_0x30da('0xc0')](){return this[_0x30da('0x27')][_0x30da('0xc0')]();}}BinaryTree[_0x30da('0x28')]=class{constructor(item){this['item']=item;}[_0x30da('0xc1')](left,right){this['left']=new BinaryTree[(_0x30da('0x28'))](left);this['right']=new BinaryTree[(_0x30da('0x28'))](right);}[_0x30da('0xc0')](){let leaves=[];this['collectLeaves'](leaves);return leaves;}[_0x30da('0xc2')](leaves){if(this[_0x30da('0x71')]==null&&this[_0x30da('0x6b')]==null)leaves['push'](this[_0x30da('0xc3')]);if(this['left']!=null)this['left'][_0x30da('0xc2')](leaves);if(this[_0x30da('0x6b')]!=null)this[_0x30da('0x6b')][_0x30da('0xc2')](leaves);}};class PriorityQueue{constructor(maxN,array){this['a']=array;this['N']=0x0;this['d']=0x3;this['pq']=[];this['qp']=[];for(let i=0x0;i<=maxN;i++){this['pq'][i]=0x0;this['qp'][i]=0x0;}}['empty'](){return this['N']==0x0;}[_0x30da('0xc4')](v){this['pq'][++this['N']]=v;this['qp'][v]=this['N'];this[_0x30da('0xc5')](this['N']);}[_0x30da('0xc6')](){this['exchange'](0x1,this['N']);this['sink'](0x1,this['N']-0x1);return this['pq'][this['N']--];}[_0x30da('0xc7')](k){this[_0x30da('0xc5')](this['qp'][k]);}[_0x30da('0xc8')](i,j){return this['a'][this['pq'][i]]<this['a'][this['pq'][j]];}['exchange'](i,j){let t=this['pq'][i];this['pq'][i]=this['pq'][j];this['pq'][j]=t;this['qp'][this['pq'][i]]=i;this['qp'][this['pq'][j]]=j;}[_0x30da('0xc5')](k){while(k>0x1&&this[_0x30da('0xc9')](k,Math['floor']((k+this['d']-0x2)/this['d']))){this['exchange'](k,Math[_0x30da('0xca')]((k+this['d']-0x2)/this['d']));k=Math['floor']((k+this['d']-0x2)/this['d']);}}[_0x30da('0xcb')](k,N){let j=0x0;while((j=this['d']*(k-0x1)+0x2)<=N){for(let i=j+0x1;i<j+this['d']&&i<=N;i++){if(this[_0x30da('0xc8')](i,j))j=i;}if(!this[_0x30da('0xc8')](j,k))break;this[_0x30da('0xcc')](k,j);k=j;}}}class Factory{}class Graph{constructor(){this[_0x30da('0xbb')]=[];this[_0x30da('0x0')]=[];}[_0x30da('0xcd')](saveMapping){return this[_0x30da('0xce')](this[_0x30da('0xbb')],saveMapping);}[_0x30da('0xce')](vertexSubset,saveMapping){var copy=new Graph();if(saveMapping){copy[_0x30da('0xa6')]=new Map();copy[_0x30da('0xa7')]=new Map();}var map=new Map();for(let v of vertexSubset){var vcopy=v['clone']();map['set'](v,vcopy);copy[_0x30da('0xbb')][_0x30da('0x14')](vcopy);if(saveMapping)copy[_0x30da('0xa6')]['set'](vcopy,v);}for(let e of this['edges']){if(map[_0x30da('0xa8')](e[_0x30da('0x8')])&&map['has'](e[_0x30da('0xa')])){var ecopy=copy[_0x30da('0xcf')](map['get'](e[_0x30da('0x8')]),map[_0x30da('0x5a')](e['destination']),e);if(saveMapping)copy[_0x30da('0xa7')][_0x30da('0xa5')](ecopy,e);}}return copy;}[_0x30da('0xd0')](){if(this['vertexCopyToOrigMap']!=null){this['vertexOrigToCopyMap']=new Map();for(const [c,v]of this['vertexCopyToOrigMap'][_0x30da('0xd1')]())this[_0x30da('0xd2')][_0x30da('0xa5')](v,c);}if(this[_0x30da('0xa7')]!=null){this[_0x30da('0xd3')]=new Map();for(const [c,v]of this[_0x30da('0xa7')]['entries']())this[_0x30da('0xd3')][_0x30da('0xa5')](v,c);}}[_0x30da('0xd4')](root,enableAssistants,compactAssistants){var tree=new Graph();root[_0x30da('0xd5')]=0x0;tree[_0x30da('0x27')]=root;var visited=[];var remaining=[];tree[_0x30da('0xbb')][_0x30da('0x14')](root);visited[_0x30da('0x14')](root);remaining['push'](root);var levelCount=0x1;while(remaining['length']>0x0){var next=remaining['pop']();next[_0x30da('0x1')][_0x30da('0xd6')](function(e){if(visited[_0x30da('0xc')](e[_0x30da('0xa')]))return;var origin=e['origin'];var destination=e['destination'];destination[_0x30da('0xd5')]=origin[_0x30da('0xd5')]+0x1;destination['parent']=origin;if(levelCount<destination[_0x30da('0xd5')]+0x1)levelCount=destination[_0x30da('0xd5')]+0x1;remaining['push'](destination);visited[_0x30da('0x14')](destination);tree[_0x30da('0xbb')][_0x30da('0x14')](destination);tree[_0x30da('0x0')][_0x30da('0x14')](e);});}if(enableAssistants){remaining[_0x30da('0x14')](root);visited=[];visited['push'](root);while(remaining[_0x30da('0x16')]>0x0){var next=remaining['pop']();var lastPosition=AssistantPosition[_0x30da('0xd7')];for(var i=0x0;i<next[_0x30da('0x1')]['length'];i++){var child=next['outEdges'][i][_0x30da('0xa')];if(visited[_0x30da('0xc')](child))continue;remaining[_0x30da('0x14')](child);visited[_0x30da('0x14')](child);switch(child[_0x30da('0x6')][_0x30da('0xd8')]['treeLayoutAssistant']){case AssistantType[_0x30da('0xd9')]:child[_0x30da('0xda')]=AssistantPosition['Left'];break;case AssistantType['Right']:child['assistantPosition']=AssistantPosition[_0x30da('0xd7')];break;case AssistantType[_0x30da('0xdb')]:if(lastPosition===AssistantPosition[_0x30da('0xd9')])child[_0x30da('0xda')]=AssistantPosition[_0x30da('0xd7')];else child[_0x30da('0xda')]=AssistantPosition['Left'];break;default:continue;}lastPosition=child['assistantPosition'];}}visited=[];levelCount=this[_0x30da('0xdc')](visited,root,compactAssistants)+0x1;}var treeLevels=[];for(var i=0x0;i<levelCount;i++)treeLevels[_0x30da('0x14')]([]);tree[_0x30da('0xbb')][_0x30da('0xd6')](function(v){treeLevels[v[_0x30da('0xd5')]][_0x30da('0x14')](v);});tree[_0x30da('0xdd')]=treeLevels;return tree;}[_0x30da('0xdc')](visited,parent,compactAssistants){var maxLeftLevel=parent[_0x30da('0xd5')];var maxRightLevel=parent[_0x30da('0xd5')];var maxLevel=parent[_0x30da('0xd5')];var bottomLevel=-0x1;var sorted=[];for(var i=0x0;i<parent[_0x30da('0x1')][_0x30da('0x16')];i++)sorted[_0x30da('0x14')](parent[_0x30da('0x1')][i]['destination']);sorted[_0x30da('0xde')](function(a,b){var aAssistantType=a[_0x30da('0x6')][_0x30da('0xd8')]['treeLayoutAssistant'];var bAssistantType=b[_0x30da('0x6')][_0x30da('0xd8')]['treeLayoutAssistant'];if(aAssistantType&&!bAssistantType)return-0x1;if(!aAssistantType&&bAssistantType)return 0x1;return a[_0x30da('0x1a')]-b[_0x30da('0x1a')];});for(var i=0x0;i<sorted[_0x30da('0x16')];i++){var child=sorted[i];if(visited[_0x30da('0xc')](child))continue;visited[_0x30da('0x14')](child);if(child[_0x30da('0x6')]['layoutTraits'][_0x30da('0xdf')]){if(child[_0x30da('0xda')]===AssistantPosition[_0x30da('0xd9')]){if(compactAssistants)child['level']=maxLeftLevel+0x1;else child[_0x30da('0xd5')]=Math[_0x30da('0xbe')](maxLeftLevel,maxRightLevel)+0x1;}else if(child['assistantPosition']===AssistantPosition['Right']){if(compactAssistants)child[_0x30da('0xd5')]=maxRightLevel+0x1;else child['level']=maxLevel+0x1;}}else{if(bottomLevel===-0x1)bottomLevel=Math['max'](maxLeftLevel,maxRightLevel)+0x1;child['level']=bottomLevel;}var newMaxLevel=this[_0x30da('0xdc')](visited,child,compactAssistants);if(child[_0x30da('0x6')][_0x30da('0xd8')][_0x30da('0xdf')]){if(child[_0x30da('0xda')]===AssistantPosition[_0x30da('0xd9')]){maxLeftLevel=Math[_0x30da('0xbe')](maxLeftLevel,newMaxLevel);}else{maxRightLevel=Math['max'](maxRightLevel,newMaxLevel);maxLevel=Math[_0x30da('0xbe')](maxLeftLevel,maxRightLevel);}}else{maxLevel=Math[_0x30da('0xbe')](maxLevel,newMaxLevel);}}return Math[_0x30da('0xbe')](maxLevel,maxLeftLevel);}[_0x30da('0xe0')](origin,destination,owner){var edge=this[_0x30da('0xcf')](origin,destination,null);if(owner)edge[_0x30da('0x6')]=owner;return edge;}[_0x30da('0xcf')](origin,destination,prototype){var edge=new Edge(origin,destination,prototype);this[_0x30da('0x0')][_0x30da('0x14')](edge);edge[_0x30da('0x8')][_0x30da('0x1')][_0x30da('0x14')](edge);edge[_0x30da('0x8')][_0x30da('0x0')][_0x30da('0x14')](edge);edge['destination']['inEdges']['push'](edge);edge[_0x30da('0xa')]['edges'][_0x30da('0x14')](edge);return edge;}[_0x30da('0xac')](edge){this[_0x30da('0x0')][_0x30da('0x14')](edge);edge[_0x30da('0x8')]['outEdges'][_0x30da('0x14')](edge);edge[_0x30da('0x8')][_0x30da('0x0')]['push'](edge);edge['destination'][_0x30da('0x2')]['push'](edge);edge[_0x30da('0xa')][_0x30da('0x0')][_0x30da('0x14')](edge);}[_0x30da('0x7')](edge){Utils[_0x30da('0x9')](this[_0x30da('0x0')],edge);Utils[_0x30da('0x9')](edge[_0x30da('0x8')][_0x30da('0x1')],edge);Utils['remove'](edge['origin'][_0x30da('0x0')],edge);Utils[_0x30da('0x9')](edge['destination'][_0x30da('0x2')],edge);Utils[_0x30da('0x9')](edge['destination']['edges'],edge);}[_0x30da('0xe1')](){for(let v of this[_0x30da('0xbb')]){v[_0x30da('0x0')][_0x30da('0x16')]=0x0;v[_0x30da('0x2')][_0x30da('0x16')]=0x0;v['outEdges']['length']=0x0;}this[_0x30da('0x0')]['length']=0x0;}[_0x30da('0xe2')](layoutRect,owner){var vertex=new Vertex();this[_0x30da('0xbb')][_0x30da('0x14')](vertex);if(layoutRect){vertex['x']=layoutRect['x'];vertex['y']=layoutRect['y'];vertex['width']=layoutRect[_0x30da('0xe3')];vertex[_0x30da('0xe4')]=layoutRect[_0x30da('0xe4')];}if(owner)vertex[_0x30da('0x6')]=owner;return vertex;}['removeVertex'](vertex){let index=this[_0x30da('0xbb')][_0x30da('0x9a')](vertex);if(index>-0x1)this[_0x30da('0xbb')][_0x30da('0x9b')](index,0x1);}[_0x30da('0xe5')](vertex){this[_0x30da('0xbb')][_0x30da('0x14')](vertex);vertex[_0x30da('0x1')][_0x30da('0xd6')](function(edge){this[_0x30da('0x0')][_0x30da('0x14')](edge);},this);}[_0x30da('0xe6')](debugId){let vertex=new Vertex();this[_0x30da('0xbb')][_0x30da('0x14')](vertex);if(debugId)vertex[_0x30da('0xe7')]=debugId;return vertex;}['setItemIndices'](){for(var i=0x0;i<this[_0x30da('0xbb')]['length'];++i){var vertex=this[_0x30da('0xbb')][i];vertex[_0x30da('0x1a')]=i;}for(var i=0x0;i<this[_0x30da('0x0')][_0x30da('0x16')];++i){var edge=this[_0x30da('0x0')][i];edge[_0x30da('0x1a')]=i;}}[_0x30da('0xe8')](e){let v1=e[_0x30da('0x8')];let v2=e['destination'];this['removeEdge'](e);let v=new Vertex();this[_0x30da('0xbb')][_0x30da('0x14')](v);let e1=this[_0x30da('0xe0')](v1,v);e1['temporary']=!![];let e2=this[_0x30da('0xe0')](v,v2);e2[_0x30da('0xe9')]=!![];v[_0x30da('0x1a')]=this[_0x30da('0xbb')]['length']-0x1;return v;}[_0x30da('0xea')](v1,destSet){let path=[];let mark=createBoolArray(this[_0x30da('0xbb')][_0x30da('0x16')]);let searchTree=createIdArray(this[_0x30da('0xbb')]['length'],-0x1);this[_0x30da('0xeb')]();for(let i=0x0;i<this[_0x30da('0xbb')]['length'];++i){if(!mark[i])this[_0x30da('0xec')](new Edge(v1,v1),destSet,mark,searchTree,path);}path[_0x30da('0x21')]();return path;}['findShortestPathSS'](originSet,destSet){let minPath=null;for(let v of originSet){let path=this[_0x30da('0xea')](v,destSet);if(minPath==null)minPath=path;minPath=minPath[_0x30da('0x16')]>path['length']?path:minPath;}return minPath;}[_0x30da('0xec')](e,destSet,mark,searchTree,path){let queue=new Queue();queue['enqueue'](e);mark[e['destination'][_0x30da('0x1a')]]=!![];while(queue[_0x30da('0x2d')]>0x0){e=queue[_0x30da('0x2e')]();let v=e[_0x30da('0x8')];let w=e['destination'];searchTree[w[_0x30da('0x1a')]]=v['index'];if(destSet[_0x30da('0xa8')](w)){let t=w[_0x30da('0x1a')];while(!![]){path[_0x30da('0x14')](this[_0x30da('0xbb')][t]);let p=searchTree[t];if(t==p)break;t=p;}return;}for(let edge of e[_0x30da('0xa')][_0x30da('0x0')]){let t=edge[_0x30da('0xf')](w);if(!mark[t[_0x30da('0x1a')]]){queue[_0x30da('0x3a')](new Edge(w,t));mark[t[_0x30da('0x1a')]]=!![];}}}}[_0x30da('0xed')](origin,destSet,outMinWeigth){this[_0x30da('0xeb')]();let V=this[_0x30da('0xbb')][_0x30da('0x16')];let weights=[];let shortestPaths=[];for(let v=0x0;v<V;v++)weights[v]=Number[_0x30da('0xee')];let queue=new PriorityQueue(V,weights);for(let v=0x0;v<V;v++)queue['insert'](v);weights[origin[_0x30da('0x1a')]]=0x0;queue[_0x30da('0xc7')](origin[_0x30da('0x1a')]);while(!queue['empty']()){let v=queue[_0x30da('0xc6')]();if(v!=origin['index']&&shortestPaths[v]==null)break;for(let e of this[_0x30da('0xbb')][v][_0x30da('0x0')]){let w=e[_0x30da('0xf')](this[_0x30da('0xbb')][v])['index'];let P=weights[v]+e['weight'];if(P<weights[w]){weights[w]=P;queue[_0x30da('0xc7')](w);shortestPaths[w]=e;}}}outMinWeigth[_0x30da('0xef')]=Number[_0x30da('0xee')];let minDest=null;for(let vertex of destSet){if(weights[vertex['index']]<outMinWeigth[_0x30da('0xef')]){minDest=vertex;outMinWeigth['value']=weights[vertex['index']];}}let shortestPath=[];shortestPath['push'](minDest);do{minDest=shortestPaths[minDest[_0x30da('0x1a')]][_0x30da('0xf')](minDest);shortestPath[_0x30da('0x14')](minDest);}while(minDest!=origin);shortestPath[_0x30da('0x21')]();return shortestPath;}['findShortestWeightedPathSS'](originSet,destSet){let minPath=null;let minWeight=Number['MAX_VALUE'];for(let v of originSet){let weight={'value':0x0};let path=this['findShortestWeightedPathVS'](v,destSet,weight);if(weight['value']<minWeight){minPath=path;minWeight=weight;}}return minPath;}['getConnectedComponents'](){this['searchCounter']=0x0;this[_0x30da('0xeb')]();var setIds=createIdArray(this[_0x30da('0xbb')][_0x30da('0x16')],-0x1);for(var v=0x0;v<this[_0x30da('0xbb')][_0x30da('0x16')];v++){if(setIds[v]==-0x1){this[_0x30da('0xf0')](setIds,v);this[_0x30da('0xf1')]++;}}var components=[];for(var i=0x0;i<this[_0x30da('0xf1')];++i)components[i]=new Graph();for(var i=0x0;i<setIds[_0x30da('0x16')];++i){var graph=components[setIds[i]];graph[_0x30da('0xe5')](this[_0x30da('0xbb')][i]);}return components;}[_0x30da('0xf0')](setIds,vertexId){setIds[vertexId]=this[_0x30da('0xf1')];var vertex=this[_0x30da('0xbb')][vertexId];vertex[_0x30da('0x0')]['forEach'](function(edge){var next=edge[_0x30da('0xf')](vertex);var nextId=next['index'];if(setIds[nextId]==-0x1)this['dfsConnectivity'](setIds,nextId);},this);}[_0x30da('0xf2')](saveMapping,blocksHandler){let allComponents=[];let connectedSubgraphs=this[_0x30da('0xf3')]();for(let connectedSubgraph of connectedSubgraphs){let componentBlocks=null;if(blocksHandler!=null)componentBlocks=[];let biconnectedComponents=connectedSubgraph['getBiconnectedComponentsOfConnectedGraph']();for(let biconnectedComponent of biconnectedComponents){let block=biconnectedComponent[_0x30da('0xcd')](saveMapping);allComponents[_0x30da('0x14')](block);if(componentBlocks!=null)componentBlocks['push'](block);}if(blocksHandler)blocksHandler(componentBlocks,connectedSubgraph[_0x30da('0xf4')]);}this['setItemIndices']();return allComponents;}['getBiconnectedComponentsOfConnectedGraph'](){if(this[_0x30da('0xbb')]['length']==0x1){let g=new Graph();g[_0x30da('0xbb')][_0x30da('0x14')](this['vertices'][0x0]);return[g];}this[_0x30da('0xeb')]();this['searchCounter']=0x0;this['visitedEdges']=[];this[_0x30da('0xf4')]=[];this[_0x30da('0xf5')]=[];this['secondLevel']=[];this['searchOrder']=createIdArray(this[_0x30da('0xbb')][_0x30da('0x16')],-0x1);this[_0x30da('0xf6')]=createIdArray(this[_0x30da('0xbb')][_0x30da('0x16')],-0x1);for(let v=0x0;v<this[_0x30da('0xbb')][_0x30da('0x16')];v++){if(this['searchOrder'][v]==-0x1)this['biconnectivityDfs'](v,v);}if(this[_0x30da('0xf7')][_0x30da('0x16')]>=0x2&&!this[_0x30da('0xf4')][_0x30da('0xc')](this['vertices'][0x0]))this[_0x30da('0xf4')][_0x30da('0x14')](this[_0x30da('0xbb')][0x0]);while(this['secondLevel'][_0x30da('0x16')]>0x0)this[_0x30da('0xf8')](this[_0x30da('0xf7')][_0x30da('0xf9')]());return this[_0x30da('0xf5')];}[_0x30da('0xfa')](parent,vertexId){let destVertex=this[_0x30da('0xbb')][vertexId];this['searchOrder'][vertexId]=this[_0x30da('0xf1')]++;this['backMostEdges'][vertexId]=this[_0x30da('0xfb')][vertexId];for(let edge of destVertex['edges']){let child=edge[_0x30da('0xf')](destVertex)[_0x30da('0x1a')];if(this[_0x30da('0xfb')][child]<this[_0x30da('0xfb')][vertexId]&&child!=parent){this['visitedEdges']['push'](child);this[_0x30da('0xfc')][_0x30da('0x14')](vertexId);}if(this[_0x30da('0xfb')][child]==-0x1){if(vertexId==0x0)this['secondLevel'][_0x30da('0x14')](child);this[_0x30da('0xfa')](vertexId,child);if(this[_0x30da('0xf6')][vertexId]>this[_0x30da('0xf6')][child])this[_0x30da('0xf6')][vertexId]=this[_0x30da('0xf6')][child];if(vertexId!=parent&&child!=parent&&this[_0x30da('0xf6')][child]>=this[_0x30da('0xfb')][vertexId]){if(!this[_0x30da('0xf4')]['includes'](this[_0x30da('0xbb')][vertexId]))this[_0x30da('0xf4')]['push'](this[_0x30da('0xbb')][vertexId]);this['stackToComponent2'](child);}}else if(child!=parent){if(this[_0x30da('0xf6')][vertexId]>this[_0x30da('0xfb')][child])this[_0x30da('0xf6')][vertexId]=this['searchOrder'][child];}}}[_0x30da('0xf8')](child){let ids=createIdArray(this[_0x30da('0xbb')]['length'],0x0);let component=new Graph();while(this['visitedEdges'][_0x30da('0x16')]>0x0&&this[_0x30da('0xfb')][Utils[_0x30da('0xfd')](this[_0x30da('0xfc')])]>=this['searchOrder'][child]){let org=this[_0x30da('0xfc')][_0x30da('0xf9')]();let dest=this[_0x30da('0xfc')][_0x30da('0xf9')]();ids[org]=0x1;ids[dest]=0x1;}if(this[_0x30da('0xfc')][_0x30da('0x16')]>0x0){let org=this[_0x30da('0xfc')]['pop']();let dest=this[_0x30da('0xfc')]['pop']();ids[org]=0x1;ids[dest]=0x1;}for(let i=0x0;i<ids['length'];++i)if(ids[i]>0x0)component[_0x30da('0xe5')](this[_0x30da('0xbb')][i]);this[_0x30da('0xf5')][_0x30da('0x14')](component);}[_0x30da('0xfe')](){var blocks=[];this[_0x30da('0xeb')]();this['edges']['forEach'](function(edge){delete edge['processed'];});var searchCounter=0x0;var searchOrder=[];var componentStack=[];var lowPoint=[];for(var v=0x0;v<this['vertices'][_0x30da('0x16')];v++){var vertex=this[_0x30da('0xbb')][v];if(searchOrder[vertex[_0x30da('0x1a')]]!==undefined)continue;if(vertex[_0x30da('0x0')][_0x30da('0x16')]==0x0){var component=new Graph();component[_0x30da('0xe5')](vertex);blocks[_0x30da('0x14')](component[_0x30da('0xcd')](!![]));continue;}var vertexStack=[];var edgeStack=[];searchOrder[vertex[_0x30da('0x1a')]]=searchCounter++;lowPoint[vertex[_0x30da('0x1a')]]=searchOrder[vertex[_0x30da('0x1a')]];vertexStack['push'](vertex);edgeStack['push'](vertex[_0x30da('0x0')]['slice'](0x0));while(!![]){while(edgeStack[edgeStack[_0x30da('0x16')]-0x1][_0x30da('0x16')]>0x0){var tail=vertexStack[vertexStack['length']-0x1];var edge=edgeStack[edgeStack[_0x30da('0x16')]-0x1][_0x30da('0xff')]();var head=edge['getOtherEnd'](tail);if(edge[_0x30da('0x100')])continue;componentStack[_0x30da('0x14')](edge);edge[_0x30da('0x100')]=!![];if(searchOrder[head[_0x30da('0x1a')]]===undefined){searchOrder[head['index']]=searchCounter++;vertexStack[_0x30da('0x14')](head);edgeStack[_0x30da('0x14')](head[_0x30da('0x0')][_0x30da('0x9c')](0x0));lowPoint[head['index']]=searchOrder[tail[_0x30da('0x1a')]];}else{if(searchOrder[head[_0x30da('0x1a')]]<lowPoint[tail[_0x30da('0x1a')]])lowPoint[tail['index']]=searchOrder[head['index']];}}if(vertexStack[_0x30da('0x16')]>0x1){var top=vertexStack[vertexStack[_0x30da('0x16')]-0x1];var next=vertexStack[vertexStack[_0x30da('0x16')]-0x2];if(lowPoint[top[_0x30da('0x1a')]]==searchOrder[next['index']]){var component=new Graph();var topEdge=componentStack[componentStack['length']-0x1];while(searchOrder[topEdge[_0x30da('0x8')]['index']]>=searchOrder[next[_0x30da('0x1a')]]&&searchOrder[topEdge[_0x30da('0xa')][_0x30da('0x1a')]]>=searchOrder[next[_0x30da('0x1a')]]){componentStack[_0x30da('0xf9')]();if(!component[_0x30da('0xbb')][_0x30da('0xc')](topEdge[_0x30da('0x8')]))component[_0x30da('0xe5')](topEdge[_0x30da('0x8')]);if(!component[_0x30da('0xbb')]['includes'](topEdge[_0x30da('0xa')]))component['addVertexAndOutEdges'](topEdge['destination']);if(componentStack[_0x30da('0x16')]==0x0)break;topEdge=componentStack[componentStack[_0x30da('0x16')]-0x1];}blocks[_0x30da('0x14')](component['clone'](!![]));}else{if(lowPoint[next[_0x30da('0x1a')]]>lowPoint[top['index']])lowPoint[next[_0x30da('0x1a')]]=lowPoint[top[_0x30da('0x1a')]];}vertexStack['pop']();edgeStack[_0x30da('0xf9')]();}else{break;}}}return blocks;}['planarMakeBiconnected'](){let augmentation=[];let bcGraph=new Factory[(_0x30da('0x101'))](this);bcGraph[_0x30da('0x102')]();while(bcGraph['vertices'][_0x30da('0x16')]>0x1){let c=bcGraph['findPendantCut']();let pendants=[];for(let edge of c[_0x30da('0x1')])pendants[_0x30da('0x14')](edge['destination']);let bnodesToMerge=new Set();Utils[_0x30da('0x103')](bnodesToMerge,pendants);let v=null,c1=c,c2=c;if(pendants[_0x30da('0x16')]>0x1){for(let i=0x0;i<pendants[_0x30da('0x16')]-0x1;++i){let out1=bcGraph['getOutsideVertex'](pendants[i]);let out2=bcGraph[_0x30da('0x104')](pendants[i+0x1]);let newEdge=this[_0x30da('0xe0')](out1,out2);augmentation['push'](newEdge);if(i==0x0)v=out1;}}else{v=bcGraph[_0x30da('0x104')](pendants[0x0]);}let cnodesOnPath=new Set();while(bcGraph[_0x30da('0x105')](c1)!=bcGraph[_0x30da('0x27')]&&this['stillPlanar'](v,bcGraph[_0x30da('0x106')](c1))){c2=c1;let bNode=bcGraph[_0x30da('0x105')](c2);bnodesToMerge[_0x30da('0x5d')](bNode);c1=bcGraph[_0x30da('0x105')](bNode);cnodesOnPath['add'](c2);}if(this['stillPlanar'](v,bcGraph[_0x30da('0x106')](c1))){c2=c1;cnodesOnPath[_0x30da('0x5d')](c2);}let bx=bcGraph[_0x30da('0x105')](c2);bnodesToMerge['add'](bx);let newEdge2=this[_0x30da('0xe0')](v,bcGraph[_0x30da('0x107')](bx,c2));augmentation['push'](newEdge2);bcGraph[_0x30da('0x108')](bnodesToMerge,bx);for(let cNode of cnodesOnPath){if(cNode!=c&&cNode[_0x30da('0x15')]()>0x2)bcGraph[_0x30da('0x109')](cNode,bx);else bcGraph['removeCnode'](cNode);}for(let bNode of bnodesToMerge)if(bNode!=bx)bcGraph[_0x30da('0x10a')](bNode);}return augmentation;}[_0x30da('0x10b')](v1,v2){let temp=this['createEdge'](v1,v2);let planar=this[_0x30da('0x10c')]();this[_0x30da('0x7')](temp);return planar;}[_0x30da('0x105')](vertex){return vertex[_0x30da('0x2')][0x0][_0x30da('0x8')];}[_0x30da('0x10d')](cutpoints){let embedding=this[_0x30da('0x10e')](cutpoints);let dualGraph=new Factory['DualGraph'](this,embedding);for(let face of dualGraph[_0x30da('0xbc')]){let faceVertices=dualGraph['getVertices'](face);if(Utils[_0x30da('0x10f')](faceVertices,cutpoints)){for(let vertex of faceVertices){if(!cutpoints[_0x30da('0xc')](vertex))return vertex;}return cutpoints[0x0];}}return null;}['getOutsideVertexCPN'](cutpoints,neighbor){let embedding=this[_0x30da('0x10e')](cutpoints);let dualGraph=new Factory[(_0x30da('0x110'))](this,embedding);for(let face of dualGraph[_0x30da('0xbc')]){let faceVertices=dualGraph[_0x30da('0x9d')](face);if(Utils['containsAll'](faceVertices,cutpoints)){for(let edge of face[_0x30da('0x0')]){if(edge[_0x30da('0xb')](neighbor))return edge['getOtherEnd'](neighbor);}return cutpoints[0x0];}}return null;}[_0x30da('0x111')](){return this['test3EdgeConnectivity'](![]);}[_0x30da('0x112')](){return this[_0x30da('0x113')](!![]);}[_0x30da('0x113')](returnPairs){if(this['vertices'][_0x30da('0x16')]<0x2)return returnPairs?[]:[this];if(this['vertices'][0x0]['index']===undefined)this['setItemIndices']();this[_0x30da('0x0')][_0x30da('0xd6')](function(e){delete e[_0x30da('0x114')];delete e['treeEdge'];});var cutPairs=[];var dfs=0x0;var dfsNumber=[];var nd=[];var lowpt=[];var low=[];var lowpt2=[];var low2=[];var tolow=[];var stack=[];var newlink=[];var generatorBuckets=new Map();function findCutPairs(v,parentEdge){var vi=v[_0x30da('0x1a')];dfsNumber[vi]=dfs++;newlink[vi]=v;nd[vi]=0x1;lowpt[vi]=dfsNumber[vi];low[vi]=v;lowpt2[vi]=dfsNumber[vi];low2[vi]=v;if(stack[vi]===undefined)stack[vi]=[];v[_0x30da('0x0')]['forEach'](function(e){if(e==parentEdge)return;var w=e['getOtherEnd'](v);var wi=w[_0x30da('0x1a')];if(dfsNumber[wi]===undefined){e[_0x30da('0x115')]=!![];e[_0x30da('0x116')]=w;findCutPairs(w,e);var s=stack[wi];var top=s[_0x30da('0x16')]>0x0?s[s['length']-0x1]:null;if(top!=null&&w==top['q']){s['pop']();cutPairs[_0x30da('0x14')]([e,top['edge']]);e['cutEdge']=!![];top[_0x30da('0x117')][_0x30da('0x114')]=!![];if(returnPairs){if(!generatorBuckets[_0x30da('0xa8')](top[_0x30da('0x117')]))generatorBuckets['set'](top[_0x30da('0x117')],[]);generatorBuckets[_0x30da('0x5a')](top[_0x30da('0x117')])['push'](e);}if(v!=top['p'])s[_0x30da('0x14')]({'edge':top[_0x30da('0x117')],'p':top['p'],'q':v});if(top['edge']['treeEdge']){var y=top[_0x30da('0x117')][_0x30da('0x116')][_0x30da('0x1a')];newlink[y]=v;}}nd[vi]=nd[vi]+nd[wi];if(lowpt[wi]<lowpt[vi]){lowpt2[vi]=lowpt[vi];lowpt[vi]=lowpt[wi];low2[vi]=low[vi];low[vi]=low[wi];stack[vi]=stack[wi][_0x30da('0x9c')](0x0);tolow[vi]=e;}else if(lowpt[wi]<lowpt2[vi]){lowpt2[vi]=lowpt[wi];low2[vi]=low[wi];stack[wi]=[];}}else if(dfsNumber[vi]>dfsNumber[wi]){if(dfsNumber[wi]<=lowpt[vi]){lowpt2[vi]=lowpt[vi];lowpt[vi]=dfsNumber[wi];low2[vi]=low[vi];low[vi]=w;stack[vi]=[];tolow[vi]=e;}else if(dfsNumber[wi]<lowpt2[vi]){lowpt2[vi]=dfsNumber[wi];low2[vi]=w;}}});var s=stack[vi];var top=s[_0x30da('0x16')]>0x0?s[s[_0x30da('0x16')]-0x1]:null;if(top==null){if(lowpt2[vi]>lowpt[vi]){s[_0x30da('0x14')]({'edge':tolow[vi],'p':low[vi],'q':low2[vi]});}}else if(lowpt2[vi]>dfsNumber[top['q'][_0x30da('0x1a')]]){s[_0x30da('0x14')]({'edge':tolow[vi],'p':top['q'],'q':low2[vi]});}else{while(s['length']>0x0&&lowpt2[vi]<=dfsNumber[s[s[_0x30da('0x16')]-0x1]['p'][_0x30da('0x1a')]])s[_0x30da('0xf9')]();if(s[_0x30da('0x16')]>0x0&&lowpt2[vi]<dfsNumber[s[s[_0x30da('0x16')]-0x1]['q'][_0x30da('0x1a')]]){var se=s[_0x30da('0xf9')]();s[_0x30da('0x14')]({'edge':se['edge'],'p':se['p'],'q':low2[vi]});}}v['edges']['forEach'](function(e){var u=e[_0x30da('0xf')](v);var ui=u[_0x30da('0x1a')];if(e[_0x30da('0x115')]||dfsNumber[vi]>dfsNumber[ui])return;var top=s[_0x30da('0x16')]>0x0?s[s[_0x30da('0x16')]-0x1]:null;var y=top==null?null:top[_0x30da('0x117')][_0x30da('0x116')];var yi=y?y[_0x30da('0x1a')]:0x0;while(top!=null&&top[_0x30da('0x117')]['treeEdge']&&dfsNumber[yi]<=dfsNumber[ui]&&dfsNumber[ui]<=dfsNumber[yi]+nd[yi]-0x1){s[_0x30da('0xf9')]();top=s['length']>0x0?s[s[_0x30da('0x16')]-0x1]:null;y=top==null?null:top[_0x30da('0x117')][_0x30da('0x116')];yi=y?y[_0x30da('0x1a')]:0x0;}});}findCutPairs(this['vertices'][0x0],null);if(returnPairs){generatorBuckets[_0x30da('0xd6')](function(edges){for(var i=0x0;i<edges[_0x30da('0x16')];i++)for(var j=i+0x1;j<edges[_0x30da('0x16')];j++)if(!cutPairs['any'](function(p){return p[0x0]==edges[i]&&p[0x1]==edges[j];}))cutPairs[_0x30da('0x14')]([edges[i],edges[j]]);});return cutPairs;}var cutEdges=[];this[_0x30da('0x0')][_0x30da('0xd6')](function(e){if(e[_0x30da('0x114')])cutEdges[_0x30da('0x14')](e);});cutEdges[_0x30da('0xd6')](function(e){this['removeEdge'](e);},this);var newEdges=[];this[_0x30da('0xbb')][_0x30da('0xd6')](function(v){if(newlink[v['index']]!=v){var e=this[_0x30da('0xe0')](v,newlink[v[_0x30da('0x1a')]]);newEdges[_0x30da('0x14')](e);}},this);var comps=this[_0x30da('0xf3')]();newEdges[_0x30da('0xd6')](function(e){this[_0x30da('0x7')](e);},this);cutEdges['forEach'](function(e){this[_0x30da('0xac')](e);},this);return comps;}[_0x30da('0x118')](){var va=this['vertices'];if(va[_0x30da('0x16')]<0x4)return[];function remainsConnectedWithout(v1,v2){var queue=[];var visited=[];var processed=0x1;va[_0x30da('0xd6')](function(v){if(v!=v1&&v!=v2){queue['push'](v);visited[v[_0x30da('0x1a')]]=!![];return $break;}});while(queue[_0x30da('0x16')]>0x0){var v=queue[_0x30da('0xff')]();v[_0x30da('0x13')]()[_0x30da('0xd6')](function(n){if(visited[n['index']]||v1==n||v2==n)return;queue[_0x30da('0x14')](n);visited[n['index']]=!![];processed++;});}return processed==va[_0x30da('0x16')]-0x2;}this['setItemIndices']();var separationPairs=[];for(var i=0x0;i<va[_0x30da('0x16')]-0x1;i++)for(var j=i+0x1;j<va[_0x30da('0x16')];j++)if(!remainsConnectedWithout(va[i],va[j]))separationPairs['push']([va[i],va[j]]);return separationPairs;}[_0x30da('0x119')](){var dfsCounter=0x0;var dfsNumber=[];var dfsVertex=[];var low1=[];var low2=[];var parent=[];var children=[];var nd=[];var flag=[];var separationPairs=[];var removed=[];var This=this;var VLen=This[_0x30da('0xbb')][_0x30da('0x16')];this[_0x30da('0x0')]['forEach'](function(e){delete e[_0x30da('0x11a')];});function traverse(V,P){var v=V[_0x30da('0x1a')];children[v]=[];dfsNumber[v]=dfsCounter++;dfsVertex[dfsNumber[v]]=V;parent[v]=P;low1[v]=low2[v]=dfsNumber[v];nd[v]=0x1;V[_0x30da('0x0')][_0x30da('0xd6')](function(e){var W=e[_0x30da('0xf')](V);var w=W[_0x30da('0x1a')];if(dfsNumber[w]===undefined){e['spTreeEdge']=!![];children[v][_0x30da('0x14')](W);traverse(W,V);if(low1[w]<low1[v]){low2[v]=Math[_0x30da('0xbd')](low1[v],low2[w]);low1[v]=low1[w];}else if(low1[w]==low1[v]){low2[v]=Math['min'](low2[v],low2[w]);}else{low2[v]=Math[_0x30da('0xbd')](low2[v],low1[w]);}nd[v]+=nd[w];}else if(dfsNumber[w]<dfsNumber[v]&&(w!=P[_0x30da('0x1a')]||flag[v])){if(dfsNumber[w]<low1[v]){low2[v]=low1[v];low1[v]=dfsNumber[w];}else if(dfsNumber[w]>low1[v]){low2[v]=Math['min'](low2[v],dfsNumber[w]);}}if(W==P)flag[v]=!![];});if(P){var X=dfsVertex[low1[v]];var t3s=nd[v];if(X!=P&&low2[v]>=dfsNumber[P[_0x30da('0x1a')]]&&t3s<VLen-0x2)separationPairs[_0x30da('0x14')]([X,P]);else if(dfsNumber[X[_0x30da('0x1a')]]>0x0&&intermLinksOnlyToSubtree(X,P,V))separationPairs[_0x30da('0x14')]([X,P]);}var sameLow=![];getChildren(V)[_0x30da('0xd6')](function(Q){if(low1[v]==low1[Q[_0x30da('0x1a')]]){sameLow=!![];return $break;}});if(nd[v]>0x1&&!sameLow){var vc=This[_0x30da('0xe2')]();vc[_0x30da('0x1a')]=This[_0x30da('0xbb')][_0x30da('0x16')]-0x1;V[_0x30da('0x0')][_0x30da('0x9c')](0x0)[_0x30da('0xd6')](function(e){if(!e['spTreeEdge']){var W=e[_0x30da('0xf')](V);if(dfsNumber[v]>dfsNumber[W[_0x30da('0x1a')]])e[_0x30da('0x1f')](V,vc);}});var ce=This[_0x30da('0xe0')](V,vc);ce[_0x30da('0x1a')]=This['edges'][_0x30da('0x16')]-0x1;ce[_0x30da('0x11a')]=!![];dfsNumber[vc[_0x30da('0x1a')]]=dfsNumber[v];low1[vc[_0x30da('0x1a')]]=low1[v];nd[vc[_0x30da('0x1a')]]=0x1;parent[vc['index']]=V;reduce(vc,V);removed['push'](vc);}var nontreeEdges=0x0;V[_0x30da('0x0')][_0x30da('0xd6')](function(e){if(!e[_0x30da('0x11a')])nontreeEdges++;});if(nontreeEdges>0x1){reduce(V,V);removed[_0x30da('0x14')](V);}}function pathNodesBetween(a,d){var nodes=[];while(parent[d[_0x30da('0x1a')]]!=a){nodes[_0x30da('0x14')](parent[d[_0x30da('0x1a')]]);d=parent[d['index']];}return nodes;}function intermLinksOnlyToSubtree(a,d,v){var intermNodes=pathNodesBetween(a,d);var onlyToSubtree=!![];intermNodes[_0x30da('0xd6')](function(node){node['edges'][_0x30da('0xd6')](function(e){var w=e[_0x30da('0xf')](node);if(w==a||w==d)return;if(dfsNumber[w['index']]===undefined)onlyToSubtree=![];else if(dfsNumber[w[_0x30da('0x1a')]]<dfsNumber[a[_0x30da('0x1a')]])onlyToSubtree=![];else if(dfsNumber[w[_0x30da('0x1a')]]>dfsNumber[d[_0x30da('0x1a')]]&&dfsNumber[w[_0x30da('0x1a')]]<dfsNumber[v[_0x30da('0x1a')]])onlyToSubtree=![];else if(low1[w[_0x30da('0x1a')]]<dfsNumber[a[_0x30da('0x1a')]])onlyToSubtree=![];});if(!onlyToSubtree)return $break;});return onlyToSubtree;}function getChildren(V){var v=V['index'];var children=[];V[_0x30da('0x0')][_0x30da('0xd6')](function(e){if(e['spTreeEdge']){var W=e[_0x30da('0xf')](V);if(dfsNumber[v]<dfsNumber[W[_0x30da('0x1a')]])children[_0x30da('0x14')](W);}});return children;}function reduce(V,rep){var v=V[_0x30da('0x1a')];var outNodes=[];var inNodes=[];V[_0x30da('0x0')]['forEach'](function(e){if(e[_0x30da('0x11a')])return;var W=e[_0x30da('0xf')](V);if(dfsNumber[v]>dfsNumber[W[_0x30da('0x1a')]]){if(!outNodes[_0x30da('0xc')](W))outNodes[_0x30da('0x14')](W);}else{if(!inNodes['includes'](W))inNodes[_0x30da('0x14')](W);}});outNodes[_0x30da('0xde')](sortByDfsNumber);inNodes[_0x30da('0xde')](sortByDfsNumber);var outReplacement=[];outNodes[_0x30da('0xd6')](function(n){var r=This[_0x30da('0xe2')]();r[_0x30da('0x11b')]=rep;r[_0x30da('0x1a')]=This[_0x30da('0xbb')]['length']-0x1;nd[r[_0x30da('0x1a')]]=nd[v];outReplacement[_0x30da('0x14')](r);});var inReplacement=[];inNodes[_0x30da('0xd6')](function(n){var r=This['createVertex']();r[_0x30da('0x11b')]=rep;r[_0x30da('0x1a')]=This[_0x30da('0xbb')][_0x30da('0x16')]-0x1;nd[r['index']]=nd[v];inReplacement[_0x30da('0x14')](r);});var replacement=[];outReplacement[_0x30da('0x11c')](function(v){replacement['push'](v);});inReplacement[_0x30da('0x11c')](function(v){replacement['push'](v);});for(var i=0x0;i<replacement[_0x30da('0x16')]-0x1;i++){var e=This['createEdge'](replacement[i],replacement[i+0x1]);e['index']=This[_0x30da('0x0')][_0x30da('0x16')]-0x1;e[_0x30da('0x11b')]=rep;e[_0x30da('0x11a')]=!![];}var parentEdge=null;var childEdges=[];V[_0x30da('0x0')][_0x30da('0xd6')](function(e){if(e[_0x30da('0x11a')]){var W=e['getOtherEnd'](V);if(dfsNumber[v]<dfsNumber[W[_0x30da('0x1a')]])childEdges[_0x30da('0x14')](e);else if(dfsNumber[v]>=dfsNumber[W['index']])parentEdge=e;}});if(parentEdge){parentEdge[_0x30da('0x1f')](V,replacement[0x0]);parentEdge[_0x30da('0x11b')]=rep;}childEdges[_0x30da('0xd6')](function(childEdge){childEdge[_0x30da('0x1f')](V,replacement[replacement['length']-0x1]);childEdge[_0x30da('0x11b')]=rep;});parent[replacement[0x0][_0x30da('0x1a')]]=parent[v];for(var i=0x0;i<outNodes['length'];i++){var u=outNodes[i];var uiOut=V[_0x30da('0x10')](u);uiOut['forEach'](function(e){if(!e[_0x30da('0x11a')])e[_0x30da('0x1f')](V,outReplacement[i]);});low1[outReplacement[i]['index']]=low1[v];dfsNumber[outReplacement[i][_0x30da('0x1a')]]=dfsNumber[v];}for(var i=0x0;i<inNodes['length'];i++){var w=inNodes[i];var wiIn=V[_0x30da('0x10')](w);wiIn['forEach'](function(e){if(!e['spTreeEdge'])e[_0x30da('0x1f')](V,inReplacement[i]);});low1[inReplacement[i][_0x30da('0x1a')]]=low1[v];dfsNumber[inReplacement[i]['index']]=dfsNumber[v];}}function sortByDfsNumber(v1,v2){if(dfsNumber[v1['index']]<dfsNumber[v2[_0x30da('0x1a')]])return-0x1;if(dfsNumber[v1[_0x30da('0x1a')]]>dfsNumber[v2['index']])return 0x1;return 0x0;}function childOnPathTo(a,d){while(parent[d[_0x30da('0x1a')]]!=a)d=parent[d['index']];return d;}this[_0x30da('0xeb')]();traverse(this[_0x30da('0xbb')][0x0],null);removed[_0x30da('0xd6')](function(V){Utils[_0x30da('0x9')](This[_0x30da('0xbb')],V);});var candidates=[];var cutPairs=this[_0x30da('0x112')]();cutPairs[_0x30da('0xd6')](function(pair){if(!(pair[0x0][_0x30da('0x11a')]&&pair[0x1]['spTreeEdge']))return;var e1v=pair[0x0][_0x30da('0x1c')]();var e2v=pair[0x1][_0x30da('0x1c')]();e1v[_0x30da('0xde')](sortByDfsNumber);e2v[_0x30da('0xde')](sortByDfsNumber);if(!parent[e1v[0x0]['index']]&&nd[e2v[0x1]['index']]===0x1)return;if(!parent[e2v[0x0]['index']]&&nd[e1v[0x1][_0x30da('0x1a')]]===0x1)return;var e1Vertices=[];e1Vertices[_0x30da('0x14')](pair[0x0][_0x30da('0x8')]);e1Vertices[_0x30da('0x14')](pair[0x0]['destination']);var e2Vertices=[];e2Vertices['push'](pair[0x1][_0x30da('0x8')]);e2Vertices[_0x30da('0x14')](pair[0x1][_0x30da('0xa')]);for(var i=0x0;i<e1Vertices[_0x30da('0x16')];i++)for(var j=0x0;j<e2Vertices[_0x30da('0x16')];j++)if(e1Vertices[i]!=e2Vertices[j])candidates['push']([e1Vertices[i],e2Vertices[j]]);});candidates['forEach'](function(pair){var a,d;if(dfsNumber[pair[0x0][_0x30da('0x1a')]]<dfsNumber[pair[0x1][_0x30da('0x1a')]]){a=pair[0x0];d=pair[0x1];}else{d=pair[0x0];a=pair[0x1];}if(a[_0x30da('0x11b')])a=a['replacementFor'];if(d[_0x30da('0x11b')])d=d[_0x30da('0x11b')];if(a==d)return;var t3s=t3Sizes(a,d,children[d[_0x30da('0x1a')]][0x0],children[d[_0x30da('0x1a')]]);if(t3s[0x1]!=0x0&&t3s[0x0]+t3s[0x2]!=0x0&&!separationPairs[_0x30da('0x11d')](function(e){return e[0x0]==a&&e[0x1]==d;}))separationPairs[_0x30da('0x14')]([a,d]);});function t3Sizes(a,d,v,children){var sizeOfV3=children['length']==0x0?0x0:nd[v[_0x30da('0x1a')]];var U=childOnPathTo(a,d);var sizeOfV2=nd[U[_0x30da('0x1a')]]-sizeOfV3-0x1;children[_0x30da('0xd6')](function(W){if(W==v)return;if(low1[W[_0x30da('0x1a')]]<dfsNumber[a[_0x30da('0x1a')]])sizeOfV2-=nd[W[_0x30da('0x1a')]];});var sizeOfV1=VLen-sizeOfV2-sizeOfV3-0x2;return[sizeOfV1,sizeOfV2,sizeOfV3];}return separationPairs;}[_0x30da('0x11e')](start){this['setItemIndices']();this[_0x30da('0xf1')]=0x0;this[_0x30da('0xfb')]=createIdArray(this[_0x30da('0xbb')][_0x30da('0x16')],-0x1);this['searchParent']=createIdArray(this[_0x30da('0xbb')][_0x30da('0x16')],-0x1);this['backMostEdges']=createIdArray(this[_0x30da('0xbb')]['length'],-0x1);if(start!=null)this['searchComponent'](start['index'],start[_0x30da('0x1a')]);for(let v=0x0;v<this['vertices'][_0x30da('0x16')];v++)if(this[_0x30da('0xfb')][v]==-0x1)this[_0x30da('0x11f')](v,v);}[_0x30da('0x11f')](origin,dest){let destVertex=this[_0x30da('0xbb')][dest];this[_0x30da('0xfb')][dest]=this['searchCounter']++;this[_0x30da('0x120')][dest]=origin;this[_0x30da('0xf6')][dest]=this[_0x30da('0xfb')][dest];for(let edge of destVertex[_0x30da('0x0')]){let test=edge[_0x30da('0xf')](destVertex)['index'];if(this[_0x30da('0xfb')][test]==-0x1){this['searchComponent'](dest,test);if(this['backMostEdges'][dest]>this[_0x30da('0xf6')][test])this[_0x30da('0xf6')][dest]=this[_0x30da('0xf6')][test];}else if(test!=origin){if(this['backMostEdges'][dest]>this['searchOrder'][test])this[_0x30da('0xf6')][dest]=this[_0x30da('0xfb')][test];}}}[_0x30da('0x121')](sink){let verticesInStOrder=[];this[_0x30da('0x122')]=createIdArray(this[_0x30da('0xbb')][_0x30da('0x16')],-0x1);let oldVertices=createBoolArray(this[_0x30da('0xbb')]['length']);let oldEdges=createBoolArray(this[_0x30da('0x0')][_0x30da('0x16')]);if(this['vertices'][_0x30da('0x16')]==0x1){verticesInStOrder[_0x30da('0x14')](this['vertices'][0x0]);return verticesInStOrder;}this[_0x30da('0x11e')](sink);let stack=[];let s=null,t=null;for(let vertex of this[_0x30da('0xbb')]){let n=vertex['index'];if(this['searchOrder'][n]==0x0){t=vertex;oldVertices[n]=!![];}else if(this[_0x30da('0xfb')][n]==0x1){s=vertex;oldVertices[n]=!![];}else{oldVertices[n]=![];}}for(let edge of this[_0x30da('0x0')])oldEdges[edge[_0x30da('0x1a')]]=edge[_0x30da('0x123')](s,t);stack[_0x30da('0x14')](t);stack[_0x30da('0x14')](s);let i=0x0;while(!![]){let v=stack[_0x30da('0xf9')]();if(v==t){this[_0x30da('0x122')][v[_0x30da('0x1a')]]=i;verticesInStOrder[_0x30da('0x14')](v);break;}let path=this[_0x30da('0x124')](v,oldVertices,oldEdges);if(path[_0x30da('0x16')]>0x0){let vstack=[];for(let edge of path){vstack[_0x30da('0x14')](v);v=edge[_0x30da('0xf')](v);}while(vstack[_0x30da('0x16')]>0x0)stack[_0x30da('0x14')](vstack[_0x30da('0xf9')]());}else{this[_0x30da('0x122')][v[_0x30da('0x1a')]]=i;verticesInStOrder[_0x30da('0x14')](v);i++;}}return verticesInStOrder;}[_0x30da('0x125')](sink){let reversedEdges=[];this[_0x30da('0x121')](sink);for(let e of this[_0x30da('0x0')]){if(this['stOrder'][e[_0x30da('0x8')][_0x30da('0x1a')]]>this['stOrder'][e[_0x30da('0xa')]['index']]){e[_0x30da('0x21')]();reversedEdges['push'](e);}}return reversedEdges;}[_0x30da('0x126')](edge){return!(this[_0x30da('0x120')][edge[_0x30da('0x8')]['index']]==edge['destination'][_0x30da('0x1a')])&&!(this['searchParent'][edge[_0x30da('0xa')][_0x30da('0x1a')]]==edge['origin']['index']);}[_0x30da('0x124')](v,oldVertices,oldEdges){let path=[];for(let edge of v[_0x30da('0x0')]){let w=edge['getOtherEnd'](v);if(!oldEdges[edge[_0x30da('0x1a')]]&&this[_0x30da('0x126')](edge)&&this[_0x30da('0xfb')][w[_0x30da('0x1a')]]<this['searchOrder'][v[_0x30da('0x1a')]]){oldEdges[edge['index']]=!![];path['push'](edge);return path;}}for(let edge of v[_0x30da('0x0')]){let w=edge[_0x30da('0xf')](v);if(!oldEdges[edge['index']]&&!this[_0x30da('0x126')](edge)&&this[_0x30da('0x120')][w['index']]==v['index']&&this[_0x30da('0xfb')][w[_0x30da('0x1a')]]>this[_0x30da('0xfb')][v['index']]){oldEdges[edge[_0x30da('0x1a')]]=!![];path[_0x30da('0x14')](edge);while(!oldVertices[w[_0x30da('0x1a')]]){let found=![];for(let testEdge of w['edges']){if(!oldEdges[testEdge[_0x30da('0x1a')]]&&this[_0x30da('0xfb')][testEdge[_0x30da('0xf')](w)['index']]==this['backMostEdges'][w['index']]){oldVertices[w[_0x30da('0x1a')]]=!![];oldEdges[testEdge[_0x30da('0x1a')]]=!![];path[_0x30da('0x14')](testEdge);found=!![];break;}}if(!found){for(let testEdge of w[_0x30da('0x0')]){if(!oldEdges[testEdge['index']]&&this[_0x30da('0x120')][testEdge['getOtherEnd'](w)['index']]==w['index']&&this[_0x30da('0xf6')][testEdge[_0x30da('0xf')](w)[_0x30da('0x1a')]]==this['backMostEdges'][w[_0x30da('0x1a')]]){oldVertices[w['index']]=!![];oldEdges[testEdge['index']]=!![];path['push'](testEdge);w=testEdge[_0x30da('0xf')](w);break;}}}}return path;}}for(let edge of v[_0x30da('0x0')]){let w=edge[_0x30da('0xf')](v);if(!oldEdges[edge[_0x30da('0x1a')]]&&this[_0x30da('0x126')](edge)&&this[_0x30da('0xfb')][v['index']]<this[_0x30da('0xfb')][w['index']]){oldEdges[edge[_0x30da('0x1a')]]=!![];path['push'](edge);while(!oldVertices[w[_0x30da('0x1a')]]){for(let testEdge of w['edges']){if(!oldEdges[testEdge[_0x30da('0x1a')]]&&testEdge['getOtherEnd'](w)['index']==this[_0x30da('0x120')][w[_0x30da('0x1a')]]){oldVertices[w[_0x30da('0x1a')]]=!![];oldEdges[testEdge[_0x30da('0x1a')]]=!![];path[_0x30da('0x14')](testEdge);w=testEdge[_0x30da('0xf')](w);break;}}}return path;}}return path;}['isPlanar'](){let biconnectedComponents=this[_0x30da('0xf2')]();for(let block of biconnectedComponents){if(!block['isPlanarSingleBicomponent']({}))return![];}return!![];}[_0x30da('0x127')](embeddingInfo){let edgePermNodes=[];if(this[_0x30da('0xbb')]['length']<=0x2)return!![];let verticesInStOrder=embeddingInfo[_0x30da('0x128')];if(verticesInStOrder==null)verticesInStOrder=this['getStNumbering']();let pqTree=new PQTree();for(let edge of this[_0x30da('0x0')])edgePermNodes[edge[_0x30da('0x1a')]]=new PQTree[(_0x30da('0x28'))](edge);let currentVertex=verticesInStOrder[0x0];for(let edge of currentVertex['edges'])pqTree[_0x30da('0x27')]['addChild'](edgePermNodes[edge[_0x30da('0x1a')]]);for(let j=0x1;j<verticesInStOrder[_0x30da('0x16')];j++){let edgeNodes=[];currentVertex=verticesInStOrder[j];for(let edge of currentVertex[_0x30da('0x0')]){if(this[_0x30da('0x122')][edge['getOtherEnd'](currentVertex)[_0x30da('0x1a')]]<j)edgeNodes[_0x30da('0x14')](edgePermNodes[edge['index']]);}let pertRoot=pqTree[_0x30da('0x2a')](edgeNodes);if(pertRoot==null)return![];if(j<verticesInStOrder[_0x30da('0x16')]-0x1){let newRoot=new PQTree[(_0x30da('0x28'))]();edgeNodes=[];for(let edge of currentVertex[_0x30da('0x0')]){if(this[_0x30da('0x122')][edge[_0x30da('0xf')](currentVertex)[_0x30da('0x1a')]]>j)edgeNodes['push'](edgePermNodes[edge[_0x30da('0x1a')]]);}if(edgeNodes[_0x30da('0x16')]==0x1){newRoot=edgeNodes[0x0];}else{for(let pqNode of edgeNodes)newRoot[_0x30da('0x4c')](pqNode);}let pertRootParent=pertRoot[_0x30da('0x33')];if(pertRoot['type']==NodeType[_0x30da('0x5f')]){pertRoot[_0x30da('0x8a')](newRoot);if(!pertRoot['pseudoRoot']){if(pertRoot[_0x30da('0x7c')]()){pertRoot[_0x30da('0x47')]=NodeType['pNode'];}else if(pertRoot[_0x30da('0x59')][_0x30da('0x2d')]==0x1){if(pertRoot==pqTree[_0x30da('0x27')]){newRoot[_0x30da('0x33')]=null;pqTree['root']=newRoot;}else{pertRoot[_0x30da('0x33')]['replaceChild'](pertRoot,newRoot);}}}}else{if(pertRoot==pqTree['root']){pqTree[_0x30da('0x27')]=newRoot;}else{pertRoot[_0x30da('0x33')][_0x30da('0x50')](pertRoot,newRoot);}}pertRoot[_0x30da('0x25')](![]);if(pertRootParent!=null)pertRootParent[_0x30da('0x25')](!![]);}}if(embeddingInfo['savePqTree'])embeddingInfo[_0x30da('0x129')]=pqTree;return!![];}[_0x30da('0x12a')](){let entireEmbedding=new Embedding(this);let biconnectedComponents=this['getBiconnectedComponents'](!![]);for(let bic of biconnectedComponents){let bicompEmbedding=bic['getPlanarEmbeddingSingleBicomp']({});entireEmbedding[_0x30da('0x12b')](bic,bicompEmbedding);}return entireEmbedding;}[_0x30da('0x12c')](embeddingInfo){let embedding=new Map();if(this['vertices'][_0x30da('0x16')]>0x2){let tVertex=this[_0x30da('0x12d')](embedding,embeddingInfo);if(tVertex!=null)embedding=this[_0x30da('0x12e')](embedding,tVertex);}else{for(let vertex of this[_0x30da('0xbb')]){embedding[_0x30da('0xa5')](vertex,[]);for(let edge of vertex[_0x30da('0x0')])embedding[_0x30da('0x5a')](vertex)[_0x30da('0x14')](edge);}}return embedding;}[_0x30da('0x12d')](embedding,embeddingInfo){this[_0x30da('0xeb')]();let pqTree=new PQTree();let nodemap=new Map();let edgePQNodes=[];for(let edge of this[_0x30da('0x0')])edgePQNodes[edge['index']]=new PQTree['Node'](null,edge);let upwardEdges=[];upwardEdges[_0x30da('0x14')]([]);let verticesInStOrder=embeddingInfo[_0x30da('0x128')];if(verticesInStOrder==null)verticesInStOrder=this[_0x30da('0x121')]();let currentVertex=verticesInStOrder[0x0];for(let edge of currentVertex[_0x30da('0x0')])pqTree['root'][_0x30da('0x4c')](edgePQNodes[edge['index']]);for(let j=0x1;j<verticesInStOrder[_0x30da('0x16')];j++){let edgeNodes=[];currentVertex=verticesInStOrder[j];for(let edge of currentVertex['edges']){if(this[_0x30da('0x122')][edge[_0x30da('0xf')](currentVertex)['index']]<j)edgeNodes[_0x30da('0x14')](edgePQNodes[edge[_0x30da('0x1a')]]);}let pertinentRoot=pqTree['reduction'](edgeNodes);if(pertinentRoot==null)return null;let fullLeaves=pertinentRoot[_0x30da('0x95')]();upwardEdges[_0x30da('0x14')](fullLeaves);if(j<verticesInStOrder[_0x30da('0x16')]-0x1){edgeNodes=[];for(let edge of currentVertex[_0x30da('0x0')]){if(this[_0x30da('0x122')][edge[_0x30da('0xf')](currentVertex)[_0x30da('0x1a')]]>j)edgeNodes[_0x30da('0x14')](edgePQNodes[edge['index']]);}let newRoot=edgeNodes[_0x30da('0x16')]==0x1?edgeNodes[0x0]:new PQTree['Node']();if(edgeNodes['length']>0x1){for(let pqNode of edgeNodes)newRoot[_0x30da('0x4c')](pqNode);}let pertRootParent=pertinentRoot['parent'];if(pertinentRoot[_0x30da('0x47')]==NodeType[_0x30da('0x5f')]&&(pertinentRoot['label']!=NodeLabel['full']||pertinentRoot[_0x30da('0x60')])){let to=pertinentRoot[_0x30da('0x93')]();let from=pertinentRoot['getFullLeavesFrom']();pertinentRoot['replaceFullChildrenWith'](newRoot);let dNode=new PQTree['Node'](NodeType[_0x30da('0x79')],null);nodemap[_0x30da('0xa5')](dNode,currentVertex);dNode['parent']=newRoot[_0x30da('0x33')];if(from!=null){from[_0x30da('0x34')][_0x30da('0x86')](newRoot,dNode);dNode[_0x30da('0x34')]['add'](from);newRoot[_0x30da('0x34')][_0x30da('0x86')](from,dNode);dNode['immediateSiblings'][_0x30da('0x5d')](newRoot);dNode[_0x30da('0x94')]=newRoot;}else if(to!=null){to[_0x30da('0x34')]['replace'](newRoot,dNode);dNode[_0x30da('0x34')]['add'](to);newRoot[_0x30da('0x34')]['replace'](to,dNode);dNode['immediateSiblings']['add'](newRoot);dNode['direction']=to;}if(!pertinentRoot[_0x30da('0x60')]){if(pertinentRoot[_0x30da('0x7c')]()){pertinentRoot[_0x30da('0x47')]=NodeType['pNode'];}else if(pertinentRoot[_0x30da('0x59')][_0x30da('0x2d')]==0x1){if(pertinentRoot==pqTree[_0x30da('0x27')]){newRoot[_0x30da('0x33')]=null;pqTree[_0x30da('0x27')]=newRoot;}else{pertinentRoot[_0x30da('0x33')]['replaceChild'](pertinentRoot,newRoot);}}}}else{if(pertinentRoot==pqTree[_0x30da('0x27')])pqTree['root']=newRoot;else pertinentRoot[_0x30da('0x33')][_0x30da('0x50')](pertinentRoot,newRoot);}pertinentRoot[_0x30da('0x25')](![]);if(pertRootParent!=null)pertRootParent['reinit'](!![]);}}let desiredOrder=embeddingInfo[_0x30da('0x12f')];if(desiredOrder!=null){let h=verticesInStOrder[_0x30da('0x16')]-0x1;let currentOrder=[];for(let node of upwardEdges[h])currentOrder[_0x30da('0x14')](node[_0x30da('0x6a')]);let qNodes=[];pqTree[_0x30da('0x27')][_0x30da('0x8f')](qNodes,NodeType[_0x30da('0x5f')]);for(let qNode of qNodes){let leaves=qNode[_0x30da('0x8d')]();let dCurrent=currentOrder[_0x30da('0x9a')](leaves[0x0][_0x30da('0x6a')])-currentOrder['indexOf'](leaves[0x1][_0x30da('0x6a')]);let dDesired=desiredOrder[_0x30da('0x9a')](leaves[0x0][_0x30da('0x6a')])-desiredOrder['indexOf'](leaves[0x1]['data']);if(dCurrent*dDesired<0x0){for(let child of qNode[_0x30da('0x90')]())if(child['Type']==NodeType['directionIndicator'])child[_0x30da('0x68')]=!child['readInReverseDirection'];}}}for(let h=verticesInStOrder[_0x30da('0x16')]-0x1;h>=0x0;h--){let fullLeaves=upwardEdges[h];for(let k=0x0;k<fullLeaves[_0x30da('0x16')];k++){let pqNode=fullLeaves[k];if(pqNode[_0x30da('0x47')]==NodeType[_0x30da('0x79')]){if(pqNode['readInReverseDirection']){let indexOfNodeToReverse=this['stOrder'][nodemap['get'](pqNode)[_0x30da('0x1a')]];let edgesOfNodeToReverse=upwardEdges[indexOfNodeToReverse];let edgesOfNodeReversed=[];for(let x=edgesOfNodeToReverse[_0x30da('0x16')]-0x1;x>=0x0;x--){let node=edgesOfNodeToReverse[x];if(node[_0x30da('0x47')]==NodeType[_0x30da('0x79')])node[_0x30da('0x68')]=!node['readInReverseDirection'];edgesOfNodeReversed[_0x30da('0x14')](node);}upwardEdges[indexOfNodeToReverse]=edgesOfNodeReversed;}}}}for(let h=0x0;h<verticesInStOrder['length'];h++){currentVertex=verticesInStOrder[h];let fullLeaves=upwardEdges[h];let orderedEdges=[];embedding[_0x30da('0xa5')](currentVertex,orderedEdges);for(let pqNode of fullLeaves){if(pqNode['type']!=NodeType[_0x30da('0x79')])orderedEdges[_0x30da('0x14')](pqNode[_0x30da('0x6a')]);}}if(embeddingInfo['savePqTree'])embeddingInfo[_0x30da('0x129')]=pqTree;return verticesInStOrder[verticesInStOrder['length']-0x1];}[_0x30da('0x12e')](upEmbedding,tVertex){let entireEmbedding=new Map();for(const [vertex,edges]of upEmbedding[_0x30da('0xd1')]())entireEmbedding[_0x30da('0xa5')](vertex,edges[_0x30da('0x9c')]());let oldVertices=createBoolArray(this['vertices'][_0x30da('0x16')]);this[_0x30da('0x130')](upEmbedding,entireEmbedding,tVertex,oldVertices);return entireEmbedding;}[_0x30da('0x130')](upEmbedding,entireEmbedding,vertex,oldVertices){oldVertices[vertex[_0x30da('0x1a')]]=!![];for(let currentEdge of upEmbedding[_0x30da('0x5a')](vertex)){let otherVertex=currentEdge[_0x30da('0xf')](vertex);entireEmbedding[_0x30da('0x5a')](otherVertex)['unshift'](currentEdge);if(!oldVertices[otherVertex[_0x30da('0x1a')]])this[_0x30da('0x130')](upEmbedding,entireEmbedding,otherVertex,oldVertices);}}[_0x30da('0x131')](edgesToDelete,crossingConstrainedEdges){return this[_0x30da('0x132')](edgesToDelete,crossingConstrainedEdges);}[_0x30da('0x133')](edgesToDelete,knownPlanarEdges,crossingConstrainedEdges){let planarSubgraph=new Graph();this['setItemIndices']();let vmap=new Map();let cvmap=new Map();for(let v of this[_0x30da('0xbb')]){let copy=new Vertex();copy['debugId']=v['debugId'];vmap[_0x30da('0xa5')](v,copy);cvmap[_0x30da('0xa5')](copy,v);planarSubgraph['vertices']['push'](copy);}let emap=new Map();let cemap=new Map();planarSubgraph[_0x30da('0xd2')]=vmap;planarSubgraph['vertexCopyToOrigMap']=cvmap;planarSubgraph[_0x30da('0xd3')]=emap;planarSubgraph[_0x30da('0xa7')]=cemap;if(knownPlanarEdges!=null){for(let e of knownPlanarEdges){let copy=planarSubgraph[_0x30da('0xe0')](vmap[_0x30da('0x5a')](e[_0x30da('0x8')]),vmap[_0x30da('0x5a')](e[_0x30da('0xa')]));copy[_0x30da('0xe7')]=e[_0x30da('0xe7')];copy[_0x30da('0x3')]=e[_0x30da('0x3')];emap[_0x30da('0xa5')](e,copy);cemap[_0x30da('0xa5')](copy,e);}if(knownPlanarEdges[_0x30da('0x134')]==this[_0x30da('0x0')][_0x30da('0x16')])return planarSubgraph;}if(crossingConstrainedEdges!=null){if(knownPlanarEdges==null)knownPlanarEdges=new Set();for(let e of crossingConstrainedEdges){if(knownPlanarEdges[_0x30da('0xa8')](e))continue;let copy=planarSubgraph[_0x30da('0xe0')](vmap[_0x30da('0x5a')](e[_0x30da('0x8')]),vmap[_0x30da('0x5a')](e[_0x30da('0xa')]));copy[_0x30da('0xe7')]=e['debugId'];if(!planarSubgraph['isPlanar']()){edgesToDelete[_0x30da('0x135')]();return this[_0x30da('0x133')](edgesToDelete,null,crossingConstrainedEdges);}knownPlanarEdges[_0x30da('0x5d')](e);copy[_0x30da('0x3')]=e[_0x30da('0x3')];emap[_0x30da('0xa5')](e,copy);cemap[_0x30da('0xa5')](copy,e);}}for(let e of this[_0x30da('0x0')]){if(knownPlanarEdges!=null&&knownPlanarEdges[_0x30da('0xa8')](e))continue;let copy=planarSubgraph[_0x30da('0xe0')](vmap[_0x30da('0x5a')](e['origin']),vmap[_0x30da('0x5a')](e[_0x30da('0xa')]));copy[_0x30da('0xe7')]=e[_0x30da('0xe7')];if(!planarSubgraph[_0x30da('0x10c')]()){planarSubgraph[_0x30da('0x7')](copy);edgesToDelete[_0x30da('0x5d')](e);}copy[_0x30da('0x3')]=e[_0x30da('0x3')];emap[_0x30da('0xa5')](e,copy);cemap[_0x30da('0xa5')](copy,e);}return planarSubgraph;}['findPlanarSubgraphByBookEmbedding'](edgesToDelete,crossingConstrainedEdges){this['setItemIndices']();let order=createIdArray(this['vertices'][_0x30da('0x16')],-0x1);let remaining=new Set();for(let v of this['vertices'])remaining[_0x30da('0x5d')](v);let last=null;for(let i=0x0;i<this[_0x30da('0xbb')][_0x30da('0x16')];++i){last=this[_0x30da('0x136')](last,remaining);order[last[_0x30da('0x1a')]]=i;remaining[_0x30da('0xab')](last);}let intervals=[];for(let e of this['edges']){let originPos=order[e[_0x30da('0x8')]['index']];let destPos=order[e[_0x30da('0xa')][_0x30da('0x1a')]];intervals[_0x30da('0x14')](new Interval(Math[_0x30da('0xbd')](originPos,destPos),Math[_0x30da('0xbe')](originPos,destPos)));}let overlapGraph=new Factory['OverlapGraph'](intervals);let veMap=new Map();for(let i=0x0;i<this[_0x30da('0x0')]['length'];++i)veMap['set'](overlapGraph['vertices'][i],this[_0x30da('0x0')][i]);let maxIndependentSet=overlapGraph[_0x30da('0x137')]();let planarEdges=new Set();for(let v of maxIndependentSet)planarEdges[_0x30da('0x5d')](veMap[_0x30da('0x5a')](v));for(let v of maxIndependentSet){Utils['remove'](overlapGraph[_0x30da('0x138')],overlapGraph[_0x30da('0x139')][_0x30da('0x5a')](v));overlapGraph[_0x30da('0x13a')](v);}maxIndependentSet=overlapGraph['maxIndependentSet']();for(let v of maxIndependentSet)planarEdges[_0x30da('0x5d')](veMap[_0x30da('0x5a')](v));return this[_0x30da('0x133')](edgesToDelete,planarEdges,crossingConstrainedEdges);}[_0x30da('0x136')](vertex,vset){if(vertex==null)return this['minDegreeVertex'](vset);let minAdjNeighbor=null;let minAdj=Number[_0x30da('0x13b')];for(let e of vertex[_0x30da('0x0')]){let neighbor=e['getOtherEnd'](vertex);if(!vset[_0x30da('0xa8')](neighbor))continue;let adj=this[_0x30da('0x13c')](neighbor,vset);if(adj<minAdj){minAdj=adj;minAdjNeighbor=neighbor;}}return minAdjNeighbor||this['minDegreeVertex'](vset);}[_0x30da('0x13d')](vset){let minDegree=Number[_0x30da('0x13b')];let minDegreeVertex=null;for(let v of vset){if(v[_0x30da('0x15')]()<minDegree){minDegreeVertex=v;minDegree=v[_0x30da('0x15')]();}}return minDegreeVertex;}['countAdjacencies'](vertex,vset){let count=0x0;for(let e of vertex[_0x30da('0x0')]){if(vset[_0x30da('0xa8')](e[_0x30da('0xf')](vertex)))count++;}return count;}[_0x30da('0x10e')](faceVertices){if(faceVertices[_0x30da('0x16')]<0x2)return this[_0x30da('0x12a')]();let virtualVertex=this[_0x30da('0xe6')]();let virtualEdges=[];for(let vertex of faceVertices){let virtualEdge=this[_0x30da('0xe0')](virtualVertex,vertex);virtualEdges[_0x30da('0x14')](virtualEdge);}let planarization=this[_0x30da('0x13e')](null,virtualEdges);planarization[_0x30da('0xd0')]();let embedding=planarization[_0x30da('0x12a')]();this['removeVertex'](virtualVertex);let virtualCopy=planarization[_0x30da('0xd2')]['get'](virtualVertex);embedding[_0x30da('0x9')](virtualCopy);return new Embedding(null,embedding,planarization[_0x30da('0xa6')],planarization['edgeCopyToOrigMap']);}[_0x30da('0x13e')](edgeToDummyEdgesMap,crossingConstrainedEdges){if(crossingConstrainedEdges!=null){for(let e of this[_0x30da('0x0')])e[_0x30da('0x3')]=0x1;for(let e of crossingConstrainedEdges)e[_0x30da('0x3')]=this[_0x30da('0x0')][_0x30da('0x16')]*0x3e8;}let splitMap=new Map();let splitTrees=new Map();let edgesToDelete=new Set();let planarSubgraph=this[_0x30da('0x131')](edgesToDelete,crossingConstrainedEdges);if(edgesToDelete[_0x30da('0x134')]==0x0)return planarSubgraph;let dualGraph=planarSubgraph[_0x30da('0x13f')](!![]);for(let e of edgesToDelete){let v1=planarSubgraph[_0x30da('0xd2')][_0x30da('0x5a')](e['origin']);let v2=planarSubgraph[_0x30da('0xd2')]['get'](e['destination']);let oFaces=dualGraph[_0x30da('0x140')](v1);let dFaces=dualGraph[_0x30da('0x140')](v2);let oFaceVertices=dualGraph[_0x30da('0x141')](oFaces);let dFaceVertices=dualGraph[_0x30da('0x141')](dFaces);let commonEdges=[];let dummyEdges=[];let dummyEdgePath=[];dummyEdgePath[_0x30da('0x14')](v1);let pathInDualGraph=crossingConstrainedEdges==null?dualGraph[_0x30da('0x142')](oFaceVertices,dFaceVertices):dualGraph[_0x30da('0x143')](oFaceVertices,dFaceVertices);for(let i=0x0;i<pathInDualGraph[_0x30da('0x16')]-0x1;++i){let f1=dualGraph[_0x30da('0x144')]['get'](pathInDualGraph[i]);let f2=dualGraph['vertexToFaceMap']['get'](pathInDualGraph[i+0x1]);let commonEdge=crossingConstrainedEdges==null?dualGraph['getCommonEdge'](f1,f2):dualGraph[_0x30da('0x145')](f1,f2);commonEdges[_0x30da('0x14')](commonEdge);let splitParent=null;if(splitMap[_0x30da('0xa8')](commonEdge)){splitParent=splitMap[_0x30da('0x5a')](commonEdge);}else{let tree=new BinaryTree(commonEdge);splitParent=tree['root'];splitMap[_0x30da('0xa5')](commonEdge,splitParent);if(!commonEdge[_0x30da('0xe9')])splitTrees['set'](commonEdge,tree);}let dummy=planarSubgraph[_0x30da('0xe8')](commonEdge);dummyEdgePath[_0x30da('0x14')](dummy);if(splitParent!=null){splitParent[_0x30da('0xc1')](dummy[_0x30da('0x2')][0x0],dummy[_0x30da('0x1')][0x0]);splitMap[_0x30da('0xa5')](dummy['inEdges'][0x0],splitParent[_0x30da('0x71')]);splitMap[_0x30da('0xa5')](dummy[_0x30da('0x1')][0x0],splitParent[_0x30da('0x6b')]);}}dummyEdgePath['push'](v2);for(let i=0x0;i<dummyEdgePath['length']-0x1;++i){let dummy=planarSubgraph[_0x30da('0xe0')](dummyEdgePath[i],dummyEdgePath[i+0x1]);dummy[_0x30da('0xe9')]=!![];dummyEdges[_0x30da('0x14')](dummy);}for(let i=0x0;i<commonEdges['length'];++i){let replaceInFaces=commonEdges[i];let addedVertex=dummyEdgePath[i+0x1];dualGraph[_0x30da('0xa0')](replaceInFaces,addedVertex);}for(let i=0x0;i<dummyEdges[_0x30da('0x16')];++i){dualGraph[_0x30da('0x146')](dualGraph[_0x30da('0x144')][_0x30da('0x5a')](pathInDualGraph[i]),dummyEdges[i]);}if(edgeToDummyEdgesMap!=null)edgeToDummyEdgesMap[_0x30da('0xa5')](e,dummyEdges);dualGraph['setItemIndices']();}if(edgeToDummyEdgesMap!=null){for(const [edge,tree]of splitTrees[_0x30da('0xd1')]()){edgeToDummyEdgesMap[_0x30da('0xa5')](planarSubgraph['edgeCopyToOrigMap'][_0x30da('0x5a')](edge),tree[_0x30da('0xc0')]());}for(let e of edgesToDelete){let dl=edgeToDummyEdgesMap[_0x30da('0x5a')](e)[_0x30da('0x9c')]();edgeToDummyEdgesMap[_0x30da('0xa5')](e,[]);for(let d of dl){if(splitMap['has'](d))edgeToDummyEdgesMap[_0x30da('0x5a')](e)[_0x30da('0x14')](...splitMap[_0x30da('0x5a')](d)[_0x30da('0xc0')]());else edgeToDummyEdgesMap[_0x30da('0x5a')](e)[_0x30da('0x14')](d);}}}return planarSubgraph;}[_0x30da('0x147')](){if(this[_0x30da('0xbb')][_0x30da('0x16')]<=0x1||this[_0x30da('0x0')][_0x30da('0x16')]<=0x1)return[];if(this[_0x30da('0xbb')]['length']==0x2){var result=[];var edge=this[_0x30da('0x0')][0x0];edge[_0x30da('0x21')]();result[_0x30da('0x14')](edge);return result;}var copy=this[_0x30da('0xcd')](!![]);var n=this[_0x30da('0xbb')][_0x30da('0x16')];var vertexBuckets=new Map();copy[_0x30da('0xbb')][_0x30da('0xd6')](function(v){addVertexToBucket(v,n,vertexBuckets);});var sl=[];var sr=[];while(copy[_0x30da('0xbb')]['length']>0x0){if(vertexBuckets['has'](0x2-n)){var sinks=vertexBuckets[_0x30da('0x5a')](0x2-n);while(sinks['length']>0x0){var sink=sinks[_0x30da('0xf9')]();sink[_0x30da('0x0')][_0x30da('0xd6')](function(e){var neighbor=e[_0x30da('0xf')](sink);var bucket=getBucket(neighbor,n);Utils['remove'](vertexBuckets[_0x30da('0x5a')](bucket),neighbor);neighbor[_0x30da('0x7')](e);addVertexToBucket(neighbor,n,vertexBuckets);});Utils[_0x30da('0x9')](copy[_0x30da('0xbb')],sink);sr[_0x30da('0x148')](sink);}}if(vertexBuckets[_0x30da('0xa8')](n-0x2)){var sources=vertexBuckets['get'](n-0x2);while(sources['length']>0x0){var source=sources[_0x30da('0xf9')]();source[_0x30da('0x0')][_0x30da('0xd6')](function(e){var neighbor=e[_0x30da('0xf')](source);var bucket=getBucket(neighbor,n);Utils[_0x30da('0x9')](vertexBuckets[_0x30da('0x5a')](bucket),neighbor);neighbor['removeEdge'](e);addVertexToBucket(neighbor,n,vertexBuckets);});Utils[_0x30da('0x9')](copy[_0x30da('0xbb')],source);sl['push'](source);}}if(copy[_0x30da('0xbb')][_0x30da('0x16')]>0x0){for(var i=n-0x3;i>0x2-n;i--){if(vertexBuckets[_0x30da('0xa8')](i)&&vertexBuckets[_0x30da('0x5a')](i)[_0x30da('0x16')]>0x0){var maxdiff=vertexBuckets['get'](i);var v=maxdiff[_0x30da('0xf9')]();v[_0x30da('0x0')][_0x30da('0xd6')](function(e){var neighbor=e[_0x30da('0xf')](v);var bucket=getBucket(neighbor,n);Utils['remove'](vertexBuckets['get'](bucket),neighbor);neighbor[_0x30da('0x7')](e);addVertexToBucket(neighbor,n,vertexBuckets);});Utils[_0x30da('0x9')](copy[_0x30da('0xbb')],v);sl[_0x30da('0x14')](v);break;}}}}sl[_0x30da('0x14')](...sr);var vertexOrder=new Map();for(var i=0x0;i<this[_0x30da('0xbb')][_0x30da('0x16')];i++)vertexOrder['set'](copy[_0x30da('0xa6')][_0x30da('0x5a')](sl[i]),i);var reversedEdges=[];this[_0x30da('0x0')][_0x30da('0xd6')](function(e){if(vertexOrder[_0x30da('0x5a')](e[_0x30da('0x8')])>vertexOrder[_0x30da('0x5a')](e[_0x30da('0xa')])){e[_0x30da('0x21')]();reversedEdges['push'](e);}});return reversedEdges;}[_0x30da('0x13f')](cacheIncidentFaces){let embedding=this['getPlanarEmbedding']();return new Factory['DualGraph'](this,embedding,cacheIncidentFaces);}[_0x30da('0x149')](embedding,s,t){return new Factory[(_0x30da('0x110'))](this,embedding,!![],s,t);}['topologicalSort'](){this['setItemIndices']();this[_0x30da('0xf1')]=0x0;this[_0x30da('0x14a')]=0x0;var vertices=this[_0x30da('0xbb')];var postOrder=createIdArray(vertices[_0x30da('0x16')],-0x1);var topologicalOrder=createIdArray(vertices[_0x30da('0x16')],-0x1);this[_0x30da('0xfb')]=createIdArray(vertices[_0x30da('0x16')],-0x1);for(var v=0x0;v<vertices[_0x30da('0x16')];v++){if(this[_0x30da('0xfb')][v]==-0x1){var acyclic=this[_0x30da('0x14b')](postOrder,topologicalOrder,v);if(!acyclic)return null;}}topologicalOrder[_0x30da('0x21')]();return topologicalOrder;}[_0x30da('0x14b')](postOrder,topologicalOrder,dest){var destVertex=this[_0x30da('0xbb')][dest];this['searchOrder'][dest]=this[_0x30da('0xf1')]++;for(var e=0x0;e<destVertex['outEdges'][_0x30da('0x16')];e++){var edge=destVertex[_0x30da('0x1')][e];var test=edge[_0x30da('0xa')][_0x30da('0x1a')];if(this[_0x30da('0xfb')][test]==-0x1){var acyclic=this[_0x30da('0x14b')](postOrder,topologicalOrder,test);if(!acyclic)return![];}else if(postOrder[test]==-0x1){return![];}}topologicalOrder[this['postCounter']]=dest;postOrder[dest]=this['postCounter']++;return!![];}[_0x30da('0x14c')](minNumber){if(minNumber==null)minNumber=0x0;let tsort=this[_0x30da('0x14d')]();return this['getWeightedTopologicalNumberingTS'](tsort,minNumber);}[_0x30da('0x14e')](tsort,minNumber){if(tsort==null)return null;let wtn=createIdArray(this[_0x30da('0xbb')][_0x30da('0x16')],minNumber);for(let i=0x0;i<this[_0x30da('0xbb')]['length'];++i){let v=this['vertices'][tsort[i]];for(let e of v[_0x30da('0x1')])if(wtn[v[_0x30da('0x1a')]]+e[_0x30da('0x3')]>wtn[e[_0x30da('0xa')][_0x30da('0x1a')]])wtn[e[_0x30da('0xa')][_0x30da('0x1a')]]=wtn[v[_0x30da('0x1a')]]+e['weight'];}return wtn;}[_0x30da('0x14f')](maxDegree,embedding){let toReplace=[];for(let v of this[_0x30da('0xbb')]){if(v[_0x30da('0x15')]()>maxDegree)toReplace[_0x30da('0x14')](v);}let replacementMap=new Map();for(let v of toReplace)replacementMap[_0x30da('0xa5')](v,this[_0x30da('0x150')](v,maxDegree,embedding));return replacementMap;}[_0x30da('0x150')](vertex,maxDegree,embedding){let rplcSize=Math[_0x30da('0xca')]((vertex['degree']()+0x1)/0x2);let dummyCycle=[];dummyCycle[0x0]=vertex;for(let i=0x1;i<rplcSize;++i){let dummy=new Vertex();dummyCycle[i]=dummy;this[_0x30da('0xbb')]['push'](dummy);}let ve=embedding[_0x30da('0x5a')](vertex)[_0x30da('0x9c')]();for(let i=0x2;i<ve[_0x30da('0x16')];++i){let e=ve[i];if(e[_0x30da('0x8')]==vertex)e[_0x30da('0x1d')](dummyCycle[Math[_0x30da('0xca')](i/0x2)]);else if(e['destination']==vertex)e['changeDestination'](dummyCycle[Math[_0x30da('0xca')](i/0x2)]);}let replacement=new Graph();replacement[_0x30da('0xbb')][_0x30da('0x14')](...dummyCycle);for(let i=0x0;i<dummyCycle[_0x30da('0x16')];++i){let ce=this['createEdge'](dummyCycle[i],dummyCycle[(i+0x1)%dummyCycle[_0x30da('0x16')]]);ce[_0x30da('0xe9')]=!![];replacement['edges'][_0x30da('0x14')](ce);}return replacement;}['reorderTopologically'](){let topologicalOrder=this[_0x30da('0x14d')]();if(topologicalOrder==null)throw new Error(_0x30da('0x151'));let sortedVertices=[];for(let i=0x0;i<this[_0x30da('0xbb')]['length'];++i)sortedVertices[_0x30da('0x14')](this[_0x30da('0xbb')][topologicalOrder[i]]);this[_0x30da('0xbb')]=sortedVertices;this[_0x30da('0xeb')]();}['maxWeightedCliqueOfTransitiveDAG'](){let g=this[_0x30da('0xcd')](!![]);g['reorderTopologically']();let sectionMaxCliqueWeights=createIdArray(this[_0x30da('0xbb')][_0x30da('0x16')],0x0);for(let i=0x0;i<this[_0x30da('0xbb')]['length'];++i){let v=g[_0x30da('0xbb')][i];let maxCliqueWeight=v[_0x30da('0x3')];for(let e of v[_0x30da('0x2')])maxCliqueWeight=Math[_0x30da('0xbe')](maxCliqueWeight,sectionMaxCliqueWeights[e['origin'][_0x30da('0x1a')]]+v[_0x30da('0x3')]);sectionMaxCliqueWeights[i]=maxCliqueWeight;}let maxCliqueHighest=null;let sectionMaxCliqueWeight=-0x1;for(let i=0x0;i<this[_0x30da('0xbb')]['length'];++i){if(sectionMaxCliqueWeight<sectionMaxCliqueWeights[i]){maxCliqueHighest=g['vertices'][i];sectionMaxCliqueWeight=sectionMaxCliqueWeights[i];}}if(maxCliqueHighest==null)throw Error(_0x30da('0x152'));let maxClique=[];maxClique[_0x30da('0x14')](g[_0x30da('0xa6')][_0x30da('0x5a')](maxCliqueHighest));let sectionMaxCliqueHighest=maxCliqueHighest;while(sectionMaxCliqueHighest[_0x30da('0x2')][_0x30da('0x16')]>0x0){sectionMaxCliqueWeight=-0x1;for(let e of sectionMaxCliqueHighest['inEdges']){let v=e[_0x30da('0x8')];if(sectionMaxCliqueWeight<sectionMaxCliqueWeights[v[_0x30da('0x1a')]]){sectionMaxCliqueHighest=v;sectionMaxCliqueWeight=sectionMaxCliqueWeights[v[_0x30da('0x1a')]];}}maxClique[_0x30da('0x14')](g[_0x30da('0xa6')]['get'](sectionMaxCliqueHighest));}return maxClique;}}function getBucket(vertex,n){if(vertex[_0x30da('0x1')]['length']==0x0)return 0x2-n;else if(vertex['inEdges']['length']==0x0)return n-0x2;else return vertex[_0x30da('0x1')][_0x30da('0x16')]-vertex['inEdges'][_0x30da('0x16')];}function addVertexToBucket(vertex,n,vertexBuckets){var bucket=getBucket(vertex,n);if(!vertexBuckets[_0x30da('0xa8')](bucket))vertexBuckets['set'](bucket,[]);vertexBuckets[_0x30da('0x5a')](bucket)[_0x30da('0x14')](vertex);}function createIdArray(size,value){var array=[];for(var i=0x0;i<size;++i)array[i]=value;return array;}function createBoolArray(size){let array=[];for(let i=0x0;i<size;++i)array[i]=![];return array;}class BlockCutpointGraph extends Graph{constructor(graph){super();this['targetGraph']=graph;this[_0x30da('0x153')]=new Map();this[_0x30da('0x154')]=new Map();this[_0x30da('0x155')]=graph[_0x30da('0xf2')](!![],(b,c)=>this[_0x30da('0x156')](b,c));}[_0x30da('0x156')](componentBlocks,componentCuts){for(let block of componentBlocks){let bNode=this[_0x30da('0xe6')]();bNode['data']=block;block['createReverseMaps']();this[_0x30da('0x153')][_0x30da('0xa5')](block,bNode);}if(componentCuts==null)return;for(let cut of componentCuts){let cNode=this[_0x30da('0xe6')](cut['debugId']);cNode['data']=cut;this['cutToCnodeMap'][_0x30da('0xa5')](cut,cNode);for(let block of componentBlocks){if(block[_0x30da('0xd2')][_0x30da('0xa8')](cut))this['createEdge'](this[_0x30da('0x153')]['get'](block),cNode);}}}[_0x30da('0x157')](block){let cutVertices=[];let bNode=this[_0x30da('0x153')][_0x30da('0x5a')](block);for(let edge of bNode['edges']){let vertex=edge[_0x30da('0xf')](bNode);cutVertices[_0x30da('0x14')](vertex[_0x30da('0x6a')]);}return cutVertices;}['cutVerticesV'](bNode){let cutVertices=[];for(let edge of bNode[_0x30da('0x0')]){let vertex=edge[_0x30da('0xf')](bNode);cutVertices['push'](vertex[_0x30da('0x6a')]);}return cutVertices;}[_0x30da('0x158')](bNode){return bNode[_0x30da('0x0')][_0x30da('0x16')]==0x1;}[_0x30da('0x159')](cutVertex){let adjacentBlocks=[];let cNode=this['cutToCnodeMap'][_0x30da('0x5a')](cutVertex);for(let edge of cNode[_0x30da('0x0')]){let vertex=edge[_0x30da('0xf')](cNode);adjacentBlocks[_0x30da('0x14')](vertex['data']);}return adjacentBlocks;}[_0x30da('0x102')](){this[_0x30da('0x27')]=null;let minDegree=Number[_0x30da('0x13b')];for(let vertex of this[_0x30da('0xbb')]){if(this[_0x30da('0x15a')](vertex)&&vertex[_0x30da('0x15')]()<minDegree){this['root']=vertex;minDegree=this[_0x30da('0x27')][_0x30da('0x15')]();}}this[_0x30da('0x15b')](null,this['root']);}[_0x30da('0x15b')](parent,vertex){for(let edge of vertex[_0x30da('0x0')]){let otherEnd=edge['getOtherEnd'](vertex);if(otherEnd==parent){if(edge[_0x30da('0xa')]==parent)edge[_0x30da('0x21')]();}else{this[_0x30da('0x15b')](vertex,otherEnd);}}}[_0x30da('0x15c')](){if(this['vertices']['length']<0x2)return null;for(let vertex of this[_0x30da('0xbb')]){if(this[_0x30da('0x15d')](vertex)){let pendantCut=!![];for(let edge of vertex['outEdges']){let child=edge[_0x30da('0xa')];if(!this['isPendant'](child)){pendantCut=![];break;}}if(pendantCut)return vertex;}}return null;}[_0x30da('0x104')](bNode){let block=this[_0x30da('0x15e')](bNode);let cutpoints=this[_0x30da('0x15f')](this['cutVerticesV'](bNode),block['vertexOrigToCopyMap']);return block['vertexCopyToOrigMap'][_0x30da('0x5a')](block['getOutsideVertexCP'](cutpoints));}[_0x30da('0x107')](bNode,neighborCnode){let block=this[_0x30da('0x15e')](bNode);let neighborCutvertex=this['getCutvertex'](neighborCnode);let copy=block['vertexOrigToCopyMap'][_0x30da('0x5a')](neighborCutvertex);let cutpoints=[];cutpoints[_0x30da('0x14')](copy);return block[_0x30da('0xa6')][_0x30da('0x5a')](block['getOutsideVertexCPN'](cutpoints,copy));}['getBlock'](bNode){return bNode[_0x30da('0x6a')];}[_0x30da('0x106')](cNode){return cNode[_0x30da('0x6a')];}['getCnode'](cut){return this[_0x30da('0x154')]['get'](cut);}['mapVertices'](vertices,map){let mappedVertices=[];for(let vertex of vertices)mappedVertices['push'](map['get'](vertex));return mappedVertices;}['mergeBlocks'](bnodes,parent){let union=new Set();for(let bNode of bnodes){let block=this[_0x30da('0x15e')](bNode);Utils['addAll'](union,this[_0x30da('0x15f')](block[_0x30da('0xbb')],block[_0x30da('0xa6')]));}let mergedBlock=this[_0x30da('0x160')][_0x30da('0xce')](union[_0x30da('0xaf')](),!![]);mergedBlock['createReverseMaps']();parent[_0x30da('0x6a')]=mergedBlock;this[_0x30da('0x153')][_0x30da('0xa5')](mergedBlock,parent);for(let bNode of bnodes){if(bNode==parent)continue;let edges=bNode[_0x30da('0x1')][_0x30da('0x9c')]();for(let edge of edges)edge['changeOrigin'](parent);}}[_0x30da('0x109')](vertex,parent){vertex[_0x30da('0x2')][0x0]['changeOrigin'](parent);}['removeCnode'](cNode){this[_0x30da('0x154')][_0x30da('0xab')](this[_0x30da('0x106')](cNode));this[_0x30da('0x13a')](cNode);}['removeBnode'](bNode){this['blockToBnodeMap'][_0x30da('0xab')](this[_0x30da('0x15e')](bNode));this[_0x30da('0x13a')](bNode);}['isCnode'](vertex){return vertex[_0x30da('0x6a')]instanceof Vertex;}[_0x30da('0x15a')](vertex){return vertex[_0x30da('0x6a')]instanceof Graph;}}Factory['BlockCutpointGraph']=BlockCutpointGraph;class DualGraph extends Graph{constructor(graph,embedding,cacheIncidentFaces,s,t){super();this[_0x30da('0xa4')]=graph;this[_0x30da('0xa3')]=embedding;this[_0x30da('0xbc')]=[];this['edgeToFaceMap']=new Map();if(cacheIncidentFaces)this[_0x30da('0x161')]=new Map();embedding[_0x30da('0x162')]();for(let v of embedding[_0x30da('0xbb')]){for(let e of embedding[_0x30da('0x5a')](v)){if(this[_0x30da('0x163')][_0x30da('0xa8')](e))continue;let f=new Face();this[_0x30da('0xbc')][_0x30da('0x14')](f);let nextE=e;do{this[_0x30da('0x163')][_0x30da('0xa5')](nextE,f);f[_0x30da('0x0')]['push'](nextE);nextE=embedding[_0x30da('0x164')](nextE);}while(nextE!=e);if(cacheIncidentFaces){for(let be of f['edges']){let o=be[_0x30da('0x8')];let ofaces=null;if(!this['incidentFaces'][_0x30da('0xa8')](o)){ofaces=[];this[_0x30da('0x161')][_0x30da('0xa5')](o,ofaces);}else{ofaces=this[_0x30da('0x161')][_0x30da('0x5a')](o);}if(ofaces[_0x30da('0x16')]==0x0||ofaces[0x0]!=f&&ofaces[ofaces[_0x30da('0x16')]-0x1]!=f)ofaces[_0x30da('0x14')](f);}}}}this[_0x30da('0x165')]=new Map();this[_0x30da('0x144')]=new Map();for(let f of this[_0x30da('0xbc')])this[_0x30da('0x166')](f);for(let e of graph['edges'])this[_0x30da('0x167')](e);this[_0x30da('0xeb')]();if(s)this[_0x30da('0x168')](s,t);}['splitExternalFace'](s,t){let sFaces=this[_0x30da('0x140')](s);let externalFace=null;for(let f of sFaces){if(f[_0x30da('0xb')](t)){if(externalFace==null){externalFace=f;}else{if(f[_0x30da('0x0')]['length']>externalFace[_0x30da('0x0')][_0x30da('0x16')])externalFace=f;}}}this['leftExFace']=externalFace;this[_0x30da('0x169')]=this[_0x30da('0x165')][_0x30da('0x5a')](this[_0x30da('0x16a')]);this[_0x30da('0x16b')]=new Face();this['faces'][_0x30da('0x14')](this[_0x30da('0x16b')]);this[_0x30da('0x16c')]=new Vertex();this[_0x30da('0xbb')][_0x30da('0x14')](this[_0x30da('0x16c')]);this[_0x30da('0x165')][_0x30da('0xa5')](this['rightExFace'],this[_0x30da('0x16c')]);this['vertexToFaceMap'][_0x30da('0xa5')](this['rightExVertex'],this[_0x30da('0x16b')]);let inEdges=this[_0x30da('0x169')][_0x30da('0x2')]['slice']();for(let e of inEdges){this[_0x30da('0x169')][_0x30da('0x7')](e);e['destination']=this['rightExVertex'];this[_0x30da('0x16c')]['inEdges'][_0x30da('0x14')](e);this[_0x30da('0x16c')][_0x30da('0x0')]['push'](e);}for(let e of externalFace['edges']){if(e[_0x30da('0x23')])this[_0x30da('0x163')]['set'](e,this[_0x30da('0x16b')]);}}['getIncidentFaces'](v){return this[_0x30da('0x161')][_0x30da('0x5a')](v);}['cacheIncidentFace'](v,f){if(!this[_0x30da('0x161')][_0x30da('0xa8')](v))this['incidentFaces'][_0x30da('0xa5')](v,[]);this['incidentFaces']['get'](v)['push'](f);}['getVertices'](face){let faceVertices=new Set();for(let edge of face[_0x30da('0x0')]){faceVertices[_0x30da('0x5d')](edge[_0x30da('0x8')]);faceVertices[_0x30da('0x5d')](edge[_0x30da('0xa')]);}return faceVertices;}[_0x30da('0x141')](faceList){let faceVertices=new Set();for(let f of faceList)faceVertices[_0x30da('0x5d')](this['faceToVertexMap']['get'](f));return faceVertices;}[_0x30da('0xe')](f1,f2){for(let e of f1[_0x30da('0x0')]){let r=this['embedding'][_0x30da('0x16d')](e);if(this[_0x30da('0x163')][_0x30da('0x5a')](r)==f2)return this[_0x30da('0x16e')](e);}return null;}[_0x30da('0x145')](f1,f2){let minWeight=Number[_0x30da('0xee')];let minWeightEdge=null;for(let e of f1['edges']){let r=this[_0x30da('0xa3')][_0x30da('0x16d')](e);if(this[_0x30da('0x163')][_0x30da('0x5a')](r)==f2){let edge=this[_0x30da('0x16e')](e);if(edge['weight']<minWeight){minWeightEdge=edge;minWeight=edge[_0x30da('0x3')];}}}return minWeightEdge;}['getOriginalEdge'](e){for(let oe of e[_0x30da('0x8')][_0x30da('0x0')]){if(oe[_0x30da('0x123')](e[_0x30da('0x8')],e[_0x30da('0xa')]))return oe;}return null;}[_0x30da('0xa0')](oldEdge,newVertex){let e1=newVertex['inEdges'][0x0];let e2=newVertex[_0x30da('0x1')][0x0];let r=this['embedding'][_0x30da('0x16d')](oldEdge);let f1=this[_0x30da('0x163')][_0x30da('0x5a')](oldEdge);let edgeIndex=f1['edges']['indexOf'](oldEdge);f1[_0x30da('0x0')][edgeIndex]=e1;f1[_0x30da('0x0')][_0x30da('0x9b')](edgeIndex+0x1,0x0,e2);let f2=this[_0x30da('0x163')][_0x30da('0x5a')](r);let r1=e2[_0x30da('0x22')]();let r2=e1[_0x30da('0x22')]();edgeIndex=f2[_0x30da('0x0')][_0x30da('0x9a')](r);f2[_0x30da('0x0')][edgeIndex]=r1;f2['edges'][_0x30da('0x9b')](edgeIndex+0x1,0x0,r2);this[_0x30da('0x163')][_0x30da('0xab')](oldEdge);this[_0x30da('0x163')][_0x30da('0xa5')](e1,f1);this[_0x30da('0x163')][_0x30da('0xa5')](e2,f1);this[_0x30da('0x163')][_0x30da('0xab')](r);this[_0x30da('0x163')]['set'](r1,f2);this['edgeToFaceMap']['set'](r2,f2);this['embedding'][_0x30da('0xaa')](oldEdge,e1,e2,r,r1,r2,newVertex);if(this[_0x30da('0x161')]!=null)this[_0x30da('0x161')]['set'](newVertex,[f1,f2]);}[_0x30da('0x146')](f,newEdge){let fromEdge=null,toEdge=null;let from=-0x1;for(let i=0x0;i<f[_0x30da('0x0')][_0x30da('0x16')];++i){let e=f[_0x30da('0x0')][i];if(e['origin']==newEdge['destination']){from=i;fromEdge=e;}if(e[_0x30da('0xa')]==newEdge[_0x30da('0x8')]){toEdge=e;}}let f1=new Face();f1[_0x30da('0x0')][_0x30da('0x14')](newEdge);this[_0x30da('0x163')][_0x30da('0xa5')](newEdge,f1);let ei=from;do{let fe=f[_0x30da('0x0')][ei];f1[_0x30da('0x0')]['push'](fe);this[_0x30da('0x163')][_0x30da('0xa5')](fe,f1);ei=(ei+0x1)%f[_0x30da('0x0')]['length'];}while(f1[_0x30da('0x0')][f1['edges'][_0x30da('0x16')]-0x1]!=toEdge);let r=new Edge(newEdge[_0x30da('0xa')],newEdge['origin']);let f2=new Face();f2['edges']['push'](r);this[_0x30da('0x163')]['set'](r,f2);do{let fe=f['edges'][ei];f2['edges']['push'](fe);this[_0x30da('0x163')][_0x30da('0xa5')](fe,f2);ei=(ei+0x1)%f[_0x30da('0x0')]['length'];}while(ei!=from);this[_0x30da('0xa3')][_0x30da('0xac')](newEdge,r,fromEdge,toEdge);let v=this[_0x30da('0x165')][_0x30da('0x5a')](f);while(v['edges'][_0x30da('0x16')]>0x0)this[_0x30da('0x7')](v[_0x30da('0x0')][0x0]);this[_0x30da('0x165')][_0x30da('0xab')](f);this[_0x30da('0x144')]['delete'](v);Utils[_0x30da('0x9')](this['vertices'],v);this[_0x30da('0x166')](f1);this['dgCreateVertex'](f2);for(let e of f1[_0x30da('0x0')])this[_0x30da('0x167')](e);for(let e of f2[_0x30da('0x0')])this[_0x30da('0x167')](e);if(this[_0x30da('0x161')]!=null){for(let e of f1[_0x30da('0x0')]){let o=e[_0x30da('0x8')];let ofaces=this[_0x30da('0x161')][_0x30da('0x5a')](o);let oi=ofaces['indexOf'](f);if(oi!=-0x1){ofaces[oi]=f1;if(o==newEdge[_0x30da('0x8')])ofaces[_0x30da('0x9b')](oi+0x1,0x0,f2);if(o==newEdge[_0x30da('0xa')])ofaces[_0x30da('0x9b')](oi,0x0,f2);}}for(let e of f2[_0x30da('0x0')]){let o=e[_0x30da('0x8')];let ofaces=this[_0x30da('0x161')][_0x30da('0x5a')](o);let oi=ofaces[_0x30da('0x9a')](f);if(oi!=-0x1)ofaces[oi]=f2;}}Utils['remove'](this[_0x30da('0xbc')],f);this['faces'][_0x30da('0x14')](f1);this[_0x30da('0xbc')][_0x30da('0x14')](f2);for(let vertex of f1['getVertices']()){let vf=this[_0x30da('0x140')](vertex);if(!vf['includes'](f1)){vf['push'](f1);}}for(let vertex of f2[_0x30da('0x9d')]()){let vf=this['getIncidentFaces'](vertex);if(!vf[_0x30da('0xc')](f2)){vf['push'](f2);}}}[_0x30da('0x166')](f){let v=new Vertex();this[_0x30da('0xbb')][_0x30da('0x14')](v);this['faceToVertexMap'][_0x30da('0xa5')](f,v);this[_0x30da('0x144')][_0x30da('0xa5')](v,f);return v;}[_0x30da('0x167')](e){let r=this[_0x30da('0xa3')][_0x30da('0x16d')](e);let f1=this[_0x30da('0x163')][_0x30da('0x5a')](e);let f2=this[_0x30da('0x163')][_0x30da('0x5a')](r);let d=this[_0x30da('0xe0')](this[_0x30da('0x165')]['get'](f1),this[_0x30da('0x165')][_0x30da('0x5a')](f2));d[_0x30da('0x3')]=e[_0x30da('0x3')];return d;}[_0x30da('0x16f')](){for(let i=0x0;i<this[_0x30da('0xbc')]['length'];++i)this[_0x30da('0xbc')][i][_0x30da('0x1a')]=i;}[_0x30da('0x71')](e){return e[_0x30da('0x23')]?this[_0x30da('0x163')][_0x30da('0x5a')](this[_0x30da('0xa3')][_0x30da('0x16d')](e)):this['edgeToFaceMap'][_0x30da('0x5a')](e);}['right'](e){return e[_0x30da('0x23')]?this[_0x30da('0x163')][_0x30da('0x5a')](e):this[_0x30da('0x163')][_0x30da('0x5a')](this[_0x30da('0xa3')]['getReverse'](e));}}Factory[_0x30da('0x110')]=DualGraph;class IntervalGraph extends Graph{constructor(intervals){super();this[_0x30da('0x170')]=new Map();for(let interval of intervals){let vertex=new Vertex();this[_0x30da('0xbb')][_0x30da('0x14')](vertex);this['intervalVertices'][_0x30da('0xa5')](interval,vertex);}for(let i=0x0;i<intervals['length']-0x1;++i){for(let j=i+0x1;j<intervals[_0x30da('0x16')];++j){let i1=intervals[i];let i2=intervals[j];if(i1[_0x30da('0xbf')](i2))this[_0x30da('0xe0')](this[_0x30da('0xbb')][i],this[_0x30da('0xbb')][j]);}}this['intervals']=intervals[_0x30da('0x9c')]();}['maxWeightedIndependentSet'](){let complement=new Graph();for(let vertex of this[_0x30da('0xbb')]){let copy=complement[_0x30da('0xe6')](vertex[_0x30da('0xe7')]);copy[_0x30da('0x3')]=vertex['weight'];}for(let i=0x0;i<this[_0x30da('0xbb')][_0x30da('0x16')]-0x1;++i){for(let j=i+0x1;j<this[_0x30da('0xbb')][_0x30da('0x16')];++j){if(!this[_0x30da('0xbb')][i][_0x30da('0xd')](this[_0x30da('0xbb')][j]))complement[_0x30da('0xe0')](complement[_0x30da('0xbb')][i],complement[_0x30da('0xbb')][j]);}}complement['setItemIndices']();for(let e of complement[_0x30da('0x0')]){let oi=e[_0x30da('0x8')][_0x30da('0x1a')];let di=e[_0x30da('0xa')][_0x30da('0x1a')];if(this[_0x30da('0x138')][oi]['min']>this[_0x30da('0x138')][di][_0x30da('0xbd')])e[_0x30da('0x21')]();}let complementMaxClique=complement['maxWeightedCliqueOfTransitiveDAG']();let maxIndependentSet=[];for(let v of complementMaxClique){let original=this[_0x30da('0xbb')][v[_0x30da('0x1a')]];maxIndependentSet[_0x30da('0x14')](original);}return maxIndependentSet;}}class OverlapGraph extends Graph{constructor(intervals){super();this['intervalVertices']=new Map();this[_0x30da('0x139')]=new Map();for(let interval of intervals){let vertex=new Vertex();this['vertices'][_0x30da('0x14')](vertex);this[_0x30da('0x170')]['set'](interval,vertex);this[_0x30da('0x139')][_0x30da('0xa5')](vertex,interval);}for(let i=0x0;i<intervals[_0x30da('0x16')]-0x1;++i){for(let j=i+0x1;j<intervals[_0x30da('0x16')];++j){let i1=intervals[i];let i2=intervals[j];if(i1[_0x30da('0x171')](i2))this[_0x30da('0xe0')](this[_0x30da('0xbb')][i],this[_0x30da('0xbb')][j]);}}this[_0x30da('0xeb')]();this[_0x30da('0x138')]=intervals[_0x30da('0x9c')]();}[_0x30da('0x137')](){if(this['vertices']['length']==0x0)return new Set();this['setItemIndices']();let inclusionGraph=new Graph();for(let interval of this[_0x30da('0x138')])inclusionGraph[_0x30da('0xe6')]();for(let i=0x0;i<this[_0x30da('0x138')][_0x30da('0x16')];++i){for(let j=0x0;j<this['intervals'][_0x30da('0x16')];++j){let i1=this['intervals'][i];let i2=this[_0x30da('0x138')][j];if(i1!=i2&&i1[_0x30da('0x82')](i2))inclusionGraph[_0x30da('0xe0')](inclusionGraph['vertices'][i],inclusionGraph[_0x30da('0xbb')][j]);}}let root=new Vertex();for(let vertex of inclusionGraph['vertices'])inclusionGraph[_0x30da('0xe0')](root,vertex);inclusionGraph[_0x30da('0xbb')]['push'](root);inclusionGraph[_0x30da('0xeb')]();this['inclusionLevels']=new Map();this['levelVertices']=[];this[_0x30da('0x172')](root);let vertexWeights=new Map();for(let vertex of this['levelVertices'][0x0])vertexWeights[_0x30da('0xa5')](vertex,0x1);let subgraphMaxSets=new Map();for(let vertex of this[_0x30da('0x173')][0x0])subgraphMaxSets[_0x30da('0xa5')](vertex,new Set());for(let i=0x1;i<this[_0x30da('0x173')]['length'];++i){for(let v of this['levelVertices'][i]){let subIntervals=[];for(let e of inclusionGraph['vertices'][v['index']]['outEdges'])subIntervals[_0x30da('0x14')](this[_0x30da('0x138')][e['destination'][_0x30da('0x1a')]]);let subIntervalGraph=new IntervalGraph(subIntervals);subIntervalGraph[_0x30da('0xeb')]();for(let il of subIntervals)subIntervalGraph['intervalVertices']['get'](il)['weight']=vertexWeights[_0x30da('0x5a')](this[_0x30da('0x170')]['get'](il));let wSet=subIntervalGraph[_0x30da('0x174')]();let vsubMaxIndependentSet=new Set();for(let u of wSet){let interval=subIntervalGraph[_0x30da('0x138')][u[_0x30da('0x1a')]];let overlapGraphVertex=this[_0x30da('0x170')][_0x30da('0x5a')](interval);vsubMaxIndependentSet[_0x30da('0x5d')](overlapGraphVertex);Utils[_0x30da('0x103')](vsubMaxIndependentSet,subgraphMaxSets[_0x30da('0x5a')](overlapGraphVertex));}subgraphMaxSets[_0x30da('0xa5')](v,vsubMaxIndependentSet);vertexWeights[_0x30da('0xa5')](v,vsubMaxIndependentSet[_0x30da('0x134')]+0x1);}}let intervalGraph=new IntervalGraph(this[_0x30da('0x138')]);intervalGraph[_0x30da('0xeb')]();for(let il of this[_0x30da('0x138')])intervalGraph[_0x30da('0x170')][_0x30da('0x5a')](il)['weight']=vertexWeights[_0x30da('0x5a')](this[_0x30da('0x170')][_0x30da('0x5a')](il));let wMaxIndependentSet=intervalGraph[_0x30da('0x174')]();let maxIndependentSet=new Set();for(let u of wMaxIndependentSet){let overlapGraphVertex=this[_0x30da('0xbb')][u['index']];maxIndependentSet[_0x30da('0x5d')](overlapGraphVertex);Utils[_0x30da('0x103')](maxIndependentSet,subgraphMaxSets['get'](overlapGraphVertex));}return maxIndependentSet;}[_0x30da('0x172')](vertex){if(this['inclusionLevels'][_0x30da('0xa8')](vertex[_0x30da('0x1a')]))return this[_0x30da('0x175')]['get'](vertex[_0x30da('0x1a')]);if(vertex['outEdges']['length']==0x0){this[_0x30da('0x176')](vertex,0x0);return 0x0;}let maxChildLevel=-0x1;for(let e of vertex['outEdges']){let child=e[_0x30da('0xa')];maxChildLevel=Math[_0x30da('0xbe')](maxChildLevel,this[_0x30da('0x172')](child));}this[_0x30da('0x176')](vertex,maxChildLevel+0x1);return maxChildLevel+0x1;}[_0x30da('0x176')](vertex,level){this[_0x30da('0x175')][_0x30da('0xa5')](vertex[_0x30da('0x1a')],level);if(this[_0x30da('0x173')][_0x30da('0x16')]<=level)this['levelVertices']['push']([]);if(vertex[_0x30da('0x1a')]<this['vertices'][_0x30da('0x16')])this[_0x30da('0x173')][level][_0x30da('0x14')](this[_0x30da('0xbb')][vertex['index']]);}}Factory[_0x30da('0x177')]=OverlapGraph;class Path{constructor(path){if(path){this[_0x30da('0x97')]=[...path['nodes']];this[_0x30da('0x178')]=[...path[_0x30da('0x178')]];this[_0x30da('0x179')]=[...path[_0x30da('0x179')]];}else{this[_0x30da('0x97')]=[];this[_0x30da('0x178')]=[];this[_0x30da('0x179')]=[];}}[_0x30da('0x82')](item){if(Path[_0x30da('0x17a')](item)){if(this['nodes'][_0x30da('0xc')](item))return!![];return![];}else{if(this[_0x30da('0x178')][_0x30da('0xc')](item))return!![];return![];}}[_0x30da('0x17b')](incNodes,incLinks){var weight=0x0;if(incNodes){this[_0x30da('0x97')]['forEach'](function(node){weight+=node[_0x30da('0x3')];});}if(incLinks){this[_0x30da('0x178')][_0x30da('0xd6')](function(link){weight+=link[_0x30da('0x3')];});}return weight;}['add'](link,node){if(link&&Path[_0x30da('0x17c')](link[_0x30da('0x6')])){this['links'][_0x30da('0x14')](link);this[_0x30da('0x179')][_0x30da('0x14')](link);}if(node&&Path['isNode'](node['owner'])){this[_0x30da('0x97')][_0x30da('0x14')](node);this[_0x30da('0x179')][_0x30da('0x14')](node);}if(link&&Path['isNode'](link['owner'])){this[_0x30da('0x97')][_0x30da('0x14')](link);this['items'][_0x30da('0x14')](link);}}static['isNode'](obj){return Object['keys'](obj)[_0x30da('0x9a')](_0x30da('0x17d'))>-0x1;}static[_0x30da('0x17c')](obj){return Object[_0x30da('0xaf')](obj)[_0x30da('0x9a')](_0x30da('0x17e'))>-0x1;}}class PathFinder{constructor(){}static['findAllPaths'](graph,from,to){return PathFinder[_0x30da('0x17f')](graph,from,to,![],0x0);}static[_0x30da('0x17f')](graph,from,to,shortestOnly,maxPaths){var result=[];if(from==to&&shortestOnly){var path=new Path();path[_0x30da('0x5d')](from);result[_0x30da('0x14')](path);return result;}var tempCol=new Queue();var tempPath=new Path();tempPath[_0x30da('0x5d')](from);tempCol[_0x30da('0x3a')](tempPath);var pathFound=![];while(!![]){var size=tempCol[_0x30da('0x180')]();if(size==0x0)break;if(pathFound&&shortestOnly)break;for(var i=0x0;i<size;i++){tempPath=tempCol['dequeue']();var lastNode=tempPath[_0x30da('0x97')][tempPath[_0x30da('0x97')][_0x30da('0x16')]-0x1];var links=lastNode[_0x30da('0x1')];for(var k=0x0;k<links['length'];k++){var link=links[k];var nextNode=link['destination'];if(tempPath[_0x30da('0x82')](link))continue;if(nextNode==to){var newPath=new Path(tempPath);newPath['add'](link,nextNode);result[_0x30da('0x14')](newPath);if(maxPaths!=0x0&&result[_0x30da('0x16')]>=maxPaths)return result;pathFound=!![];continue;}if(!tempPath[_0x30da('0x82')](nextNode)){var newPath=new Path(tempPath);newPath[_0x30da('0x5d')](link,nextNode);tempCol['enqueue'](newPath);}}}}return result;}static[_0x30da('0x181')](graph,from,to,useNodeWeights,useLinkWeights){if(!useNodeWeights&&!useLinkWeights){var paths=PathFinder[_0x30da('0x17f')](graph,from,to,!![]);if(paths['length']>0x0)return paths[0x0];else return null;}var paths=PathFinder[_0x30da('0x17f')](graph,from,to,![]);if(paths['length']==0x0)return null;var minWeight=Number[_0x30da('0xee')];var minPath=null;for(var i=0x0;i<paths['length'];i++){var weight=paths[i]['getWeight'](useNodeWeights,useLinkWeights);if(weight<minWeight){minWeight=weight;minPath=paths[i];}}return minPath;}static[_0x30da('0x182')](graph,from,to){var paths=PathFinder[_0x30da('0x17f')](graph,from,to,![]);if(paths[_0x30da('0x16')]>0x0)return paths[paths[_0x30da('0x16')]-0x1];else return null;}static[_0x30da('0x183')](graph,participant){if(participant){var cycles=PathFinder[_0x30da('0x17f')](graph,participant,participant,![]);if(cycles[_0x30da('0x16')]>0x0){var path=cycles[0x0];path[_0x30da('0x97')][_0x30da('0x9b')](path['nodes']['length']-0x1,0x1);path[_0x30da('0x179')]['splice'](path[_0x30da('0x179')][_0x30da('0x16')]-0x1,0x1);return path;}return null;}else{for(var i=0x0;i<graph[_0x30da('0xbb')][_0x30da('0x16')];i++){var cycles=PathFinder[_0x30da('0x17f')](graph,graph['vertices'][i],graph['vertices'][i],![]);if(cycles[_0x30da('0x16')]>0x0){var path=cycles[0x0];path[_0x30da('0x97')]['splice'](path[_0x30da('0x97')][_0x30da('0x16')]-0x1,0x1);path[_0x30da('0x179')][_0x30da('0x9b')](path[_0x30da('0x179')]['length']-0x1,0x1);return path;}}return null;}}static[_0x30da('0x184')](graph){var result=[];var callback=function(c){result[_0x30da('0x14')](c);};PathFinder['enumAllCyclesDirected'](graph,callback);return result;}static[_0x30da('0x185')](graph,callbackEnum){PathFinder['mark']=new Map();PathFinder[_0x30da('0x186')]=[];PathFinder[_0x30da('0x187')]=[];PathFinder[_0x30da('0x188')]=new Map();PathFinder[_0x30da('0x189')]=new Map();var index=0x0;var vs=graph[_0x30da('0xbb')];vs[_0x30da('0xd6')](function(v){PathFinder[_0x30da('0x188')][_0x30da('0xa5')](v,index++);});var callback=function(c){while(PathFinder[_0x30da('0x186')][_0x30da('0x16')]!=0x0)PathFinder['mark'][_0x30da('0xab')](PathFinder[_0x30da('0x186')]['pop']());return callbackEnum(c);};vs['forEach'](function(v){enumCircuitsTarjan(v,v,callback);});}static['deleted'](v){var result=PathFinder[_0x30da('0x189')][_0x30da('0xa8')](v)?PathFinder[_0x30da('0x189')]['get'](v):null;if(result==null){result=new Map();PathFinder[_0x30da('0x189')]['set'](v,result);}return result;}}function enumCircuitsTarjan(start,vertex,callback){var cycleFound=![];var callbackFound=function(c){cycleFound=!![];return callback(c);};PathFinder[_0x30da('0x187')][_0x30da('0x14')](vertex);PathFinder['mark'][_0x30da('0xa5')](vertex,!![]);PathFinder[_0x30da('0x186')]['push'](vertex);var edges=vertex['outEdges'];edges[_0x30da('0xd6')](function(edge){var adjVertex=edge[_0x30da('0xa')];if(!PathFinder[_0x30da('0x18a')](vertex)[_0x30da('0xa8')](adjVertex)){var order=PathFinder[_0x30da('0x188')][_0x30da('0x5a')](adjVertex)-PathFinder[_0x30da('0x188')][_0x30da('0x5a')](start);if(order<0x0){PathFinder[_0x30da('0x18a')](vertex)[_0x30da('0xa5')](adjVertex,!![]);}else if(order==0x0){cycleFound=!![];var path=new Path();var it=PathFinder['pointStack'][_0x30da('0x9a')](start);for(var i=it;i<PathFinder[_0x30da('0x187')][_0x30da('0x16')];i++)path['nodes'][_0x30da('0x14')](PathFinder[_0x30da('0x187')][i]);for(var i=0x0;i<path[_0x30da('0x97')][_0x30da('0x16')];i++){var n1=path[_0x30da('0x97')][i];var n2=path[_0x30da('0x97')][(i+0x1)%path[_0x30da('0x97')][_0x30da('0x16')]];var l=null;var n1_edges=n1[_0x30da('0x1')];for(var k=0x0;k<n1_edges['length'];k++){if(n1_edges[k][_0x30da('0xf')](n1)==n2){l=n1_edges[k];break;}}path[_0x30da('0x178')][_0x30da('0x14')](l);path[_0x30da('0x179')]['push'](n1);path[_0x30da('0x179')][_0x30da('0x14')](l);}callbackFound(path);return $break;}else if(!PathFinder[_0x30da('0x18b')][_0x30da('0xa8')](adjVertex)){PathFinder['enumCircuitsTarjan'](start,adjVertex,callback);}}});if(cycleFound){while(PathFinder[_0x30da('0x186')][_0x30da('0x16')]>0x0)PathFinder[_0x30da('0x18b')][_0x30da('0xab')](PathFinder[_0x30da('0x186')]['pop']());}PathFinder[_0x30da('0x187')][_0x30da('0x9b')](PathFinder[_0x30da('0x187')][_0x30da('0x16')]-0x1,0x1);}class Layout{constructor(){this[_0x30da('0x18c')]=Anchoring['Ignore'];this[_0x30da('0x18d')]=![];this['multipleGraphsPlacement']=MultipleGraphsPlacement['Vertical'];this[_0x30da('0x18e')]=0xa;}get['anchoring'](){return this[_0x30da('0x18f')];}set[_0x30da('0x18c')](value){this[_0x30da('0x18f')]=value;}get['keepGroupLayout'](){return this[_0x30da('0x190')];}set[_0x30da('0x18d')](value){this[_0x30da('0x190')]=value;}get[_0x30da('0x191')](){return this[_0x30da('0x192')];}set[_0x30da('0x191')](value){this[_0x30da('0x192')]=value;}get[_0x30da('0x18e')](){return this['_margins'];}set[_0x30da('0x18e')](value){this[_0x30da('0x193')]=value;}get[_0x30da('0x194')](){return!![];}get[_0x30da('0x195')](){return!![];}get[_0x30da('0x196')](){return!![];}get['requiresSimpleGraph'](){return!![];}get[_0x30da('0x197')](){return![];}get[_0x30da('0x198')](){return![];}get[_0x30da('0x199')](){return![];}get['requiresHierarchyInfo'](){return![];}get[_0x30da('0x19a')](){return![];}}class BorderedTreeLayout extends Layout{constructor(){super();this['levelDistance']=0xa;this[_0x30da('0x19b')]=0xa;this[_0x30da('0x19c')]=![];this['direction']=LayoutDirection['TopToBottom'];this[_0x30da('0x19d')]=TreeLayoutLinkType[_0x30da('0x19e')];this[_0x30da('0x191')]=MultipleGraphsPlacement[_0x30da('0x19f')];}get[_0x30da('0x1a0')](){return![];}get[_0x30da('0x199')](){return this[_0x30da('0x19d')]==TreeLayoutLinkType[_0x30da('0x1a1')];}get[_0x30da('0x19a')](){return this[_0x30da('0x19c')];}['arrange'](graph){var root;graph[_0x30da('0xbb')][_0x30da('0xd6')](function(v){if(v[_0x30da('0x2')]['length']==0x0){root=v;return $break;}});if(!root)return $skipLayout;this[_0x30da('0xd4')]=graph[_0x30da('0xd4')](root);if(!this[_0x30da('0xd4')])return $skipLayout;var rootX=root['x']+root['width']/0x2;var rootY=root['y']+root[_0x30da('0xe4')]/0x2;this['x']=0x0;this['y']=0x0;this[_0x30da('0x1a2')](root);var levelSizes=[];for(var i=0x0;i<this[_0x30da('0xd4')][_0x30da('0xdd')]['length'];i++){var treeLevel=this[_0x30da('0xd4')][_0x30da('0xdd')][i];var sz=0x0;for(var j=0x0;j<treeLevel[_0x30da('0x16')];j++){if(this[_0x30da('0x1a3')]())sz=Math[_0x30da('0xbe')](sz,treeLevel[j][_0x30da('0xe3')]);else sz=Math[_0x30da('0xbe')](sz,treeLevel[j][_0x30da('0xe4')]);}levelSizes[_0x30da('0x14')](sz);}var off=0x0;var size=0x0;for(var l=0x1;l<levelSizes[_0x30da('0x16')];l++){size+=levelSizes[l];size+=this[_0x30da('0x1a4')];}size+=this[_0x30da('0x18e')];if(!this[_0x30da('0x1a5')]())off=size;for(var i=0x0;i<this[_0x30da('0xd4')][_0x30da('0xdd')][_0x30da('0x16')];i++){var treeLevel=this[_0x30da('0xd4')]['treeLevels'][i];for(var j=0x0;j<treeLevel['length'];j++){var node=treeLevel[j];if(this[_0x30da('0x1a3')]())node['x']+=off;else node['y']+=off;}if(this[_0x30da('0x1a5')]())off+=this[_0x30da('0x1a4')]+levelSizes[i];else off+=-(this[_0x30da('0x1a4')]+levelSizes[i]);}if(this['keepRootPosition']){var newRootX=root['x'];var newRootY=root['y'];var xoff=rootX-newRootX;var yoff=rootY-newRootY;this[_0x30da('0x1a6')](root,xoff,yoff);}if(this[_0x30da('0x19d')]!=TreeLayoutLinkType['Default']){switch(this[_0x30da('0x19d')]){case TreeLayoutLinkType[_0x30da('0x1a7')]:{switch(this[_0x30da('0x94')]){case LayoutDirection[_0x30da('0x1a8')]:{this[_0x30da('0xd4')][_0x30da('0x0')][_0x30da('0xd6')](function(e){e['points']=[{'x':e[_0x30da('0x8')]['x']+e[_0x30da('0x8')][_0x30da('0xe3')]/0x2,'y':e['origin']['y']},{'x':e[_0x30da('0xa')]['x'],'y':e[_0x30da('0xa')]['y']-e[_0x30da('0xa')][_0x30da('0xe4')]/0x2}];});}break;case LayoutDirection[_0x30da('0x1a9')]:{this[_0x30da('0xd4')][_0x30da('0x0')][_0x30da('0xd6')](function(e){e[_0x30da('0x1aa')]=[{'x':e[_0x30da('0x8')]['x']+e[_0x30da('0x8')][_0x30da('0xe3')]/0x2,'y':e[_0x30da('0x8')]['y']},{'x':e[_0x30da('0xa')]['x'],'y':e[_0x30da('0xa')]['y']+e[_0x30da('0xa')][_0x30da('0xe4')]/0x2}];});}break;case LayoutDirection[_0x30da('0x1ab')]:{this[_0x30da('0xd4')][_0x30da('0x0')][_0x30da('0xd6')](function(e){e[_0x30da('0x1aa')]=[{'x':e[_0x30da('0x8')]['x'],'y':e['origin']['y']+e[_0x30da('0x8')][_0x30da('0xe4')]/0x2},{'x':e['destination']['x']-e[_0x30da('0xa')]['width']/0x2,'y':e[_0x30da('0xa')]['y']}];});}break;case LayoutDirection[_0x30da('0x1ac')]:{this[_0x30da('0xd4')][_0x30da('0x0')][_0x30da('0xd6')](function(e){e[_0x30da('0x1aa')]=[{'x':e[_0x30da('0x8')]['x'],'y':e[_0x30da('0x8')]['y']+e[_0x30da('0x8')]['height']/0x2},{'x':e[_0x30da('0xa')]['x']+e[_0x30da('0xa')][_0x30da('0xe3')]/0x2,'y':e[_0x30da('0xa')]['y']}];});}break;}break;}case TreeLayoutLinkType['Cascading']:{switch(this[_0x30da('0x94')]){case LayoutDirection[_0x30da('0x1a8')]:{this[_0x30da('0xd4')][_0x30da('0x0')][_0x30da('0xd6')](function(e){e['points']=[{'x':e['origin']['x']+e[_0x30da('0x8')][_0x30da('0xe3')]/0x2,'y':e[_0x30da('0x8')]['y']},{'x':e['destination']['x'],'y':e[_0x30da('0x8')]['y']},{'x':e[_0x30da('0xa')]['x'],'y':e[_0x30da('0xa')]['y']-e[_0x30da('0xa')][_0x30da('0xe4')]/0x2}];});}break;case LayoutDirection['BottomToTop']:{this[_0x30da('0xd4')][_0x30da('0x0')][_0x30da('0xd6')](function(e){e['points']=[{'x':e[_0x30da('0x8')]['x']+e[_0x30da('0x8')]['width']/0x2,'y':e[_0x30da('0x8')]['y']},{'x':e['destination']['x'],'y':e['origin']['y']},{'x':e[_0x30da('0xa')]['x'],'y':e[_0x30da('0xa')]['y']+e['destination'][_0x30da('0xe4')]/0x2}];});}break;case LayoutDirection['LeftToRight']:{this[_0x30da('0xd4')][_0x30da('0x0')][_0x30da('0xd6')](function(e){e[_0x30da('0x1aa')]=[{'x':e[_0x30da('0x8')]['x'],'y':e[_0x30da('0x8')]['y']+e['origin'][_0x30da('0xe4')]/0x2},{'x':e[_0x30da('0x8')]['x'],'y':e[_0x30da('0xa')]['y']},{'x':e[_0x30da('0xa')]['x']-e[_0x30da('0xa')]['width']/0x2,'y':e[_0x30da('0xa')]['y']}];});}break;case LayoutDirection[_0x30da('0x1ac')]:{this[_0x30da('0xd4')][_0x30da('0x0')][_0x30da('0xd6')](function(e){e[_0x30da('0x1aa')]=[{'x':e[_0x30da('0x8')]['x'],'y':e[_0x30da('0x8')]['y']+e[_0x30da('0x8')]['height']/0x2},{'x':e['origin']['x'],'y':e['destination']['y']},{'x':e['destination']['x']+e[_0x30da('0xa')][_0x30da('0xe3')]/0x2,'y':e[_0x30da('0xa')]['y']}];});}break;}break;}}}}['rarrange'](node){var rc=Rect[_0x30da('0x1ad')](node);rc['x']=this['x'];rc['y']=this['y'];if(this['direction']==LayoutDirection[_0x30da('0x1ac')]){var rcRoot=Rect[_0x30da('0x1ad')](this[_0x30da('0xd4')]['root']);var s=rc[_0x30da('0xe3')];rc=new Rect(rcRoot[_0x30da('0x6b')]()-s,rc[_0x30da('0x1ae')](),rc['width'],rc['height']);}else if(this[_0x30da('0x94')]==LayoutDirection[_0x30da('0x1a9')]){var rcRoot=Rect['fromVertex'](this[_0x30da('0xd4')][_0x30da('0x27')]);var s=rc[_0x30da('0xe4')];rc=new Rect(rc[_0x30da('0x71')](),rcRoot[_0x30da('0x1af')]()-s,rc['width'],rc[_0x30da('0xe4')]);}node['x']=rc['x']+rc[_0x30da('0xe3')]/0x2;node['y']=rc['y']+rc[_0x30da('0xe4')]/0x2;if(this[_0x30da('0x1a3')]())this['y']+=rc[_0x30da('0xe4')]+this['nodeDistance'];else this['x']+=rc[_0x30da('0xe3')]+this[_0x30da('0x19b')];var self=this;childrenOf$1(node)[_0x30da('0xd6')](function(child){self['rarrange'](child);});}[_0x30da('0x1a6')](nodeFrom,xoff,yoff){var offsetFunc=function(node,params){node['x']+=params[0x0];node['y']+=params[0x1];};walk$1(nodeFrom,offsetFunc,[xoff,yoff]);}['isHorizontal'](){return this[_0x30da('0x94')]==LayoutDirection[_0x30da('0x1ab')]||this[_0x30da('0x94')]==LayoutDirection['RightToLeft'];}['isStraight'](){return this[_0x30da('0x94')]==LayoutDirection[_0x30da('0x1ab')]||this[_0x30da('0x94')]==LayoutDirection[_0x30da('0x1a8')];}[_0x30da('0x1b0')](){return this[_0x30da('0x1b1')][_0x30da('0x1b2')];}get[_0x30da('0x1a4')](){return this[_0x30da('0x1b3')];}set[_0x30da('0x1a4')](value){this[_0x30da('0x1b3')]=value;}get[_0x30da('0x19b')](){return this[_0x30da('0x1b4')];}set[_0x30da('0x19b')](value){this[_0x30da('0x1b4')]=value;}get[_0x30da('0x19c')](){return this['_keepRootPosition'];}set[_0x30da('0x19c')](value){this[_0x30da('0x1b5')]=value;}get[_0x30da('0x94')](){return this['_direction'];}set[_0x30da('0x94')](value){this[_0x30da('0x1b6')]=value;}get[_0x30da('0x19d')](){return this[_0x30da('0x1b7')];}set[_0x30da('0x19d')](value){this[_0x30da('0x1b7')]=value;}get[_0x30da('0x18c')](){return this['_anchoring'];}set['anchoring'](value){this[_0x30da('0x18f')]=value;}get['keepGroupLayout'](){return this['_keepGroupLayout'];}set[_0x30da('0x18d')](value){this[_0x30da('0x190')]=value;}get['multipleGraphsPlacement'](){return this[_0x30da('0x192')];}set[_0x30da('0x191')](value){this[_0x30da('0x192')]=value;}}function walk$1(node,func,params){func['call'](this,node,params);var children=childrenOf$1(node);children[_0x30da('0xd6')](function(child){walk$1(child,func,params);});}function childrenOf$1(node){var children=[];node['outEdges'][_0x30da('0xd6')](function(e){children[_0x30da('0x14')](e[_0x30da('0xa')]);});return children;}class LayoutUtils{static['getGraphBounds'](graph,defaultBounds){if(graph['vertices'][_0x30da('0x16')]==0x0)return defaultBounds;var bounds=null;graph['vertices'][_0x30da('0xd6')](function(v){bounds=Rect[_0x30da('0x1ad')](v)[_0x30da('0x1b8')](bounds);});graph[_0x30da('0x0')][_0x30da('0xd6')](function(e){if(e['points'])bounds=Rect['boundingRect'](e[_0x30da('0x1aa')])[_0x30da('0x1b8')](bounds);});return bounds;}}class Tools{static[_0x30da('0x1b9')](node,o){var r=bounds(node);if(o==Orientation[_0x30da('0x1ba')])return newPoint(r['x']+r['width']/0x2,r[_0x30da('0x1af')]());else return newPoint(r[_0x30da('0x6b')](),r['y']+r[_0x30da('0xe4')]/0x2);}static[_0x30da('0x1bb')](node,o){var r=bounds(node);if(o==Orientation['Vertical'])return newPoint(r['x']+r[_0x30da('0xe3')]/0x2,r[_0x30da('0x1ae')]());else return newPoint(r[_0x30da('0x71')](),r['y']+r[_0x30da('0xe4')]/0x2);}static[_0x30da('0x1bc')](node,o){var r=bounds(node);if(o==Orientation[_0x30da('0x1ba')])return newPoint(r['left'](),r['y']+r[_0x30da('0xe4')]/0x2);else return newPoint(r['x']+r[_0x30da('0xe3')]/0x2,r[_0x30da('0x1ae')]());}static['GetBFarCenter'](node,o){var r=bounds(node);if(o==Orientation[_0x30da('0x1ba')])return newPoint(r['right'](),r['y']+r['height']/0x2);else return newPoint(r['x']+r[_0x30da('0xe3')]/0x2,r[_0x30da('0x1af')]());}static[_0x30da('0x1bd')](node,x,y){var r=bounds(node);r['x']=x;r['y']=y;var c=r[_0x30da('0x1be')]();node['x']=c['x'];node['y']=c['y'];}static[_0x30da('0x1bf')](link,points){if(link['_fcl_processed'])link[_0x30da('0x1c0')]=!![];link[_0x30da('0x1c1')]=!![];link[_0x30da('0x1aa')]=Array[_0x30da('0x1c2')][_0x30da('0x9c')][_0x30da('0x1c3')](arguments,0x1);}static['SetLinkPointsA'](link,points){if(link[_0x30da('0x1c1')])link[_0x30da('0x1c0')]=!![];link[_0x30da('0x1c1')]=!![];link['points']=points;}static['GetLinkPoints'](link){return link['points'];}static[_0x30da('0x1c4')](point,origin){return newPoint(origin['x']+point['y']-origin['y'],origin['y']+point['x']-origin['x']);}static[_0x30da('0x1c5')](node,o){return o==Orientation['Vertical']?node['width']:node[_0x30da('0xe4')];}static[_0x30da('0x1c6')](node,o){if(o==Orientation[_0x30da('0x1ba')])return node['x'];else return node['y'];}static[_0x30da('0x1c7')](node,o){return o==Orientation[_0x30da('0x1ba')]?node['height']:node[_0x30da('0xe3')];}static[_0x30da('0x1c8')](node,o){if(o==Orientation['Vertical'])return node['y'];else return node['x'];}static[_0x30da('0x1c9')](node,o){return Tools['GetBNearRect'](bounds(node),o);}static[_0x30da('0x1ca')](node,o){return Tools[_0x30da('0x1cb')](bounds(node),o);}static['GetLNear'](node,o){return Tools[_0x30da('0x1cc')](bounds(node),o);}static['GetLFar'](node,o){return Tools[_0x30da('0x1cd')](bounds(node),o);}static['GetBNearRect'](rect,o){if(o==Orientation[_0x30da('0x1ba')])return rect[_0x30da('0x71')]();else return rect[_0x30da('0x1ae')]();}static[_0x30da('0x1cb')](rect,o){if(o==Orientation['Vertical'])return rect[_0x30da('0x6b')]();else return rect[_0x30da('0x1af')]();}static[_0x30da('0x1cc')](rect,o){if(o==Orientation[_0x30da('0x1ba')])return rect[_0x30da('0x1ae')]();else return rect['left']();}static[_0x30da('0x1cd')](rect,o){if(o==Orientation[_0x30da('0x1ba')])return rect[_0x30da('0x1af')]();else return rect['right']();}static['GetB'](point,o){if(o==Orientation[_0x30da('0x1ba')])return point['x'];else return point['y'];}static[_0x30da('0x1ce')](point,o){if(o==Orientation[_0x30da('0x1ba')])return point['y'];else return point['x'];}static['OffsetL'](node,offset,o){if(o==Orientation[_0x30da('0x1ba')])node['y']=node['y']+offset;else node['x']=node['x']+offset;for(var l=0x0;l<node[_0x30da('0x2')][_0x30da('0x16')];l++){var link=node['inEdges'][l];var p=link[_0x30da('0x1aa')];if(!p)continue;var li=p[_0x30da('0x16')]-0x1;if(o==Orientation[_0x30da('0x1ba')]){var start=p[0x0]['y'];var oldEnd=p[li]['y'];var newEnd=p[li]['y']+offset;var flip=(start-oldEnd)*(start-newEnd)<0x0;if(!flip){for(var pi=0x1;pi<li;pi++){p[pi]['y']+=offset;}}else{for(var pi=0x1;pi<li;pi++){var dy=start-p[pi]['y'];p[pi]['y']+=dy;}}p[li]['y']+=offset;}else{var start=p[0x0]['x'];var oldEnd=p[li]['x'];var newEnd=p[li]['x']+offset;var flip=(start-oldEnd)*(start-newEnd)<0x0;if(!flip){for(var pi=0x1;pi<li;pi++){p[pi]['x']+=offset;}}else{for(var pi=0x1;pi<li;pi++){var dx=start-p[pi]['x'];p[pi]['x']+=dx;}}p[li]['x']+=offset;}}}static['OffsetOutLinks'](links,offx,offy,o){for(var l=0x0;l<links[_0x30da('0x16')];l++){var link=links[l];var p=link['points'];if(!p)continue;var li=p[_0x30da('0x16')]-0x1;if(o==Orientation[_0x30da('0x1ba')]){var oldStart=p[0x0]['y'];var newStart=p[0x0]['y']+offy;var end=p[li]['y'];var flip=(oldStart-end)*(newStart-end)<0x0;if(!flip){for(var pi=0x1;pi<li;pi++){p[pi]['y']+=offy;}}else{for(var pi=0x1;pi<li;pi++){var dy=end-p[pi]['y'];p[pi]['y']+=dy;}}p[0x0]['x']+=offx;p[0x0]['y']+=offy;if(p['length']==0x2){var sp=p[0x0];var ep=p[0x1];p[0x1]=newPoint(sp['x'],(sp['y']+ep['y'])/0x2);p[0x2]=newPoint(ep['x'],(sp['y']+ep['y'])/0x2);p[0x3]=ep;}else{p[0x1]['x']+=offx;}link[_0x30da('0x1c1')]=!![];}else{var oldStart=p[0x0]['x'];var newStart=p[0x0]['x']+offx;var end=p[li]['x'];var flip=(oldStart-end)*(newStart-end)<0x0;if(!flip){for(var pi=0x1;pi<li;pi++){p[pi]['x']+=offx;}}else{for(var pi=0x1;pi<li;pi++){var dx=end-p[pi]['x'];p[pi]['x']+=dx;}}p[0x0]['x']+=offx;p[0x0]['y']+=offy;if(p[_0x30da('0x16')]==0x2){var sp=p[0x0];var ep=p[0x1];p[0x1]=newPoint((sp['x']+ep['x'])/0x2,sp['y']);p[0x2]=newPoint((sp['x']+ep['x'])/0x2,ep['y']);p[0x3]=ep;}else{p[0x1]['y']+=offy;}link[_0x30da('0x1c1')]=!![];}}}}function newPoint(x,y){return new Point(x,y);}function bounds(v){if(v['node'])return Rect[_0x30da('0x1cf')](v[_0x30da('0x1d0')],v[_0x30da('0x1d0')]);else return Rect[_0x30da('0x1cf')](v,v);}class FlowchartLayout extends Layout{constructor(){super();this[_0x30da('0x19b')]=0x14;this[_0x30da('0x1d1')]=0xc;this[_0x30da('0x1d2')]=0x4;this['orientation']=Orientation[_0x30da('0x1ba')];this['multipleGraphsPlacement']=MultipleGraphsPlacement[_0x30da('0x19f')];this[_0x30da('0x1d3')]=new Map();this[_0x30da('0x1d4')]=0x0;this[_0x30da('0x1d5')]=[];this[_0x30da('0x1d6')]=new Map();this['postOrder']=new Map();this['topologicalOrder']=new Map();this['searchCounter']=0x0;this[_0x30da('0x1d7')]=new Map();this['mm']=0x1;}get['routeRepeatingLinks'](){return!![];}get[_0x30da('0x199')](){return!![];}[_0x30da('0x1d8')](graph){this['mm']=graph['_mf_mm'];if(graph['vertices']['length']==0x0)return![];graph[_0x30da('0xeb')]();this[_0x30da('0xa4')]=graph;var orientation=this[_0x30da('0x1d9')];this[_0x30da('0x1d3')]=new Map();this[_0x30da('0x1d5')]=[];this[_0x30da('0x1da')]=[];this[_0x30da('0x1db')]=0x0;this[_0x30da('0x1d4')]=0x0;this[_0x30da('0x1d7')]=new Map();var startNodes=this[_0x30da('0x1dc')]();var startNode=null;var virtualStart=null;var virtualStartLinks=[];if(startNodes[_0x30da('0x16')]==0x0)startNode=graph[_0x30da('0xbb')][0x0];if(startNodes[_0x30da('0x16')]==0x1)startNode=startNodes[0x0];if(startNodes[_0x30da('0x16')]>0x1){virtualStart=startNode=new Vertex();startNode['x']=startNode['y']=0x0;startNode[_0x30da('0xe3')]=startNode['height']=0x14;for(var n=0x0;n<startNodes[_0x30da('0x16')];n++){var node=startNodes[n];virtualStartLinks['push'](new Edge(virtualStart,node));}graph['vertices'][_0x30da('0x14')](virtualStart);for(var l=0x0;l<virtualStartLinks[_0x30da('0x16')];l++){var virtualStartLink=virtualStartLinks[l];graph['addEdge'](virtualStartLink);}}var to=graph[_0x30da('0x14d')]();if(!to){var reversed=graph[_0x30da('0x147')]();to=graph['topologicalSort']();}if(to){var orderMap=this[_0x30da('0x1dd')]=this[_0x30da('0x14d')](startNode,to);for(var n=0x0;n<graph['vertices'][_0x30da('0x16')];n++){var node=graph[_0x30da('0xbb')][n];node[_0x30da('0x1')][_0x30da('0xde')](function(e1,e2){return orderMap[_0x30da('0x5a')](e1['destination'])-orderMap[_0x30da('0x5a')](e2[_0x30da('0xa')]);});}}if(reversed){reversed[_0x30da('0xd6')](function(e){e[_0x30da('0x21')]();});}this[_0x30da('0x1d6')]=new Map();this['postOrder']=new Map();this['searchCounter']=0x0;this['depthFirstSearch'](startNode);if(this[_0x30da('0x1de')][_0x30da('0x134')]<graph[_0x30da('0xbb')]['length'])return![];for(var n=0x0;n<graph['vertices'][_0x30da('0x16')];n++){var node=graph[_0x30da('0xbb')][n];node['x']=node['y']=0x0;}for(var l=0x0;l<graph[_0x30da('0x0')][_0x30da('0x16')];l++){var link=graph[_0x30da('0x0')][l];link[_0x30da('0x1c1')]=![];}if(!to)this['topologicalOrder']=this[_0x30da('0x14d')](startNode);FlowchartBranching['deferredMerge']=[];var flowchart=this['composeFlowChart'](startNode);var breadth=flowchart['measure'](this[_0x30da('0x1d1')],this[_0x30da('0x1d2')],orientation);flowchart[_0x30da('0x1d8')](breadth/0x2,0x0,this['nodeDistance'],orientation);if(virtualStart!=null)Utils[_0x30da('0x9')](graph['vertices'],virtualStart);for(var l=0x0;l<virtualStartLinks[_0x30da('0x16')];l++){var virtualStartLink=virtualStartLinks[l];graph[_0x30da('0x7')](virtualStartLink);}var defer=FlowchartBranching[_0x30da('0x1df')];for(var dn=0x0;dn<defer[_0x30da('0x16')];dn++){var node=defer[dn];var inLinks=this['getDownLinks'](node[_0x30da('0x2')]);var far=farOfOriginNodes(inLinks,orientation);var nodeL=Tools['GetLNear'](node,orientation);if(far>=nodeL){var offset=far-nodeL+this[_0x30da('0x19b')];Tools[_0x30da('0x1e0')](node,offset,orientation);}}this[_0x30da('0x1e1')]=LayoutUtils['getGraphBounds'](graph);for(var l=0x0;l<graph[_0x30da('0x0')][_0x30da('0x16')];l++){var link=graph[_0x30da('0x0')][l];if(!processed(link)||badPath(link,this)){var points=this[_0x30da('0x124')](link,orientation);if(!points)points=this[_0x30da('0x124')](link,orientation,!![]);Tools['SetLinkPointsA'](link,points);}}var link=longestLink(graph);if(link){var crossings=countCrossings(graph,link[_0x30da('0x1aa')],link);var pt=newPoint;if(crossings>0x0){var lp=this[_0x30da('0x1d1')];var lr=LayoutUtils['getGraphBounds'](graph);var orect=bounds(link['origin']);var drect=bounds(link[_0x30da('0xa')]);var ocenter=orect[_0x30da('0x1be')]();var dcenter=drect[_0x30da('0x1be')]();if(orientation==Orientation[_0x30da('0x1ba')]){var ox=ocenter['x'];var oy=orect[_0x30da('0x1af')]();var lx1=orect[_0x30da('0x71')]();var lx2=drect[_0x30da('0x71')]();var dx=dcenter['x'];var dy=drect[_0x30da('0x1ae')]();oy+this['nodeDistance']/0x2;dy-this[_0x30da('0x19b')]/0x2;var candidates=[link[_0x30da('0x1aa')]];candidates[_0x30da('0x14')]([pt(lx1,ocenter['y']),pt(lr[_0x30da('0x71')]()-lp,ocenter['y']),pt(lr['left']()-lp,dcenter['y']),pt(lx2,dcenter['y'])]);}else{var ox=orect[_0x30da('0x6b')]();var oy=ocenter['y'];var ty1=orect[_0x30da('0x1ae')]();var ty2=drect['top']();var dx=drect[_0x30da('0x71')]();var dy=dcenter['y'];ox+this[_0x30da('0x19b')]/0x2;dx-this[_0x30da('0x19b')]/0x2;var candidates=[link[_0x30da('0x1aa')]];candidates['push']([pt(ocenter['x'],ty1),pt(ocenter['x'],lr[_0x30da('0x1ae')]()-lp),pt(dcenter['x'],lr[_0x30da('0x1ae')]()-lp),pt(dcenter['x'],ty2)]);}var best=null;var bestCount=crossings;for(var c=0x0;c<candidates['length'];c++){var points=candidates[c];if(acceptPath(points,link[_0x30da('0x8')],link[_0x30da('0xa')],graph[_0x30da('0xbb')])){crossings=countCrossings(graph,points,link);if(crossings<bestCount){bestCount=crossings;best=points;}if(crossings==0x0)break;}}if(best)Tools[_0x30da('0x1e2')](link,best);}}for(var n=0x0;n<graph['vertices']['length'];n++){var node=graph[_0x30da('0xbb')][n];var topIn=nearIncomingLinks(node,orientation);if(topIn['length']>0x1&&endPointsCoincide(topIn,orientation)){pullNearInPointsApart(topIn,orientation);}var bottomOut=farOutgoingLinks(node,orientation);if(bottomOut['length']>0x1&&startPointsCoincide(bottomOut,orientation)){pullFarOutPointsApart(bottomOut,orientation);}var sideIn=sideIncomingLinks(node,orientation);if(sideIn[_0x30da('0x16')]>0x1&&endPointsCoincide(sideIn,0x1-orientation)){pullSideInPointsApart(sideIn,orientation);}}this['pullLinksApart'](graph['edges']);}[_0x30da('0x1e3')](startNode){return this['composeBlocks'](startNode,null,0x0,![],![]);}['composeBlocks'](node,parentBlock,loopDepth,onlyNotVisited,ignoreMerge){var graph=this['graph'];var children=[];var currentBlock=null;if(parentBlock==null){currentBlock=new FlowchartSequence(this);children['push'](this[_0x30da('0x1e4')](node,currentBlock,0x0,![],![]));}else{var fcNode=this['getFlowchartNode'](node);currentBlock=fcNode;var visited=this['isVisited'](node);if(!visited)this['nodeOrder'][_0x30da('0xa5')](node,this[_0x30da('0x1d4')]++);var inDownLinks=this[_0x30da('0x1e5')](node);if(inDownLinks>0x1&&this[_0x30da('0x1d5')]['length']>0x0&&!ignoreMerge){peek(this['branchings'])[_0x30da('0x1e6')](fcNode);return currentBlock;}if(visited&&onlyNotVisited)return null;loopDepth+=this[_0x30da('0x1e7')](node);currentBlock['setLoopDepth'](loopDepth);loopDepth-=this[_0x30da('0x1e8')](node);var outDownLinks=this[_0x30da('0x1e9')](node);if(outDownLinks==0x1)currentBlock=new FlowchartSequence(this,fcNode);if(outDownLinks>0x1){var branching=new FlowchartBranching(this,fcNode);this[_0x30da('0x1d5')][_0x30da('0x14')](branching);currentBlock=branching;loopDepth=0x0;}for(var l=0x0;l<node[_0x30da('0x1')][_0x30da('0x16')];++l){var branchLink=node[_0x30da('0x1')][l];currentBlock['currentLink']=branchLink;var child=this[_0x30da('0x1e4')](branchLink['destination'],currentBlock,loopDepth,!![],![]);if(child!=null){if(child['getIncomingLink']()==null)child['setIncomingLink'](branchLink);children['push'](child);}}if(currentBlock[_0x30da('0x1ea')]&&branching[_0x30da('0x1ea')][_0x30da('0x16')]==0x0){this['branchings'][_0x30da('0xf9')]();return null;}if(outDownLinks>0x1&&this[_0x30da('0x1d5')]['length']>0x0)this[_0x30da('0x1d5')][_0x30da('0xf9')]();if(parentBlock instanceof FlowchartBranching&&currentBlock instanceof FlowchartBranching&&!this[_0x30da('0x1eb')](currentBlock)){var replacement=new FlowchartSequence(this);replacement[_0x30da('0x5d')](currentBlock);children['length']=0x0;children['push'](currentBlock);currentBlock=replacement;}}if(currentBlock instanceof FlowchartSequence){for(var c=0x0;c<children[_0x30da('0x16')];++c){var child=children[c];var next=child[_0x30da('0x1ec')]();if(next!=null){for(var n=0x0;n<next[_0x30da('0x16')];++n){var nextNode=next[n];this[_0x30da('0x1e4')](nextNode,currentBlock,loopDepth,![],!![]);}}}}if(parentBlock!=null){parentBlock[_0x30da('0x5d')](currentBlock);}else{var unprocessedNodes=new Queue();for(var n=0x0;n<graph['vertices'][_0x30da('0x16')];n++){var nnode=graph[_0x30da('0xbb')][n];if(!this['flowchartNodes'][_0x30da('0xa8')](nnode))unprocessedNodes[_0x30da('0x3a')](nnode);}while(unprocessedNodes['getSize']()>0x0){var n=unprocessedNodes[_0x30da('0x2e')]();if(n[_0x30da('0x2')][_0x30da('0x16')]==0x0||this[_0x30da('0x1d7')][_0x30da('0xa8')](n))continue;var parent=n['inEdges'][0x0][_0x30da('0x8')];if(!this[_0x30da('0x1d7')]['has'](parent))unprocessedNodes[_0x30da('0x3a')](n);else this['composeBlocks'](n,this['getSequence'](this[_0x30da('0x1ed')](parent)),0x0,!![],!![]);}}return currentBlock;}[_0x30da('0x1ee')](block){if(block==null)return null;if(block instanceof FlowchartSequence)return block;return this[_0x30da('0x1ee')](block[_0x30da('0x1ef')]);}['followedByMergeNode'](block){var next=block[_0x30da('0x1ec')]();if(next!=null&&next[_0x30da('0x16')]==0x1){var links=this[_0x30da('0x1f0')](next[0x0][_0x30da('0x1')]);if(links[_0x30da('0x16')]!=0x1)return![];var inDownLinks=this[_0x30da('0x1e5')](links[0x0]['destination']);if(inDownLinks>0x1&&this[_0x30da('0x1d5')][_0x30da('0x16')]>0x0)return!![];}return![];}[_0x30da('0x1ed')](node){if(this[_0x30da('0x1d7')]['has'](node))return this[_0x30da('0x1d7')][_0x30da('0x5a')](node);var flowchartNode=new FlowchartNode(this,node);this[_0x30da('0x1d7')]['set'](node,flowchartNode);return flowchartNode;}[_0x30da('0x1dc')](){var graph=this['graph'];var startNodes=[];for(var n=0x0;n<graph[_0x30da('0xbb')][_0x30da('0x16')];n++){var node=graph[_0x30da('0xbb')][n];if(this[_0x30da('0x1f1')](node))startNodes['push'](node);}return startNodes;}[_0x30da('0x1e9')](node){var n=0x0;for(var l=0x0;l<node[_0x30da('0x1')][_0x30da('0x16')];++l){var link=node['outEdges'][l];if(this[_0x30da('0x1f2')](link))n++;}return n;}[_0x30da('0x1e5')](node){var n=0x0;for(var l=0x0;l<node['inEdges']['length'];++l){var link=node[_0x30da('0x2')][l];if(this['isDownLink'](link))n++;}return n;}[_0x30da('0x1b0')](){return this[_0x30da('0x1b1')][_0x30da('0x1b2')];}['getOutgoingLoopLinks'](node){var n=0x0;for(var l=0x0;l<node[_0x30da('0x1')][_0x30da('0x16')];++l){var link=node[_0x30da('0x1')][l];if(this['isBackLink'](link))n++;}return n;}[_0x30da('0x1e7')](node){var n=0x0;for(var l=0x0;l<node[_0x30da('0x2')][_0x30da('0x16')];++l){var link=node[_0x30da('0x2')][l];if(this['isBackLink'](link))n++;}return n;}[_0x30da('0x1f3')](node){return this[_0x30da('0x1d3')][_0x30da('0xa8')](node);}[_0x30da('0x1f1')](node){return this['inDegree'](node)==0x0;}['isEndNode'](node){return this[_0x30da('0x18')](node)==0x0;}[_0x30da('0x17')](node){return node[_0x30da('0x2')][_0x30da('0x16')];}[_0x30da('0x18')](node){return node['outEdges'][_0x30da('0x16')];}[_0x30da('0x1f4')](link){return!this['isDownLink'](link);}[_0x30da('0x1f2')](link){var o=link[_0x30da('0x8')];var d=link[_0x30da('0xa')];return this[_0x30da('0x1de')]['get'](d)<this[_0x30da('0x1de')][_0x30da('0x5a')](o);}[_0x30da('0x11e')](node){if(this['visitedNodes'][_0x30da('0xa8')](node))return;this[_0x30da('0x1d6')][_0x30da('0xa5')](node,!![]);for(var l=0x0;l<node['outEdges'][_0x30da('0x16')];++l){var link=node[_0x30da('0x1')][l];this[_0x30da('0x11e')](link[_0x30da('0xa')]);}this[_0x30da('0x1de')][_0x30da('0xa5')](node,this[_0x30da('0xf1')]++);}[_0x30da('0x14d')](startNode,graphOrder){var order=new Map();if(graphOrder){for(var n=0x0;n<graphOrder[_0x30da('0x16')];n++){var node=this[_0x30da('0xa4')][_0x30da('0xbb')][graphOrder[n]];order[_0x30da('0xa5')](node,n);}return order;}var queue=new Queue();var counter=0x0;queue[_0x30da('0x3a')](startNode);order[_0x30da('0xa5')](startNode,counter++);while(queue[_0x30da('0x180')]()>0x0){var node=queue[_0x30da('0x2e')]();var downLinks=this['getDownLinks'](node[_0x30da('0x1')]);for(var l=0x0;l<downLinks[_0x30da('0x16')];++l){var link=downLinks[l];var child=link[_0x30da('0xa')];if(order['has'](child))continue;queue['enqueue'](child);order['set'](child,counter++);}}return order;}['getDownLinks'](links){var downLinks=[];for(var l=0x0;l<links[_0x30da('0x16')];++l){var link=links[l];if(this['isDownLink'](link))downLinks[_0x30da('0x14')](link);}return downLinks;}[_0x30da('0x1f5')](){return this[_0x30da('0x1dd')];}[_0x30da('0x124')](link,o,relaxed){var g=this[_0x30da('0xa4')];var pt=newPoint;var orect=bounds(link['origin']);var drect=bounds(link[_0x30da('0xa')]);var candidates=[];var ocenter=orect[_0x30da('0x1be')]();var dcenter=drect[_0x30da('0x1be')]();if(o==Orientation[_0x30da('0x1ba')]){var ox=ocenter['x'];var oy=orect[_0x30da('0x1af')]();var lx=orect[_0x30da('0x71')]();var rx=orect[_0x30da('0x6b')]();var dx=dcenter['x'];var dy=drect[_0x30da('0x1ae')]();var mx=(ox+dx)/0x2;var my=(oy+dy)/0x2;var nd=this[_0x30da('0x19b')];var hd=nd/0x2;var o1y=oy+hd;var o2y=dy-hd;var lp=this[_0x30da('0x1d2')];var llr=this[_0x30da('0x1e1')]['right']();var llb=this['layoutRect']['bottom']();if(orect['bottom']()<drect[_0x30da('0x1ae')]()){candidates['push']([pt(ox,oy),pt(ox,my),pt(dx,my),pt(dx,dy)]);candidates[_0x30da('0x14')]([pt(ox,oy),pt(ox,o1y),pt(dx,o1y),pt(dx,dy)]);candidates[_0x30da('0x14')]([pt(ox,oy),pt(ox,o2y),pt(dx,o2y),pt(dx,dy)]);for(var ci=0x1;ci<=0x5;ci++){candidates[_0x30da('0x14')]([pt(rx,ocenter['y']),pt(rx+ci*hd,ocenter['y']),pt(rx+ci*hd,dcenter['y']),pt(drect[_0x30da('0x6b')](),dcenter['y'])]);candidates['push']([pt(lx,ocenter['y']),pt(lx-ci*hd,ocenter['y']),pt(lx-ci*hd,dcenter['y']),pt(drect[_0x30da('0x71')](),dcenter['y'])]);}candidates[_0x30da('0x14')]([pt(rx,ocenter['y']),pt(llr,ocenter['y']),pt(llr,dcenter['y']),pt(drect[_0x30da('0x6b')](),dcenter['y'])]);candidates[_0x30da('0x14')]([pt(ox,oy),pt(ox,o1y),pt(lx,o1y),pt(lx,o2y),pt(dx,o2y),pt(dx,dy)]);candidates[_0x30da('0x14')]([pt(ox,oy),pt(ox,o1y),pt(mx,o1y),pt(mx,o2y),pt(dx,o2y),pt(dx,dy)]);}else{candidates['push']([pt(ox,oy),pt(ox,o1y),pt(mx,o1y),pt(mx,o2y),pt(dx,o2y),pt(dx,dy)]);candidates[_0x30da('0x14')]([pt(ox,oy),pt(ox,o1y),pt(orect[_0x30da('0x71')]()-lp,o1y),pt(orect[_0x30da('0x71')]()-lp,dcenter['y']),pt(drect[_0x30da('0x6b')](),dcenter['y'])]);for(var ci=0x1;ci<=0x5;ci++){candidates['push']([pt(lx,ocenter['y']),pt(lx-ci*hd,ocenter['y']),pt(lx-ci*hd,dcenter['y']),pt(drect[_0x30da('0x71')](),dcenter['y'])]);candidates[_0x30da('0x14')]([pt(rx,ocenter['y']),pt(rx+ci*hd,ocenter['y']),pt(rx+ci*hd,dcenter['y']),pt(drect[_0x30da('0x6b')](),dcenter['y'])]);}candidates['push']([pt(rx,ocenter['y']),pt(llr,ocenter['y']),pt(llr,dcenter['y']),pt(drect[_0x30da('0x6b')](),dcenter['y'])]);}candidates[_0x30da('0x14')]([pt(ox,oy),pt(ox,llb),pt(drect['right']()+0x2*hd,llb),pt(drect[_0x30da('0x6b')]()+0x2*hd,dcenter['y']),pt(drect[_0x30da('0x6b')](),dcenter['y'])]);candidates[_0x30da('0x14')]([pt(ox,oy),pt(ox,llb),pt(drect[_0x30da('0x6b')]()+hd,llb),pt(drect['right']()+hd,dcenter['y']),pt(drect[_0x30da('0x6b')](),dcenter['y'])]);candidates[_0x30da('0x14')]([pt(ox,oy),pt(ox,llb),pt(drect[_0x30da('0x6b')]()+nd,llb),pt(drect[_0x30da('0x6b')]()+nd,dcenter['y']),pt(drect[_0x30da('0x6b')](),dcenter['y'])]);candidates[_0x30da('0x14')]([pt(ox,oy),pt(ox,llb),pt(drect[_0x30da('0x71')]()-hd,llb),pt(drect[_0x30da('0x71')]()-hd,dcenter['y']),pt(drect[_0x30da('0x71')](),dcenter['y'])]);candidates[_0x30da('0x14')]([pt(ox,oy),pt(ox,llb),pt(drect[_0x30da('0x71')]()-nd,llb),pt(drect[_0x30da('0x71')]()-nd,dcenter['y']),pt(drect[_0x30da('0x71')](),dcenter['y'])]);}else{var ox=orect['right']();var oy=ocenter['y'];var ty=orect[_0x30da('0x1ae')]();var by=orect[_0x30da('0x1af')]();var dx=drect[_0x30da('0x71')]();var dy=dcenter['y'];var mx=(ox+dx)/0x2;var my=(oy+dy)/0x2;var nd=this[_0x30da('0x19b')];var hd=nd/0x2;var o1x=ox+hd;var o2x=dx-hd;var lp=this[_0x30da('0x1d2')];if(orect['right']()<drect[_0x30da('0x71')]()){candidates['push']([pt(ox,oy),pt(mx,oy),pt(mx,dy),pt(dx,dy)]);candidates['push']([pt(ox,oy),pt(o1x,oy),pt(o1x,dy),pt(dx,dy)]);candidates[_0x30da('0x14')]([pt(ox,oy),pt(o2x,oy),pt(o2x,dy),pt(dx,dy)]);for(var ci=0x1;ci<=0x5;ci++){candidates[_0x30da('0x14')]([pt(ocenter['x'],by),pt(ocenter['x'],by+hd),pt(dcenter['x'],by+hd),pt(dcenter['x'],drect[_0x30da('0x1af')]())]);candidates[_0x30da('0x14')]([pt(ocenter['x'],ty),pt(ocenter['x'],ty-hd),pt(dcenter['x'],ty-hd),pt(dcenter['x'],drect[_0x30da('0x1ae')]())]);}candidates[_0x30da('0x14')]([pt(ox,oy),pt(o1x,oy),pt(o1x,ty),pt(o2x,ty),pt(o2x,dy),pt(dx,dy)]);candidates['push']([pt(ox,oy),pt(o1x,oy),pt(o1x,my),pt(o2x,my),pt(o2x,dy),pt(dx,dy)]);}else{candidates[_0x30da('0x14')]([pt(ox,oy),pt(o1x,oy),pt(o1x,my),pt(o2x,my),pt(o2x,dy),pt(dx,dy)]);candidates[_0x30da('0x14')]([pt(ox,oy),pt(o1x,oy),pt(o1x,orect[_0x30da('0x1ae')]()-lp),pt(dcenter['x'],orect[_0x30da('0x1ae')]()-lp),pt(dcenter['x'],drect[_0x30da('0x1af')]())]);}}if(relaxed){var bestEval=Number[_0x30da('0xee')];var bestPoints;for(var c=0x0;c<candidates[_0x30da('0x16')];c++){var points=candidates[c];var currEval=evalPath(points,link[_0x30da('0x8')],link[_0x30da('0xa')],g[_0x30da('0xbb')]);if(currEval<bestEval){bestEval=currEval;bestPoints=points;}}return bestPoints;}else{for(var c=0x0;c<candidates[_0x30da('0x16')];c++){var points=candidates[c];if(acceptPath(points,link[_0x30da('0x8')],link[_0x30da('0xa')],g[_0x30da('0xbb')])){return points;}}}return null;}[_0x30da('0x1f6')](points){var segments=[];for(var i=0x0;i<points[_0x30da('0x16')]-0x1;i++){var segment={'index':i,'points':points,'horizontal'(){return this[_0x30da('0x1aa')][this[_0x30da('0x1a')]]['y']==this['points'][this[_0x30da('0x1a')]+0x1]['y'];},'xint'(){var prev=this['points'][this[_0x30da('0x1a')]]['x'];var next=this[_0x30da('0x1aa')][this[_0x30da('0x1a')]+0x1]['x'];return prev<next?[prev,next]:[next,prev];},'yint'(){var prev=this[_0x30da('0x1aa')][this[_0x30da('0x1a')]]['y'];var next=this[_0x30da('0x1aa')][this[_0x30da('0x1a')]+0x1]['y'];return prev<next?[prev,next]:[next,prev];}};segments[_0x30da('0x14')](segment);}return segments;}[_0x30da('0x1f7')](links){for(var i=0x0;i<links[_0x30da('0x16')];i++){var link=links[i];link['_mf_segments']=this[_0x30da('0x1f6')](link['points']);}this['splitPaths'](links,!![]);this[_0x30da('0x1f8')](links,![]);}['splitPaths'](links,horizontal){var segments=[];for(var i=0x0;i<links[_0x30da('0x16')];i++){var link=links[i];var path=link[_0x30da('0x1f9')];for(var j=0x0;j<path['length'];j++){var segment=path[j];if(segment[_0x30da('0x1fa')]()==horizontal)segments[_0x30da('0x14')](segment);}}segments['sort'](horizontal?compareY:compareX);var currentPos=-(Number[_0x30da('0xee')]-0x1);var bucket=[];var count=segments[_0x30da('0x16')];for(var i=0x0;i<=count;++i){var segment=i<count?segments[i]:null;var firstPos=currentPos;if(bucket[_0x30da('0x16')]>0x0)firstPos=coord(bucket[0x0],horizontal);if(segment==null||Math[_0x30da('0x1fb')](coord(segment,horizontal)-firstPos)>this['mm']*0x2){if(bucket[_0x30da('0x16')]>0x1){var splitGroups=getSplitGroups(bucket,horizontal);for(var g=0x0;g<splitGroups[_0x30da('0x16')];g++){var group=splitGroups[g];if(group['length']<0x2)continue;var sharedPos=coord(group[0x0],horizontal);group[_0x30da('0xde')](horizontal?compareH:compareV);var lp=this['linkPadding']/0x2;var min=sharedPos-lp*0x2;var max=sharedPos+lp*0x2;var m=(min+max)/0x2;var d=Math[_0x30da('0xbd')]((max-min)/0x2,(group['length']-0x1)*0x3*lp);var step=d/(group['length']-0x1);var pos=sharedPos-d/0x2>=min+step?sharedPos-d/0x2:m-d/0x2;for(var si=0x0;si<group[_0x30da('0x16')];si++){var s=group[si];pos-coord(s,horizontal);if(horizontal){s[_0x30da('0x1aa')][s['index']]['y']=pos;s['points'][s[_0x30da('0x1a')]+0x1]['y']=pos;}else{s[_0x30da('0x1aa')][s[_0x30da('0x1a')]]['x']=pos;s[_0x30da('0x1aa')][s[_0x30da('0x1a')]+0x1]['x']=pos;}pos+=step;}}}bucket[_0x30da('0x16')]=0x0;}if(segment!=null){currentPos=coord(segment,horizontal);if(segment['index']>=0x0&&segment[_0x30da('0x1a')]<=segment[_0x30da('0x1aa')]['length']-0x1)bucket['push'](segment);}}}get[_0x30da('0x1d1')](){return this[_0x30da('0x1fc')];}set['branchPadding'](value){this['_branchPadding']=value;}get['linkPadding'](){return this[_0x30da('0x1fd')];}set[_0x30da('0x1d2')](value){this['_linkPadding']=value;}get['nodeDistance'](){return this[_0x30da('0x1b4')];}set[_0x30da('0x19b')](value){this[_0x30da('0x1b4')]=value;}get[_0x30da('0x1d9')](){return this[_0x30da('0x1fe')];}set[_0x30da('0x1d9')](value){this[_0x30da('0x1fe')]=value;}get[_0x30da('0x18c')](){return this[_0x30da('0x18f')];}set[_0x30da('0x18c')](value){this[_0x30da('0x18f')]=value;}get[_0x30da('0x18d')](){return this[_0x30da('0x190')];}set[_0x30da('0x18d')](value){this[_0x30da('0x190')]=value;}get[_0x30da('0x191')](){return this[_0x30da('0x192')];}set[_0x30da('0x191')](value){this[_0x30da('0x192')]=value;}[_0x30da('0x1ff')](){for(var v=0x0;v<this[_0x30da('0xa4')][_0x30da('0xbb')]['length'];v++){var vertex=this[_0x30da('0xa4')][_0x30da('0xbb')][v];console[_0x30da('0x200')](_0x30da('0x201'));console[_0x30da('0x200')](vertex['debugId']);for(var e=0x0;e<vertex['outEdges'][_0x30da('0x16')];e++){var edge=vertex[_0x30da('0x1')][e];console['log']('\x20\x20\x20\x20'+edge[_0x30da('0xe7')]);}}}}class FlowchartBlock{constructor(flowchartLayout){this['flowchartLayout']=flowchartLayout;this['contentBreadth']=0x0;this[_0x30da('0x202')]=0x0;this[_0x30da('0x203')]=0x0;this[_0x30da('0x204')]=0x0;this['arranged']=![];this[_0x30da('0x205')]=null;this[_0x30da('0x206')]=null;this[_0x30da('0x1ef')]=null;}[_0x30da('0x5d')](block){block['parentBlock']=this;}['measure'](branchPadding,linkPadding,o){}['arrange'](b,l,offset,o){}[_0x30da('0x207')](){}[_0x30da('0x208')](){}[_0x30da('0x209')](links){var backLinks=[];for(var l=0x0;l<links[_0x30da('0x16')];++l){var link=links[l];if(this[_0x30da('0x20a')][_0x30da('0x1f4')](link))backLinks['push'](link);}return backLinks;}['nextNodes'](){return null;}[_0x30da('0x20b')](block){return!![];}[_0x30da('0x20c')](){return this[_0x30da('0x20d')];}[_0x30da('0x20e')](){return this['fullBreadth'];}[_0x30da('0x20f')](){return this[_0x30da('0x203')];}[_0x30da('0x210')](value){this['loopDepth']=value;}[_0x30da('0x211')](){return this[_0x30da('0x212')];}['getIncomingLink'](){return this['incomingLink'];}[_0x30da('0x213')](value){this[_0x30da('0x205')]=value;}}function LOriginComparer(orientation){return function(a,b){var la=0x0;if(orientation==Orientation[_0x30da('0x1ba')])la=a[_0x30da('0x8')]['y'];else la=a[_0x30da('0x8')]['x'];var lb=0x0;if(orientation==Orientation[_0x30da('0x1ba')])lb=b['origin']['y'];else lb=b['origin']['x'];if(la<lb)return-0x1;if(la>lb)return 0x1;return 0x0;};}function BOriginComparer(orientation){return function Compare(a,b){var la=0x0;if(orientation==Orientation[_0x30da('0x1ba')])la=a[_0x30da('0x8')]['x'];else la=a[_0x30da('0x8')]['y'];var lb=0x0;if(orientation==Orientation[_0x30da('0x1ba')])lb=b[_0x30da('0x8')]['x'];else lb=b[_0x30da('0x8')]['y'];if(la<lb)return-0x1;if(la>lb)return 0x1;return 0x0;};}function CompareTopologicalOrder(flowchartLayout){return function(n1,n2){var to=flowchartLayout[_0x30da('0x1f5')]();if(to[_0x30da('0xa8')](n1[_0x30da('0x214')]())&&to[_0x30da('0xa8')](n2['getNode']())){var o1=to[_0x30da('0x5a')](n1[_0x30da('0x214')]());var o2=to[_0x30da('0x5a')](n2[_0x30da('0x214')]());if(o1<o2)return-0x1;if(o1>o2)return 0x1;}return 0x0;};}class FlowchartNode extends FlowchartBlock{constructor(flowchartLayout,node){super(flowchartLayout);this[_0x30da('0x1d0')]=node;}[_0x30da('0x215')](branchPadding,linkPadding,o){this['maxLoopDepth']=this['loopDepth'];if(o==Orientation['Vertical'])this[_0x30da('0x20d')]=this[_0x30da('0x202')]=this[_0x30da('0x1d0')][_0x30da('0xe3')];else this['contentBreadth']=this['fullBreadth']=this[_0x30da('0x1d0')]['height'];return this['contentBreadth'];}['arrange'](b,l,offset,o){var node=this['node'];this[_0x30da('0x212')]=!![];node['_fcl_arranged']=!![];this[_0x30da('0x20a')]['placedNodes']['push'](node);if(o==Orientation['Vertical']){Tools['MoveNode'](node,b-node[_0x30da('0xe3')]/0x2,l);var ll=bounds(node)[_0x30da('0x1af')]();}else{Tools[_0x30da('0x1bd')](node,l,b-node[_0x30da('0xe4')]/0x2);var ll=bounds(node)['right']();}this[_0x30da('0x20a')][_0x30da('0x1db')]=Math[_0x30da('0xbe')](ll,this[_0x30da('0x20a')][_0x30da('0x1db')]);this[_0x30da('0x1db')]=ll;return ll;}['getOutLinks'](){return this[_0x30da('0x1d0')][_0x30da('0x1')];}[_0x30da('0x208')](){return this[_0x30da('0x1d0')][_0x30da('0x2')];}[_0x30da('0x214')](){return this[_0x30da('0x1d0')];}}class FlowchartSequence extends FlowchartBlock{constructor(flowchartLayout,startNode){super(flowchartLayout);this['sequence']=[];if(startNode)this['sequence'][_0x30da('0x14')](startNode);}[_0x30da('0x215')](branchPadding,linkPadding,o){this[_0x30da('0x204')]=this[_0x30da('0x20f')]();this['contentBreadth']=0x0;for(var b=0x0;b<this[_0x30da('0x216')][_0x30da('0x16')];++b){var block=this['sequence'][b];block[_0x30da('0x215')](branchPadding,linkPadding,o);this[_0x30da('0x20d')]=Math[_0x30da('0xbe')](this[_0x30da('0x20d')],block['getContentBreadth']());this[_0x30da('0x204')]=Math[_0x30da('0xbe')](this[_0x30da('0x204')],block[_0x30da('0x204')]);}this[_0x30da('0x202')]=this['contentBreadth']+this['maxLoopDepth']*linkPadding;return this[_0x30da('0x202')];}[_0x30da('0x1d8')](b,l,offset,o){var prevBlock=null;var offsetNext=0x0;var overflow=0x0;for(var bc=0x0;bc<this[_0x30da('0x216')][_0x30da('0x16')];++bc){var block=this[_0x30da('0x216')][bc];if(block['getArranged']()){prevBlock=block;l=Math['max'](l,prevBlock['furthestL']+offset);continue;}if(block[_0x30da('0x217')]()!=null){var bottomCenter=Tools[_0x30da('0x1b9')](block['getIncomingLink']()[_0x30da('0x8')],o);b=o==Orientation[_0x30da('0x1ba')]?bottomCenter['x']:bottomCenter['y'];}l+=offsetNext;l=block[_0x30da('0x1d8')](b,l,offset,o);if(block[_0x30da('0x218')])overflow=Math['max'](block[_0x30da('0x218')],overflow);offsetNext=offset;if(prevBlock!=null&&prevBlock[_0x30da('0x20b')](block)){var links=prevBlock[_0x30da('0x207')]();if(links!=null){var seqLinks=this[_0x30da('0x20a')][_0x30da('0x1f0')](links);if(seqLinks[_0x30da('0x16')]>0x0){var origin=seqLinks[0x0][_0x30da('0x8')];var destination=seqLinks[0x0]['destination'];var bb=Math[_0x30da('0xbd')](Tools[_0x30da('0x1c5')](origin,o),Tools[_0x30da('0x1c5')](destination,o));var ll=Tools['GetBCenter'](origin,o)-bb/0x2;for(var i=0x0;i<seqLinks[_0x30da('0x16')];++i){var link=seqLinks[i];if(o==Orientation['Vertical']){var lx=ll+(i+0x1)*bb/(seqLinks[_0x30da('0x16')]+0x1);if(!link[_0x30da('0x1c1')])Tools[_0x30da('0x1bf')](link,newPoint(lx,bounds(origin)[_0x30da('0x1af')]()),newPoint(lx,bounds(destination)[_0x30da('0x1ae')]()));}else{var ly=ll+(i+0x1)*bb/(seqLinks['length']+0x1);if(!link['_fcl_processed'])Tools[_0x30da('0x1bf')](link,newPoint(bounds(origin)[_0x30da('0x6b')](),ly),newPoint(bounds(destination)[_0x30da('0x71')](),ly));}}}}}prevBlock=block;}for(var bc=0x0;bc<this['sequence'][_0x30da('0x16')];++bc){var block=this[_0x30da('0x216')][bc];if(block instanceof FlowchartNode){var backLinks=this[_0x30da('0x209')](block['getInLinks']());backLinks[_0x30da('0xde')](LOriginComparer(o));for(var i=0x0;i<backLinks[_0x30da('0x16')];++i){var link=backLinks[i];var orect=bounds(link[_0x30da('0x8')]);var drect=bounds(link['destination']);var startL=Tools[_0x30da('0x1c8')](link[_0x30da('0x8')],o);var endL=Tools[_0x30da('0x1c8')](link[_0x30da('0xa')],o);var vSegmentB=b-this[_0x30da('0x20c')]()/0x2+this[_0x30da('0x20e')]()-(block[_0x30da('0x20f')]()-0x1-i)*this[_0x30da('0x20a')]['getLinkPadding']();if(o==Orientation[_0x30da('0x1ba')]){Tools[_0x30da('0x1bf')](link,new Point(orect[_0x30da('0x6b')](),startL),new Point(vSegmentB,startL),new Point(vSegmentB,endL),new Point(drect[_0x30da('0x6b')](),endL));}else{Tools['SetLinkPoints'](link,new Point(startL,orect[_0x30da('0x1af')]()),new Point(startL,vSegmentB),new Point(endL,vSegmentB),new Point(endL,drect[_0x30da('0x1af')]()));}}}}if(overflow)this[_0x30da('0x218')]=overflow;this[_0x30da('0x1db')]=l;return l;}[_0x30da('0x207')](){return this[_0x30da('0x216')][this[_0x30da('0x216')][_0x30da('0x16')]-0x1]['getOutLinks']();}[_0x30da('0x208')](){return this[_0x30da('0x216')][0x0][_0x30da('0x208')]();}['add'](block){this[_0x30da('0x216')]['push'](block);super[_0x30da('0x5d')](block);}}class CenteredBranchingDescriptor{constructor(){this[_0x30da('0x219')]=null;this[_0x30da('0x21a')]=null;this['rightBlock']=null;}}class FlowchartBranching extends FlowchartBlock{constructor(flowchartLayout,rootNode){super(flowchartLayout);this[_0x30da('0x21b')]=rootNode;this[_0x30da('0x1ea')]=[];this[_0x30da('0x21c')]=new Map();this[_0x30da('0x21d')]=[];this[_0x30da('0x1d1')]=0x0;this[_0x30da('0x21e')]=null;}[_0x30da('0x215')](branchPadding,linkPadding,o){this[_0x30da('0x1d1')]=branchPadding;this['rootNode']['measure'](branchPadding,linkPadding,o);for(var m=0x0;m<this[_0x30da('0x21d')][_0x30da('0x16')];++m){var mergeNode=this[_0x30da('0x21d')][m];mergeNode['measure'](branchPadding,linkPadding,o);}var centeredBranching=this[_0x30da('0x21e')]=this[_0x30da('0x21f')]();if(centeredBranching!=null){this[_0x30da('0x20d')]=centeredBranching[_0x30da('0x219')][_0x30da('0x215')](branchPadding,linkPadding,o);this['contentBreadth']=Math['max'](this[_0x30da('0x20d')],this[_0x30da('0x21b')][_0x30da('0x20c')]());this['contentBreadth']=Math['max'](this[_0x30da('0x20d')],this[_0x30da('0x21d')][0x0][_0x30da('0x20c')]());this['contentBreadth']+=0x2*branchPadding;}else if(this[_0x30da('0x220')]()){this[_0x30da('0x20d')]=0x2*linkPadding+Math[_0x30da('0xbe')](this[_0x30da('0x21b')]['getContentBreadth'](),this[_0x30da('0x21d')][0x0]['getContentBreadth']());}else{this[_0x30da('0x20d')]=branchPadding*(this[_0x30da('0x1ea')][_0x30da('0x16')]-0x1);for(var b=0x0;b<this['branches']['length'];++b){var block=this[_0x30da('0x1ea')][b];this[_0x30da('0x20d')]+=block['measure'](branchPadding,linkPadding,o);}this[_0x30da('0x20d')]=Math[_0x30da('0xbe')](this[_0x30da('0x20d')],this[_0x30da('0x21b')][_0x30da('0x20c')]());}this['fullBreadth']=this[_0x30da('0x20d')];return this[_0x30da('0x202')];}['connectNodeBorderCenters'](link,o){var orgEndPoint=Tools[_0x30da('0x1b9')](link[_0x30da('0x8')],o);var destEndPoint=Tools[_0x30da('0x1bb')](link[_0x30da('0xa')],o);Tools[_0x30da('0x1bf')](link,orgEndPoint,destEndPoint);}[_0x30da('0x1d8')](b,l,offset,o){var flowchartLayout=this[_0x30da('0x20a')];var rootNode=this[_0x30da('0x21b')];if(!rootNode[_0x30da('0x211')]())l=rootNode[_0x30da('0x1d8')](b,l,offset,o)+offset;var maxL=l;var sortedBranches=this[_0x30da('0x221')](this[_0x30da('0x1ea')]);var mergeAdjusted=![];var overflow=0x0;if(this['centeredBranching']==null){var currentB=b-this[_0x30da('0x20c')]()/0x2;for(var sb=0x0;sb<sortedBranches['length'];++sb){var branch=sortedBranches[sb];currentB+=branch['getContentBreadth']()/0x2;maxL=Math[_0x30da('0xbe')](maxL,branch[_0x30da('0x1d8')](currentB,l,offset,o));if(branch['arrangeOverflow'])overflow+=branch[_0x30da('0x218')];currentB+=branch['getFullBreadth']()-branch[_0x30da('0x20c')]()/0x2+this[_0x30da('0x1d1')];if(branch[_0x30da('0x218')])currentB+=branch[_0x30da('0x218')];}}else{var branch=this[_0x30da('0x21e')]['middleBlock'];maxL=branch[_0x30da('0x1d8')](b,l,offset,o);if(branch['arrangeOverflow'])overflow+=branch[_0x30da('0x218')];}if(this['mergeNodes']['length']==0x1){var mergeNode=this[_0x30da('0x21d')][0x0];if(!mergeNode[_0x30da('0x212')])maxL=mergeNode['arrange'](b,maxL+offset,offset,o);else maxL=Math[_0x30da('0xbe')](maxL,Tools['GetLFar'](mergeNode['getNode'](),o));mergeNode[_0x30da('0x222')]=!![];}else{this[_0x30da('0x21d')]['sort'](CompareTopologicalOrder(flowchartLayout));var prevMergeNode=null;var defer=FlowchartBranching['deferredMerge'];for(var m=0x0;m<this['mergeNodes'][_0x30da('0x16')];++m){var mergeNode=this[_0x30da('0x21d')][m];var originsArranged=originNodesArranged(mergeNode['getInLinks']());if(!originsArranged)continue;if(mergeNode[_0x30da('0x214')]()['outDegree']()==0x0&&!originsArranged&&!defer[_0x30da('0xc')](mergeNode)){defer[_0x30da('0x14')](mergeNode[_0x30da('0x214')]());}var inLinks=flowchartLayout['getDownLinks'](mergeNode['getInLinks']());var center=centerOfOriginNodes(inLinks,o);var far=farOfOriginNodes(inLinks,o);var fixedInFlow=mergeNode[_0x30da('0x212')]&&mergeNode[_0x30da('0x214')]()['_fcl_arranged']&&mergeNode[_0x30da('0x214')]()[_0x30da('0x18')]()>0x0;if(fixedInFlow){var mlinks=mergeNode[_0x30da('0x214')]()[_0x30da('0x0')];for(var mli=0x0;mli<mlinks[_0x30da('0x16')];mli++)mlinks[mli][_0x30da('0x1c0')]=!![];continue;}var wasArranged=mergeNode[_0x30da('0x212')];if(wasArranged){var oldX=mergeNode['getNode']()['x'];var oldY=mergeNode['getNode']()['y'];}var currentL=far+offset;var checkIntersections=currentL<this[_0x30da('0x20a')][_0x30da('0x1db')];var nextL=mergeNode[_0x30da('0x1d8')](center,currentL,offset,o);maxL=Math['max'](maxL,nextL);var mergeRect=bounds(mergeNode);if(prevMergeNode){if(bounds(prevMergeNode)[_0x30da('0x223')](mergeRect))maxL=mergeNode[_0x30da('0x1d8')](center,Tools[_0x30da('0x224')](prevMergeNode[_0x30da('0x214')](),o)+offset,offset,o);}else if(checkIntersections){var placed=this[_0x30da('0x20a')][_0x30da('0x1da')];for(var p=0x0;p<placed[_0x30da('0x16')];p++){var testNode=placed[p];if(mergeNode[_0x30da('0x1d0')]!=testNode&&bounds(testNode)['intersectsWith'](mergeRect)){maxL=mergeNode[_0x30da('0x1d8')](Tools[_0x30da('0x1ca')](testNode,o)+offset+mergeRect['width']/0x2,currentL,offset,o);mergeAdjusted=!![];break;}}}mergeNode['arrangedAsMerge']=!![];if(wasArranged){var dx=mergeNode[_0x30da('0x214')]()['x']-oldX;var dy=mergeNode[_0x30da('0x214')]()['y']-oldY;Tools[_0x30da('0x225')](mergeNode[_0x30da('0x214')]()[_0x30da('0x1')],dx,dy,o);}var mlinks=mergeNode[_0x30da('0x214')]()[_0x30da('0x0')];for(var mli=0x0;mli<mlinks['length'];mli++)mlinks[mli][_0x30da('0x1c0')]=!![];prevMergeNode=mergeNode;prevMergeNode['_fcl_center']=center;}}var centeredBranching=this[_0x30da('0x21e')];if(centeredBranching!=null){if(centeredBranching[_0x30da('0x226')]!=null){var rightLink=centeredBranching[_0x30da('0x226')][_0x30da('0x217')]();var rightOrg=rightLink['origin'];var rightDest=rightLink['destination'];var orgEndPoint=Tools[_0x30da('0x227')](rightOrg,o);var destEndPoint=Tools[_0x30da('0x227')](rightDest,o);var midSegmentCoord=b+this[_0x30da('0x20d')]/0x2;var b1,b2;if(o==Orientation[_0x30da('0x1ba')]){b1=new Point(midSegmentCoord,orgEndPoint['y']);b2=new Point(midSegmentCoord,destEndPoint['y']);}else{b1=new Point(orgEndPoint['x'],midSegmentCoord);b2=new Point(destEndPoint['x'],midSegmentCoord);}Tools[_0x30da('0x1bf')](rightLink,orgEndPoint,b1,b2,destEndPoint);}if(centeredBranching[_0x30da('0x21a')]!=null){var leftLink=centeredBranching['leftBlock'][_0x30da('0x217')]();var leftOrg=leftLink[_0x30da('0x8')];var leftDest=leftLink[_0x30da('0xa')];var orgEndPoint=Tools[_0x30da('0x1bc')](leftOrg,o);var destEndPoint=Tools[_0x30da('0x1bc')](leftDest,o);var midSegmentCoord=b-this[_0x30da('0x20d')]/0x2;var b1,b2;if(o==Orientation[_0x30da('0x1ba')]){b1=new Point(midSegmentCoord,orgEndPoint['y']);b2=new Point(midSegmentCoord,destEndPoint['y']);}else{b1=new Point(orgEndPoint['x'],midSegmentCoord);b2=new Point(destEndPoint['x'],midSegmentCoord);}Tools['SetLinkPoints'](leftLink,orgEndPoint,b1,b2,destEndPoint);}}else if(sortedBranches['length']==0x2){var leftLink=sortedBranches[0x0]['getIncomingLink']();var rightLink=sortedBranches[0x1][_0x30da('0x217')]();var leftDest=leftLink['destination'];var rightDest=rightLink['destination'];var leftTopCenter=Tools[_0x30da('0x1bb')](leftDest,o);var rightTopCenter=Tools[_0x30da('0x1bb')](rightDest,o);var root=rootNode[_0x30da('0x214')]();var leftDestMerge=this[_0x30da('0x21d')][_0x30da('0xc')](flowchartLayout[_0x30da('0x1ed')](leftLink[_0x30da('0xa')]));if(Tools['GetB'](leftTopCenter,o)<Tools['GetBNear'](root,o)){var leftStart=Tools[_0x30da('0x1bc')](root,o);var leftMiddle=new Point();if(o==Orientation[_0x30da('0x1ba')])leftMiddle=new Point(leftTopCenter['x'],leftStart['y']);else leftMiddle=new Point(leftStart['x'],leftTopCenter['y']);Tools[_0x30da('0x1bf')](leftLink,leftStart,leftMiddle,leftTopCenter);}else if(!leftDestMerge){var leftStart=Tools['GetLFarCenter'](root,o);var ll=(Tools[_0x30da('0x1ce')](leftStart,o)+Tools[_0x30da('0x1ce')](leftTopCenter,o))/0x2;if(o==Orientation[_0x30da('0x1ba')]){Tools[_0x30da('0x1bf')](leftLink,leftStart,new Point(leftStart['x'],ll),new Point(leftTopCenter['x'],ll),leftTopCenter);}else{Tools[_0x30da('0x1bf')](leftLink,leftStart,new Point(ll,leftStart['y']),new Point(ll,leftTopCenter['y']),leftTopCenter);}}else if(leftDestMerge){var points=Tools[_0x30da('0x228')](leftLink);points[0x0]=Tools[_0x30da('0x1bc')](root,o);}var rightDestMerge=this[_0x30da('0x21d')][_0x30da('0xc')](flowchartLayout['getFlowchartNode'](rightLink[_0x30da('0xa')]));if(Tools[_0x30da('0x229')](rightTopCenter,o)>Tools[_0x30da('0x1ca')](root,o)){var rightStart=Tools[_0x30da('0x227')](root,o);var rightMiddle=new Point();if(o==Orientation[_0x30da('0x1ba')])rightMiddle=new Point(rightTopCenter['x'],rightStart['y']);else rightMiddle=new Point(rightStart['x'],rightTopCenter['y']);Tools[_0x30da('0x1bf')](rightLink,rightStart,rightMiddle,rightTopCenter);}else if(!rightDestMerge){var rightStart=Tools[_0x30da('0x1b9')](root,o);var ll=(Tools[_0x30da('0x1ce')](rightStart,o)+Tools[_0x30da('0x1ce')](rightTopCenter,o))/0x2;if(o==Orientation[_0x30da('0x1ba')]){Tools['SetLinkPoints'](rightLink,rightStart,new Point(rightStart['x'],ll),new Point(rightTopCenter['x'],ll),rightTopCenter);}else{Tools[_0x30da('0x1bf')](rightLink,rightStart,new Point(ll,rightStart['y']),new Point(ll,rightTopCenter['y']),rightTopCenter);}}else if(rightDestMerge){var points=Tools[_0x30da('0x228')](rightLink);points[0x0]=Tools['GetBFarCenter'](root,o);}}else{var midIndex=intDiv$1(sortedBranches['length'],0x2);var midLink=sortedBranches[midIndex][_0x30da('0x217')]();var midStraight=sortedBranches[_0x30da('0x16')]%0x2==0x0||bounds(midLink[_0x30da('0x8')])[_0x30da('0x1be')]()['x']==bounds(midLink[_0x30da('0xa')])['center']()['x'];for(var i=0x0;i<sortedBranches['length'];++i){var link=sortedBranches[i][_0x30da('0x217')]();var origin=link['origin'];var destination=link[_0x30da('0xa')];var startB=(i+0x1)*Tools['GetBreadth'](origin,o)/(sortedBranches['length']+0x1)+Tools[_0x30da('0x1c9')](origin,o);var f=i<intDiv$1(sortedBranches[_0x30da('0x16')],0x2)?i+0x1:sortedBranches[_0x30da('0x16')]-i;var hrzSegmentL=Tools[_0x30da('0x224')](origin,o)+f*offset/(midIndex+(midStraight?0x1:0x2));var endPoint=Tools[_0x30da('0x1bb')](destination,o);if(o==Orientation[_0x30da('0x1ba')]){Tools[_0x30da('0x1bf')](link,new Point(startB,bounds(origin)['bottom']()),new Point(startB,hrzSegmentL),new Point(endPoint['x'],hrzSegmentL),endPoint);}else{Tools[_0x30da('0x1bf')](link,new Point(bounds(origin)[_0x30da('0x6b')](),startB),new Point(hrzSegmentL,startB),new Point(hrzSegmentL,endPoint['y']),endPoint);}}}if(centeredBranching!=null){this[_0x30da('0x22a')](centeredBranching[_0x30da('0x219')][_0x30da('0x217')](),o);var inLinks=flowchartLayout[_0x30da('0x1f0')](this[_0x30da('0x21d')][0x0]['getInLinks']());for(var l1=0x0;l1<inLinks[_0x30da('0x16')];++l1){var link=inLinks[l1];if(link[_0x30da('0x8')]!=rootNode[_0x30da('0x214')]())this[_0x30da('0x22a')](link,o);}}else for(var m=0x0;m<this[_0x30da('0x21d')]['length'];++m){var mergeNode=this['mergeNodes'][m];var inLinks=flowchartLayout['getDownLinks'](mergeNode[_0x30da('0x208')]());inLinks[_0x30da('0xde')](BOriginComparer(o));if(inLinks[_0x30da('0x16')]==0x2){var leftLink=inLinks[0x0];var rightLink=inLinks[0x1];if(this[_0x30da('0x220')]()){var left=this[_0x30da('0x22b')](rootNode,this[_0x30da('0x21d')][0x0],o)-flowchartLayout['getLinkPadding']();var right=this[_0x30da('0x22c')](rootNode,this['mergeNodes'][0x0],o)+flowchartLayout[_0x30da('0x22d')]();var rootLeft=Tools[_0x30da('0x1bc')](rootNode['getNode'](),o);var rootRight=Tools[_0x30da('0x227')](rootNode[_0x30da('0x214')](),o);var mergeLeft=Tools[_0x30da('0x1bc')](this[_0x30da('0x21d')][0x0]['getNode'](),o);var mergeRight=Tools[_0x30da('0x227')](this[_0x30da('0x21d')][0x0][_0x30da('0x214')](),o);if(o==Orientation[_0x30da('0x1ba')]){Tools['SetLinkPoints'](leftLink,rootLeft,new Point(left,rootLeft['y']),new Point(left,mergeLeft['y']),mergeLeft);Tools[_0x30da('0x1bf')](rightLink,rootRight,new Point(right,rootRight['y']),new Point(right,mergeRight['y']),mergeRight);}else{Tools[_0x30da('0x1bf')](leftLink,rootLeft,new Point(rootLeft['x'],left),new Point(mergeLeft['x'],left),mergeLeft);Tools[_0x30da('0x1bf')](rightLink,rootRight,new Point(rootRight['x'],right),new Point(mergeRight['x'],right),mergeRight);}}else{var leftOrigin=leftLink['origin'];var rightOrigin=rightLink[_0x30da('0x8')];var leftLfarCenter=Tools['GetLFarCenter'](leftOrigin,o);var rightLfarCenter=Tools[_0x30da('0x1b9')](rightOrigin,o);var root=rootNode[_0x30da('0x214')]();if(Tools[_0x30da('0x229')](leftLfarCenter,o)<Tools[_0x30da('0x1c9')](mergeNode[_0x30da('0x214')](),o)){var leftEnd=Tools['GetBNearCenter'](mergeNode['getNode'](),o);var leftMiddle=new Point();if(o==Orientation[_0x30da('0x1ba')])leftMiddle=new Point(leftLfarCenter['x'],leftEnd['y']);else leftMiddle=new Point(leftEnd['x'],leftLfarCenter['y']);Tools['SetLinkPoints'](leftLink,leftLfarCenter,leftMiddle,leftEnd);}else if(leftLink[_0x30da('0x8')]==root){var leftEnd=Tools[_0x30da('0x1bc')](mergeNode[_0x30da('0x214')](),o);var linkPoints=Tools[_0x30da('0x228')](leftLink);var nextToLast=linkPoints[linkPoints[_0x30da('0x16')]-0x2];if(o==Orientation[_0x30da('0x1ba')])nextToLast['y']=leftEnd['y'];else nextToLast['x']=leftEnd['x'];linkPoints[linkPoints[_0x30da('0x16')]-0x2]=nextToLast;linkPoints[linkPoints[_0x30da('0x16')]-0x1]=leftEnd;}else if(leftLink['origin']!=root){var leftEnd=Tools[_0x30da('0x1bb')](mergeNode[_0x30da('0x214')](),o);var h=0x0;if(o==Orientation[_0x30da('0x1ba')])h=(leftEnd['y']+leftLfarCenter['y'])/0x2;else h=(leftEnd['x']+leftLfarCenter['x'])/0x2;if(o==Orientation['Vertical']){Tools[_0x30da('0x1bf')](leftLink,leftLfarCenter,new Point(leftLfarCenter['x'],h),new Point(leftEnd['x'],h),leftEnd);}else{Tools[_0x30da('0x1bf')](leftLink,leftLfarCenter,new Point(h,leftLfarCenter['y']),new Point(h,leftEnd['y']),leftEnd);}}if(Tools[_0x30da('0x229')](rightLfarCenter,o)>Tools[_0x30da('0x1ca')](mergeNode[_0x30da('0x214')](),o)){var rightEnd=Tools[_0x30da('0x227')](mergeNode[_0x30da('0x214')](),o);var rightMiddle=new Point();if(o==Orientation[_0x30da('0x1ba')])rightMiddle=new Point(rightLfarCenter['x'],rightEnd['y']);else rightMiddle=new Point(rightEnd['x'],rightLfarCenter['y']);Tools[_0x30da('0x1bf')](rightLink,rightLfarCenter,rightMiddle,rightEnd);}else if(rightLink['origin']==root){var linkPoints=Tools[_0x30da('0x228')](rightLink);var nextToLast=linkPoints[linkPoints['length']-0x2];var rightEnd=Tools[_0x30da('0x229')](nextToLast,o)<Tools[_0x30da('0x1c9')](mergeNode[_0x30da('0x214')](),o)?Tools[_0x30da('0x1bc')](mergeNode[_0x30da('0x214')](),o):Tools['GetBFarCenter'](mergeNode[_0x30da('0x214')](),o);if(o==Orientation['Vertical'])nextToLast['y']=rightEnd['y'];else nextToLast['x']=rightEnd['x'];linkPoints[linkPoints['length']-0x2]=nextToLast;linkPoints[linkPoints[_0x30da('0x16')]-0x1]=rightEnd;}else if(rightLink[_0x30da('0x8')]!=root){var rightEnd=Tools[_0x30da('0x1bb')](mergeNode[_0x30da('0x214')](),o);var h=0x0;if(o==Orientation[_0x30da('0x1ba')])h=(rightEnd['y']+rightLfarCenter['y'])/0x2;else h=(rightEnd['x']+rightLfarCenter['x'])/0x2;if(o==Orientation['Vertical']){Tools[_0x30da('0x1bf')](rightLink,rightLfarCenter,new Point(rightLfarCenter['x'],h),new Point(rightEnd['x'],h),rightEnd);}else{Tools[_0x30da('0x1bf')](rightLink,rightLfarCenter,new Point(h,rightLfarCenter['y']),new Point(h,rightEnd['y']),rightEnd);}}}}else{for(var i=0x0;i<inLinks[_0x30da('0x16')];++i){var link=inLinks[i];var origin=link[_0x30da('0x8')];var destination=link['destination'];var endB=(i+0x1)*Tools[_0x30da('0x1c5')](destination,o)/(inLinks['length']+0x1)+Tools[_0x30da('0x1c9')](destination,o);var f=i<intDiv$1(inLinks[_0x30da('0x16')],0x2)?i+0x1:inLinks[_0x30da('0x16')]-i;var hrzSegmentL=Tools[_0x30da('0x22e')](destination,o)-f*offset/(inLinks[_0x30da('0x16')]/0x2+0x1);var startPoint=Tools['GetLFarCenter'](origin,o);if(o==Orientation[_0x30da('0x1ba')]){Tools[_0x30da('0x1bf')](link,startPoint,new Point(startPoint['x'],hrzSegmentL),new Point(endB,hrzSegmentL),new Point(endB,bounds(destination)['top']()));}else{Tools['SetLinkPoints'](link,startPoint,new Point(hrzSegmentL,startPoint['y']),new Point(hrzSegmentL,endB),new Point(bounds(destination)['left'](),endB));}}}}var backLinks=this[_0x30da('0x209')](rootNode['getInLinks']());backLinks[_0x30da('0xde')](LOriginComparer(o));for(var i=0x0;i<backLinks['length'];++i){var link=backLinks[i];var orect=bounds(link[_0x30da('0x8')]);var drect=bounds(link[_0x30da('0xa')]);var startB=Tools[_0x30da('0x1c6')](link['origin'],o);Tools[_0x30da('0x1c8')](link[_0x30da('0x8')],o);var endL=Tools[_0x30da('0x1c8')](link[_0x30da('0xa')],o);var vSegmentB=b-this[_0x30da('0x20c')]()/0x2+this['getFullBreadth']()+(rootNode[_0x30da('0x20f')]()-0x1+i)*flowchartLayout['getLinkPadding']();if(o==Orientation[_0x30da('0x1ba')]){Tools[_0x30da('0x1bf')](link,new Point(startB,orect['bottom']()),new Point(startB,orect['bottom']()+offset/0x2),new Point(vSegmentB,orect[_0x30da('0x1af')]()+offset/0x2),new Point(vSegmentB,endL),new Point(drect[_0x30da('0x6b')](),endL));}else{Tools['SetLinkPoints'](link,new Point(orect['right'](),startB),new Point(orect[_0x30da('0x6b')]()+offset/0x2,startB),new Point(orect[_0x30da('0x6b')]()+offset/0x2,vSegmentB),new Point(endL,vSegmentB),new Point(endL,drect[_0x30da('0x1af')]()));}}if(mergeAdjusted){var maxB;for(var mi=0x0;mi<this[_0x30da('0x21d')][_0x30da('0x16')];mi++){var fcn=this[_0x30da('0x21d')][mi];var bf=Tools[_0x30da('0x1ca')](fcn,o);if(mi==0x0)maxB=bf;else maxB=Math[_0x30da('0xbe')](maxB,bf);}var expB=b+this[_0x30da('0x20d')]/0x2;if(expB<maxB)overflow=Math[_0x30da('0xbe')](overflow,maxB-expB);}if(overflow)this[_0x30da('0x218')]=overflow;this[_0x30da('0x1db')]=maxL;return maxL;}[_0x30da('0x221')](branches){var sortBuckets=new Map();for(var b=0x0;b<branches[_0x30da('0x16')];++b){var branch=branches[b];if(!this[_0x30da('0x21c')]['has'](branch['getIncomingLink']()))continue;var merge=this[_0x30da('0x21c')][_0x30da('0x5a')](branch[_0x30da('0x217')]());if(!sortBuckets[_0x30da('0xa8')](merge))sortBuckets[_0x30da('0xa5')](merge,[]);sortBuckets[_0x30da('0x5a')](merge)[_0x30da('0x14')](branch);}var result=[];sortBuckets[_0x30da('0xd6')](function(value){result=result[_0x30da('0x22f')](value);});for(var b=0x0;b<branches['length'];++b){var branch=branches[b];if(!this[_0x30da('0x21c')][_0x30da('0xa8')](branch[_0x30da('0x217')]()))result[_0x30da('0x14')](branch);}return result;}[_0x30da('0x207')](){if(this['mergeNodes'][_0x30da('0x16')]>0x0)return this[_0x30da('0x21d')][0x0][_0x30da('0x207')]();return null;}[_0x30da('0x208')](){return this['rootNode'][_0x30da('0x208')]();}[_0x30da('0x5d')](block){this['branches'][_0x30da('0x14')](block);super[_0x30da('0x5d')](block);}[_0x30da('0x1ec')](){var nodes=[];for(var m=0x0;m<this['mergeNodes'][_0x30da('0x16')];++m){var node=this['mergeNodes'][m];nodes['push'](node[_0x30da('0x214')]());}return nodes;}[_0x30da('0x20b')](block){var branching=block instanceof FlowchartBranching?block:null;if(branching!=null&&this[_0x30da('0x21d')][_0x30da('0xc')](branching['rootNode']))return![];return!![];}[_0x30da('0x1e6')](mergeNode){if(!this[_0x30da('0x21d')]['includes'](mergeNode))this[_0x30da('0x21d')][_0x30da('0x14')](mergeNode);this[_0x30da('0x21c')][_0x30da('0xa5')](this[_0x30da('0x206')],mergeNode);if(mergeNode[_0x30da('0x1ef')]==null)mergeNode[_0x30da('0x1ef')]=this;if(this[_0x30da('0x206')][_0x30da('0xa')]==mergeNode[_0x30da('0x214')]())this['branches'][_0x30da('0x14')](new EmptyBranch(this[_0x30da('0x20a')],this['currentLink']));}[_0x30da('0x220')](){return this[_0x30da('0x1ea')]['length']==0x2&&this[_0x30da('0x1ea')][0x0]instanceof EmptyBranch&&this['branches'][0x1]instanceof EmptyBranch&&this['mergeNodes'][_0x30da('0x16')]==0x1;}[_0x30da('0x21f')](){if(this[_0x30da('0x21d')][_0x30da('0x16')]!=0x1)return null;var emptyBranches=0x0;var occupiedBranches=0x0;for(var b=0x0;b<this['branches']['length'];++b){var branch=this['branches'][b];if(branch instanceof EmptyBranch)emptyBranches++;else occupiedBranches++;}if(occupiedBranches!=0x1||emptyBranches>0x2||emptyBranches<0x1)return null;var desc=new CenteredBranchingDescriptor();for(var b=0x0;b<this[_0x30da('0x1ea')][_0x30da('0x16')];++b){var branch=this[_0x30da('0x1ea')][b];if(branch instanceof EmptyBranch){if(desc['rightBlock']==null)desc[_0x30da('0x226')]=branch;else desc[_0x30da('0x21a')]=branch;}else{desc['middleBlock']=branch;}}return desc;}[_0x30da('0x22b')](node1,node2,o){if(o==Orientation[_0x30da('0x1ba')]){return Math[_0x30da('0xbd')](bounds(node1['getNode']())[_0x30da('0x71')](),bounds(node2[_0x30da('0x214')]())[_0x30da('0x71')]());}else{return Math[_0x30da('0xbd')](bounds(node1[_0x30da('0x214')]())[_0x30da('0x1ae')](),bounds(node2[_0x30da('0x214')]())[_0x30da('0x1ae')]());}}['getBFurthest'](node1,node2,o){if(o==Orientation[_0x30da('0x1ba')]){return Math['max'](bounds(node1[_0x30da('0x214')]())['right'](),bounds(node2[_0x30da('0x214')]())[_0x30da('0x6b')]());}else{return Math[_0x30da('0xbe')](bounds(node1[_0x30da('0x214')]())[_0x30da('0x1af')](),bounds(node2[_0x30da('0x214')]())[_0x30da('0x1af')]());}}[_0x30da('0x230')](){return this[_0x30da('0x21d')];}}FlowchartBranching[_0x30da('0x1df')]=[];class EmptyBranch extends FlowchartBlock{constructor(layout,link){super(layout);this[_0x30da('0x213')](link);}[_0x30da('0x215')](branchPadding,linkPadding,o){return 0x0;}[_0x30da('0x1d8')](b,l,offset,o){var oc=Tools[_0x30da('0x1bc')](this[_0x30da('0x217')]()[_0x30da('0x8')],o);var dc=Tools[_0x30da('0x1bc')](this[_0x30da('0x217')]()[_0x30da('0xa')],o);if(o==Orientation[_0x30da('0x1ba')]){Tools[_0x30da('0x1bf')](this[_0x30da('0x217')](),oc,newPoint(b,oc['y']),newPoint(b,dc['y']),dc);}else{Tools[_0x30da('0x1bf')](this[_0x30da('0x217')](),oc,newPoint(oc['x'],b),newPoint(dc['x'],b),dc);}this[_0x30da('0x1db')]=Tools[_0x30da('0x224')](this[_0x30da('0x217')]()[_0x30da('0x8')],o);return this[_0x30da('0x1db')];}['getOutLinks'](){return null;}['getInLinks'](){return null;}}function peek(stack){return stack[stack[_0x30da('0x16')]-0x1];}function intDiv$1(numerator,denominator){return(numerator-numerator%denominator)/denominator;}function acceptPath(points,o,d,nodes){var br=bounds(o);var dr=bounds(d);for(var p=0x1;p<points[_0x30da('0x16')]-0x1;p++){var point=points[p];if(br[_0x30da('0x231')](point))return![];if(dr[_0x30da('0x231')](point))return![];}for(var n=0x0;n<nodes[_0x30da('0x16')];n++){var node=nodes[n];if(node==o||node==d)continue;var rect=bounds(node);if(Geometry[_0x30da('0x232')](points,rect))return![];}return!![];}function evalPath(points,o,d,nodes){var penalty=0x0;var br=bounds(o);var dr=bounds(d);for(var p=0x1;p<points['length']-0x1;p++){var point=points[p];if(br[_0x30da('0x231')](point))penalty+=0x2;if(dr[_0x30da('0x231')](point))penalty+=0x2;}for(var n=0x0;n<nodes[_0x30da('0x16')];n++){var node=nodes[n];if(node==o||node==d)continue;var rect=bounds(node);if(Geometry[_0x30da('0x232')](points,rect))penalty+=0x1;}return penalty;}function badPath(link,layout){var p=link[_0x30da('0x1aa')];if(p[_0x30da('0x16')]==0x2&&pathLen(p)>0x2*layout[_0x30da('0x19b')]){if(!acceptPath(p,link[_0x30da('0x8')],link['destination'],layout[_0x30da('0xa4')]['vertices']))return!![];}if(link[_0x30da('0x1c0')]&&pathLen(p)>3.3*layout['nodeDistance']){if(!acceptPath(p,link[_0x30da('0x8')],link['destination'],layout['graph'][_0x30da('0xbb')]))return!![];}if(link[_0x30da('0x1c0')]&&p[_0x30da('0x16')]==0x3){if(!acceptPath(p,link[_0x30da('0x8')],link[_0x30da('0xa')],layout[_0x30da('0xa4')]['vertices']))return!![];}return![];}function processed(link){if(!link[_0x30da('0x1c1')])return![];if(link[_0x30da('0x1aa')]['length']==0x2){var ps=link['points'][0x0];var pe=link['points'][0x1];if(ps['x']!=pe['x']&&ps['y']!=pe['y'])return![];}return!![];}function pathLen(points){var l=0x0;for(var p=0x0;p<points['length']-0x1;p++){var p1=points[p];var p2=points[p+0x1];var dx=Math['abs'](p1['x']-p2['x']);var dy=Math[_0x30da('0x1fb')](p1['y']-p2['y']);l+=dx+dy;}return l;}function longestLink(graph){var maxLen=0x0;var longest=null;for(var l=0x0;l<graph[_0x30da('0x0')]['length'];l++){var link=graph[_0x30da('0x0')][l];var len=pathLen(link[_0x30da('0x1aa')]);if(len>maxLen){maxLen=len;longest=link;}}return longest;}function countCrossings(graph,points,skip){var crossings=0x0;for(var l=0x0;l<graph['edges'][_0x30da('0x16')];l++){var link=graph[_0x30da('0x0')][l];if(link==skip)continue;if(Geometry[_0x30da('0x233')](points,link['points']))crossings++;}return crossings;}function nearIncomingLinks(node,o){var rect=bounds(node);var topIn=[];for(var l=0x0;l<node[_0x30da('0x2')][_0x30da('0x16')];l++){var link=node[_0x30da('0x2')][l];var li=link[_0x30da('0x1aa')][_0x30da('0x16')]-0x1;if(o==Orientation[_0x30da('0x1ba')]){if(link[_0x30da('0x1aa')][li]['y']==rect['y'])topIn[_0x30da('0x14')](link);}else{if(link['points'][li]['x']==rect['x'])topIn[_0x30da('0x14')](link);}}return topIn;}function farOutgoingLinks(node,o){var rect=bounds(node);var bottomOut=[];for(var l=0x0;l<node[_0x30da('0x1')][_0x30da('0x16')];l++){var link=node[_0x30da('0x1')][l];var li=0x0;if(o==Orientation[_0x30da('0x1ba')]){if(link[_0x30da('0x1aa')][li]['y']==rect['bottom']())bottomOut[_0x30da('0x14')](link);}else{if(link['points'][li]['x']==rect['right']())bottomOut[_0x30da('0x14')](link);}}return bottomOut;}function sideIncomingLinks(node,o){var rect=bounds(node);var sideIn=[];for(var l=0x0;l<node[_0x30da('0x2')][_0x30da('0x16')];l++){var link=node['inEdges'][l];var li=link[_0x30da('0x1aa')][_0x30da('0x16')]-0x1;if(o==Orientation[_0x30da('0x1ba')]){if(link[_0x30da('0x1aa')][li]['x']==rect[_0x30da('0x6b')]())sideIn[_0x30da('0x14')](link);}else{if(link['points'][li]['y']==rect[_0x30da('0x1af')]())sideIn[_0x30da('0x14')](link);}}return sideIn;}function startPointsCoincide(links,o){for(var l=0x0;l<links[_0x30da('0x16')];l++){var link=links[l];for(var l2=l+0x1;l2<links['length'];l2++){var link2=links[l2];if(o==Orientation[_0x30da('0x1ba')]){if(link[_0x30da('0x1aa')][0x0]['x']==link2[_0x30da('0x1aa')][0x0]['x'])return!![];}else{if(link['points'][0x0]['y']==link2[_0x30da('0x1aa')][0x0]['y'])return!![];}}}return![];}function endPointsCoincide(links,o){for(var l=0x0;l<links[_0x30da('0x16')];l++){var link=links[l];var li=link[_0x30da('0x1aa')][_0x30da('0x16')]-0x1;for(var l2=l+0x1;l2<links[_0x30da('0x16')];l2++){var link2=links[l2];var l2i=link2[_0x30da('0x1aa')][_0x30da('0x16')]-0x1;if(o==Orientation['Vertical']){if(link[_0x30da('0x1aa')][li]['x']==link2[_0x30da('0x1aa')][l2i]['x'])return!![];}else{if(link[_0x30da('0x1aa')][li]['y']==link2[_0x30da('0x1aa')][l2i]['y'])return!![];}}}return![];}function pullNearInPointsApart(links,o){var n=links[0x0]['destination'];var r=bounds(n);var c=r[_0x30da('0x1be')]();var vert=o==Orientation[_0x30da('0x1ba')];var sv=vert?{'x':c['x'],'y':c['y']-0x14}:{'x':c['x']-0x14,'y':c['y']};var ev={'x':c['x'],'y':c['y']};links[_0x30da('0xde')](function(l1,l2){var s1=bounds(l1[_0x30da('0x8')])['center']();var e1=bounds(l1[_0x30da('0xa')])[_0x30da('0x1be')]();var s2=bounds(l2[_0x30da('0x8')])[_0x30da('0x1be')]();var e2=bounds(l2[_0x30da('0xa')])[_0x30da('0x1be')]();var a=Geometry[_0x30da('0x234')];var a1=a(sv,ev,s1,e1);var a2=a(sv,ev,s2,e2);return vert?a2-a1:a1-a2;});for(var i=0x0;i<links['length'];++i){var link=links[i];link['origin'];var dest=link[_0x30da('0xa')];var endB=(i+0x1)*Tools[_0x30da('0x1c5')](dest,o)/(links[_0x30da('0x16')]+0x1)+Tools[_0x30da('0x1c9')](dest,o);i<intDiv$1(links[_0x30da('0x16')],0x2)?i+0x1:links[_0x30da('0x16')]-i;var li=link['points'][_0x30da('0x16')]-0x1;var ni=li-0x1;if(vert)link[_0x30da('0x1aa')][li]['x']=link[_0x30da('0x1aa')][ni]['x']=endB;else link[_0x30da('0x1aa')][li]['y']=link[_0x30da('0x1aa')][ni]['y']=endB;}}function pullFarOutPointsApart(links,o){var n=links[0x0]['origin'];var r=bounds(n);var c=r['center']();var vert=o==Orientation['Vertical'];var sv={'x':c['x'],'y':c['y']};var ev=vert?{'x':c['x'],'y':c['y']+0x14}:{'x':c['x']+0x14,'y':c['y']};links[_0x30da('0xde')](function(l1,l2){var s1=bounds(l1[_0x30da('0x8')])[_0x30da('0x1be')]();var e1=bounds(l1[_0x30da('0xa')])['center']();var s2=bounds(l2[_0x30da('0x8')])['center']();var e2=bounds(l2[_0x30da('0xa')])[_0x30da('0x1be')]();var a=Geometry['calcAngle'];var a1=a(sv,ev,s1,e1);var a2=a(sv,ev,s2,e2);return vert?a1-a2:a2-a1;});for(var i=0x0;i<links[_0x30da('0x16')];++i){var link=links[i];var origin=link['origin'];link['destination'];var endB=(i+0x1)*Tools[_0x30da('0x1c5')](origin,o)/(links[_0x30da('0x16')]+0x1)+Tools['GetBNear'](origin,o);i<intDiv$1(links[_0x30da('0x16')],0x2)?i+0x1:links['length']-i;var li=0x0;var ni=0x1;if(vert)link[_0x30da('0x1aa')][li]['x']=link['points'][ni]['x']=endB;else link['points'][li]['y']=link['points'][ni]['y']=endB;}}function pullSideInPointsApart(links,o){var n=links[0x0]['destination'];var r=bounds(n);var c=r[_0x30da('0x1be')]();var vert=o==Orientation[_0x30da('0x1ba')];var sv=vert?{'x':c['x']-0x14,'y':c['y']}:{'x':c['x'],'y':c['y']-0x14};var ev={'x':c['x'],'y':c['y']};links[_0x30da('0xde')](function(l1,l2){var s1=bounds(l1[_0x30da('0x8')])[_0x30da('0x1be')]();var e1=l1[_0x30da('0x1aa')][l1[_0x30da('0x1aa')][_0x30da('0x16')]-0x1];var s2=bounds(l2[_0x30da('0x8')])[_0x30da('0x1be')]();var e2=l2[_0x30da('0x1aa')][l2[_0x30da('0x1aa')][_0x30da('0x16')]-0x1];var a=Geometry[_0x30da('0x234')];var a1=a(sv,ev,s1,e1);var a2=a(sv,ev,s2,e2);return vert?a2-a1:a1-a2;});for(var i=0x0;i<links[_0x30da('0x16')];++i){var link=links[i];link[_0x30da('0x8')];var dest=link[_0x30da('0xa')];var endL=(i+0x1)*Tools['GetLength'](dest,o)/(links[_0x30da('0x16')]+0x1)+Tools['GetLNear'](dest,o);i<intDiv$1(links[_0x30da('0x16')],0x2)?i+0x1:links[_0x30da('0x16')]-i;var li=link['points'][_0x30da('0x16')]-0x1;var ni=li-0x1;if(vert)link[_0x30da('0x1aa')][li]['y']=link[_0x30da('0x1aa')][ni]['y']=endL;else link[_0x30da('0x1aa')][li]['x']=link[_0x30da('0x1aa')][ni]['x']=endL;}}function compareX(s1,s2){var p1=s1[_0x30da('0x1aa')][s1[_0x30da('0x1a')]];var p2=s2[_0x30da('0x1aa')][s2['index']];if(p1['x']<p2['x'])return-0x1;if(p1['x']>p2['x'])return 0x1;return 0x0;}function compareY(s1,s2){var p1=s1[_0x30da('0x1aa')][s1[_0x30da('0x1a')]];var p2=s2[_0x30da('0x1aa')][s2[_0x30da('0x1a')]];if(p1['y']<p2['y'])return-0x1;if(p1['y']>p2['y'])return 0x1;return 0x0;}function compareV(s1,s2){var l1=s1['points'][_0x30da('0x16')]-0x1;var l2=s2[_0x30da('0x1aa')]['length']-0x1;var p1=s1[_0x30da('0x1a')]>0x0?s1[_0x30da('0x1aa')][s1['index']-0x1]:s1[_0x30da('0x1aa')][0x0];var p2=s2['index']>0x0?s2[_0x30da('0x1aa')][s2[_0x30da('0x1a')]-0x1]:s2[_0x30da('0x1aa')][0x0];var q1=s1[_0x30da('0x1aa')][s1[_0x30da('0x1a')]];var q2=s2[_0x30da('0x1aa')][s2[_0x30da('0x1a')]];var r1=s1[_0x30da('0x1a')]<l1?s1[_0x30da('0x1aa')][s1[_0x30da('0x1a')]+0x1]:s1[_0x30da('0x1aa')][l1];var r2=s2['index']<l2?s2[_0x30da('0x1aa')][s2[_0x30da('0x1a')]+0x1]:s2[_0x30da('0x1aa')][l2];var up1=q1['y']>r1['y'];var up2=q2['y']>r2['y'];var leftIn1=p1['x']>q1['x'];var leftIn2=p2['x']>q2['x'];if(leftIn1&&leftIn2){if(up1&&up2){if(q1['y']<q2['y'])return 0x1;if(q1['y']>q2['y'])return-0x1;}if(!up1&&!up2){if(q1['y']<q2['y'])return-0x1;if(q1['y']>q2['y'])return 0x1;}}if(up1&&up2){if(q1['y']<q2['y'])return-0x1;if(q1['y']>q2['y'])return 0x1;}if(!up1&&!up2){if(q1['y']<q2['y'])return 0x1;if(q1['y']>q2['y'])return-0x1;}if(up1&&!up2)return-0x1;if(!up1&&up2)return 0x1;if(p1['x']<p2['x'])return-0x1;if(p1['x']>p2['x'])return 0x1;return 0x0;}function compareH(s1,s2){var p1=s1['points'][0x0];var p2=s2[_0x30da('0x1aa')][0x0];if(p1['y']<p2['y'])return-0x1;if(p1['y']>p2['y'])return 0x1;return 0x0;}function coord(segment,horizontal){var point=segment[_0x30da('0x1aa')][segment[_0x30da('0x1a')]];return horizontal?point['y']:point['x'];}function getSplitGroups(segments,horizontal){var graph=new Graph();var vertices=[];for(var i=0x0;i<segments[_0x30da('0x16')];i++){var segment=segments[i];var vertex=graph[_0x30da('0xe2')](null,segment);vertices[_0x30da('0x14')](vertex);}for(var i=0x0;i<segments[_0x30da('0x16')]-0x1;i++){for(var j=i+0x1;j<segments[_0x30da('0x16')];j++){var i1=horizontal?segments[i][_0x30da('0x235')]():segments[i][_0x30da('0x236')]();var i2=horizontal?segments[j]['xint']():segments[j][_0x30da('0x236')]();if(intervalsIntersect(i1,i2))graph[_0x30da('0xe0')](vertices[i],vertices[j]);}}var components=graph[_0x30da('0xf3')]();var splitGroups=[];for(var i=0x0;i<components[_0x30da('0x16')];i++){var component=components[i];var group=[];for(var v=0x0;v<component[_0x30da('0xbb')][_0x30da('0x16')];v++){var vertex=component[_0x30da('0xbb')][v];group['push'](vertex[_0x30da('0x6')]);}splitGroups[_0x30da('0x14')](group);}return splitGroups;}function intervalsIntersect(i1,i2){if(i1[0x0]>=i2[0x1])return![];if(i2[0x0]>=i1[0x1])return![];return!![];}function originNodesArranged(links){for(var l=0x0;l<links['length'];++l){var link=links[l];if(!link['origin'][_0x30da('0x237')])return![];}return!![];}function centerOfOriginNodes(links,o){var rect=Rect[_0x30da('0x5c')];for(var l=0x0;l<links[_0x30da('0x16')];++l){var link=links[l];var or=bounds(link[_0x30da('0x8')]);rect=rect['isEmpty']()?or:or['union'](rect);}return o==Orientation[_0x30da('0x1ba')]?rect['x']+rect['width']/0x2:rect['y']+rect[_0x30da('0xe4')]/0x2;}function farOfOriginNodes(links,orientataion){var rect=Rect[_0x30da('0x5c')];for(var l=0x0;l<links[_0x30da('0x16')];++l){var link=links[l];var or=bounds(link[_0x30da('0x8')]);rect=rect[_0x30da('0x238')]()?or:or['union'](rect);}return orientataion==Orientation[_0x30da('0x1ba')]?rect[_0x30da('0x1af')]():rect[_0x30da('0x6b')]();}class FractalLayout extends Layout{constructor(){super();this[_0x30da('0x27')]=null;this['multipleGraphsPlacement']=MultipleGraphsPlacement[_0x30da('0x19f')];}get['setsLinkEndPoints'](){return![];}get[_0x30da('0x195')](){return![];}[_0x30da('0x1d8')](graph){var root=this['root']&&this[_0x30da('0x27')][_0x30da('0x239')]&&graph[_0x30da('0xbb')][_0x30da('0xc')](this[_0x30da('0x27')]['vertex'])?this[_0x30da('0x27')][_0x30da('0x239')]:graph[_0x30da('0xbb')][0x0];root['isRoot']=!![];this[_0x30da('0x23a')]=new Map();this['measureCircles'](root);var rootCircle=this[_0x30da('0x23a')][_0x30da('0x5a')](root);this[_0x30da('0x23b')](rootCircle,{'x':0x0,'y':0x0},0x0);}['measureCircles'](node){var w=node[_0x30da('0xe3')];var h=node[_0x30da('0xe4')];var branchCircle={};var radius=Math[_0x30da('0x23c')](w*w+h*h)/0x2;branchCircle[_0x30da('0x1d0')]=node;this['branchCircles'][_0x30da('0xa5')](node,branchCircle);var childCircles=[];var radTotal=0x0;node[_0x30da('0x13')]()[_0x30da('0xd6')](function(child){if(this['branchCircles']['has'](child))return;var childCircle=this[_0x30da('0x23d')](child);childCircles['push'](childCircle);radTotal+=childCircle['radius'];},this);childCircles[_0x30da('0xde')](compareRadius);if(!node[_0x30da('0x23e')])radTotal=radTotal*0x48/0x47;var pointsInCircle=[{'x':-w/0x2,'y':-h/0x2},{'x':w/0x2,'y':-h/0x2},{'x':w/0x2,'y':h/0x2},{'x':-w/0x2,'y':h/0x2}];var currentAngle=0x0;if(!node['isRoot'])currentAngle+=Math['PI']/0x48;var totalSweep=0x2*Math['PI'];for(var i=0x0;i<childCircles['length'];++i){var childCircle=childCircles[i];var sweepAngle=totalSweep*childCircle[_0x30da('0x23f')]/radTotal;if(sweepAngle>Math['PI']){sweepAngle=Math['PI'];totalSweep=Math['PI'];radTotal-=childCircle['radius'];}childCircle['sweepAngle']=sweepAngle;}for(var i=0x0;i<childCircles[_0x30da('0x16')];++i){var childCircle=childCircles[i];var halfSectorAngle=childCircle[_0x30da('0x240')]/0x2;currentAngle+=halfSectorAngle;childCircle[_0x30da('0x241')]=currentAngle;currentAngle+=halfSectorAngle;var centerDelta=Math[_0x30da('0xbe')](radius+childCircle[_0x30da('0x23f')],childCircle[_0x30da('0x23f')]/Math[_0x30da('0x242')](halfSectorAngle));childCircle[_0x30da('0x243')]=centerDelta;var farPointDelta=Math[_0x30da('0xbe')](radius+0x2*childCircle[_0x30da('0x23f')],childCircle[_0x30da('0x23f')]+childCircle[_0x30da('0x23f')]/Math['sin'](halfSectorAngle));var farPoint={'x':farPointDelta*Math['cos'](childCircle[_0x30da('0x241')]),'y':farPointDelta*Math[_0x30da('0x242')](childCircle[_0x30da('0x241')])};pointsInCircle[_0x30da('0x14')](farPoint);}if(childCircles[_0x30da('0x16')]>0x0){var minCircle=Circle[_0x30da('0x244')](pointsInCircle);branchCircle['radius']=minCircle['r'];branchCircle[_0x30da('0x245')]=minCircle['x'];branchCircle['centerY']=minCircle['y'];}else{branchCircle[_0x30da('0x23f')]=radius;branchCircle[_0x30da('0x245')]=branchCircle[_0x30da('0x246')]=0x0;}branchCircle[_0x30da('0x247')]=childCircles;return branchCircle;}[_0x30da('0x23b')](circle,center,angle){var parentLinkAngle=angle;if(!circle[_0x30da('0x1d0')][_0x30da('0x23e')])parentLinkAngle+=Math['PI']-circle['angle'];var nodePos={'x':center['x']-circle[_0x30da('0x245')],'y':center['y']-circle['centerY']};circle[_0x30da('0x247')][_0x30da('0xd6')](function(childCircle){var childCirclePos={'x':nodePos['x']+childCircle[_0x30da('0x243')]*Math[_0x30da('0x248')](childCircle[_0x30da('0x241')]),'y':nodePos['y']+childCircle[_0x30da('0x243')]*Math['sin'](childCircle[_0x30da('0x241')])};childCirclePos=Geometry['rotatePoint'](childCirclePos,center,parentLinkAngle);this['arrangeCircles'](childCircle,childCirclePos,parentLinkAngle);},this);nodePos=Geometry[_0x30da('0x249')](nodePos,center,parentLinkAngle);circle[_0x30da('0x1d0')]['x']=nodePos['x'];circle[_0x30da('0x1d0')]['y']=nodePos['y'];}[_0x30da('0x1b0')](){return this[_0x30da('0x1b1')][_0x30da('0x1b2')];}get[_0x30da('0x18c')](){return this[_0x30da('0x18f')];}set['anchoring'](value){this[_0x30da('0x18f')]=value;}get[_0x30da('0x18d')](){return this[_0x30da('0x190')];}set[_0x30da('0x18d')](value){this[_0x30da('0x190')]=value;}get[_0x30da('0x27')](){return this[_0x30da('0x24a')];}set[_0x30da('0x27')](value){this[_0x30da('0x24a')]=value;}get['multipleGraphsPlacement'](){return this[_0x30da('0x192')];}set['multipleGraphsPlacement'](value){this[_0x30da('0x192')]=value;}}function compareRadius(e1,e2){var r1=e1[_0x30da('0x23f')];var r2=e2[_0x30da('0x23f')];if(r1<r2)return 0x1;if(r1>r2)return-0x1;return 0x0;}class LayeredLayout extends Layout{constructor(){super();this['nodeDistance']=0x14;this[_0x30da('0x24b')]=0x19;this[_0x30da('0x94')]=LayoutDirection[_0x30da('0x1a8')];this[_0x30da('0x24c')]=0x1;this[_0x30da('0x191')]=MultipleGraphsPlacement[_0x30da('0x19f')];this[_0x30da('0x24d')]=![];}get['setsLinkEndPoints'](){return![];}['arrange'](graph){graph['setItemIndices']();this[_0x30da('0xa4')]=graph;var reversedEdges=graph[_0x30da('0x147')]();for(var n=0x0;n<graph[_0x30da('0xbb')][_0x30da('0x16')];n++){var node=graph[_0x30da('0xbb')][n];node[_0x30da('0x4')]=-0x1;node[_0x30da('0x24e')]=0x0;node['dBaryCenter']=0x0;node['uLinkCount']=0x0;node[_0x30da('0x24f')]=0x0;node[_0x30da('0x250')]=0x0;node[_0x30da('0x251')]=0x0;node[_0x30da('0x252')]=0x0;node[_0x30da('0x253')]=![];}for(var l=0x0;l<graph['edges'][_0x30da('0x16')];l++){var link=graph[_0x30da('0x0')][l];link[_0x30da('0x254')]=0x0;}var current=[];var layering=new Map();graph[_0x30da('0xbb')][_0x30da('0xd6')](function(node){if(node[_0x30da('0x2')][_0x30da('0x16')]==0x0){layering['set'](node,0x0);current[_0x30da('0x14')](node);}});while(current[_0x30da('0x16')]>0x0){var next=current[_0x30da('0xff')]();next[_0x30da('0x1')][_0x30da('0xd6')](function(link){var dest=link[_0x30da('0xa')];if(!layering[_0x30da('0xa8')](dest))layering[_0x30da('0xa5')](dest,layering[_0x30da('0x5a')](next)+0x1);else layering[_0x30da('0xa5')](dest,Math[_0x30da('0xbe')](layering[_0x30da('0x5a')](dest),layering[_0x30da('0x5a')](next)+0x1));if(!current[_0x30da('0xc')](dest))current['push'](dest);});}var layerCount=0x0;layering[_0x30da('0xd6')](function(nodeLayer){layerCount=Math['max'](layerCount,nodeLayer);});var sortedNodes=[];sortedNodes['push'](...layering[_0x30da('0xaf')]());sortedNodes['sort'](function(o1,o2){var o1layer=layering[_0x30da('0x5a')](o1);var o2layer=layering[_0x30da('0x5a')](o2);if(o1layer<o2layer)return 0x1;if(o1layer>o2layer)return-0x1;return o1[_0x30da('0x1a')]-o2[_0x30da('0x1a')];});for(var n=0x0;n<sortedNodes[_0x30da('0x16')];++n){var node=sortedNodes[n];var minLayer=Number[_0x30da('0xee')];if(node['outEdges'][_0x30da('0x16')]==0x0)continue;for(var l=0x0;l<node[_0x30da('0x1')][_0x30da('0x16')];++l){var link=node[_0x30da('0x1')][l];minLayer=Math[_0x30da('0xbd')](minLayer,layering[_0x30da('0x5a')](link[_0x30da('0xa')]));}if(minLayer>0x1)layering['set'](node,minLayer-0x1);}this[_0x30da('0x255')]=[];for(var i=0x0;i<layerCount+0x1;i++)this[_0x30da('0x255')][_0x30da('0x14')]([]);layering[_0x30da('0xd6')](function(layer,node){node[_0x30da('0x4')]=layer;this[_0x30da('0x255')][layer][_0x30da('0x14')](node);},this);for(var l=0x0;l<this[_0x30da('0x255')][_0x30da('0x16')];l++){var layer=this[_0x30da('0x255')][l];layer[_0x30da('0xde')](compareByIndex);for(var i=0x0;i<layer[_0x30da('0x16')];i++)layer[i]['gridPosition']=i;}this[_0x30da('0x256')]();this[_0x30da('0x257')]();this[_0x30da('0x258')]();this[_0x30da('0x259')]();this['assignCoordinates']();this['dedummify']();reversedEdges[_0x30da('0xd6')](function(e){if(e[_0x30da('0x1aa')])e[_0x30da('0x1aa')][_0x30da('0x21')]();});}['setMinDist'](m,n,minDist){var l=m[_0x30da('0x4')];var i=m[_0x30da('0x25a')];this[_0x30da('0x25b')][l][i]=minDist;}[_0x30da('0x25c')](m,n){var l=m[_0x30da('0x4')];var i1=m['indexInLayer'];var i2=n[_0x30da('0x25a')];var min=Math['min'](i1,i2);var max=Math[_0x30da('0xbe')](i1,i2);var dist=0x0;for(var i=min;i<max;++i)dist+=this[_0x30da('0x25b')][l][i];return dist;}[_0x30da('0x25d')](){var nodeLeftClassRef={'value':null};var result=this[_0x30da('0x25e')](nodeLeftClassRef,0x1);this[_0x30da('0x25f')]=nodeLeftClassRef[_0x30da('0xef')];return result;}[_0x30da('0x260')](){var nodeRightClassRef={'value':null};var result=this[_0x30da('0x25e')](nodeRightClassRef,-0x1);this[_0x30da('0x261')]=nodeRightClassRef[_0x30da('0xef')];return result;}[_0x30da('0x25e')](nodeClassRef,d){var nodeClass=nodeClassRef[_0x30da('0xef')]=new Map();var currentClass=0x0;for(var l=0x0;l<this[_0x30da('0x255')][_0x30da('0x16')];++l){currentClass=l;var layer=this[_0x30da('0x255')][l];for(var n=d==0x1?0x0:layer['length']-0x1;0x0<=n&&n<layer[_0x30da('0x16')];n+=d){var node=layer[n];if(!nodeClass['has'](node)){nodeClass['set'](node,currentClass);if(node[_0x30da('0x253')]){this[_0x30da('0x262')](node)['forEach'](function(vnode){nodeClass[_0x30da('0xa5')](vnode,currentClass);});}}else{currentClass=nodeClass[_0x30da('0x5a')](node);}}}var classes=[];for(var i=0x0;i<this[_0x30da('0x255')][_0x30da('0x16')];i++)classes[_0x30da('0x14')](null);nodeClass[_0x30da('0xd6')](function(classIndex,node){if(classes[classIndex]===null)classes[classIndex]=[];classes[classIndex][_0x30da('0x14')](node);});return classes;}[_0x30da('0x263')](leftClasses){var leftPos=new Map();for(var c=0x0;c<this['layers'][_0x30da('0x16')];++c){var classNodes=leftClasses[c];if(classNodes==null)continue;for(var n=0x0;n<classNodes['length'];n++){var node=classNodes[n];if(!leftPos[_0x30da('0xa8')](node))this[_0x30da('0x264')](node,leftPos,c);}var d=Number[_0x30da('0x265')];for(var n=0x0;n<classNodes[_0x30da('0x16')];n++){var node=classNodes[n];var rightSibling=this[_0x30da('0x266')](node);if(rightSibling!=null&&this['nodeLeftClass']['get'](rightSibling)!=c)d=Math[_0x30da('0xbd')](d,leftPos[_0x30da('0x5a')](rightSibling)-leftPos[_0x30da('0x5a')](node)-this[_0x30da('0x25c')](node,rightSibling));}if(d==Number[_0x30da('0x265')]){var D=[];for(var n=0x0;n<classNodes[_0x30da('0x16')];n++){var node=classNodes[n];var neighbors=[];neighbors[_0x30da('0x14')](...this[_0x30da('0x267')][_0x30da('0x5a')](node));neighbors[_0x30da('0x14')](...this['downNodes']['get'](node));for(var e=0x0;e<neighbors[_0x30da('0x16')];e++){var neighbor=neighbors[e];if(this[_0x30da('0x25f')][_0x30da('0x5a')](neighbor)<c)D[_0x30da('0x14')]({'diff':leftPos[_0x30da('0x5a')](neighbor)-leftPos[_0x30da('0x5a')](node),'n':neighbor});}}D[_0x30da('0xde')](function(a,b){var s=a[_0x30da('0x268')]-b[_0x30da('0x268')];if(s==0x0)s=compareByIndex(a['n'],b['n']);return s;});if(D[_0x30da('0x16')]==0x0)d=0x0;else if(D[_0x30da('0x16')]%0x2==0x1)d=D[intDiv(D[_0x30da('0x16')],0x2)][_0x30da('0x268')];else d=(D[intDiv(D[_0x30da('0x16')],0x2)-0x1][_0x30da('0x268')]+D[intDiv(D[_0x30da('0x16')],0x2)][_0x30da('0x268')])/0x2;}for(var n=0x0;n<classNodes['length'];n++){var node=classNodes[n];leftPos['set'](node,leftPos[_0x30da('0x5a')](node)+d);}}return leftPos;}[_0x30da('0x269')](pos){for(var l=0x0;l<this[_0x30da('0x255')][_0x30da('0x16')];++l){var s='';s+=_0x30da('0x26a')+l+':\x20';var layer=this['layers'][l];for(var n=0x0;n<layer[_0x30da('0x16')];++n)s+=pos['get'](layer[n])+'\x20';console['log'](s);}}['placeRightToLeft'](rightClasses){var rightPos=new Map();for(var c=0x0;c<this['layers'][_0x30da('0x16')];++c){var classNodes=rightClasses[c];if(classNodes==null)continue;for(var n=0x0;n<classNodes[_0x30da('0x16')];n++){var node=classNodes[n];if(!rightPos[_0x30da('0xa8')](node))this['placeRight'](node,rightPos,c);}var d=Number[_0x30da('0x26b')];for(var n=0x0;n<classNodes[_0x30da('0x16')];n++){var node=classNodes[n];var leftSibling=this[_0x30da('0x26c')](node);if(leftSibling!=null&&this[_0x30da('0x261')]['get'](leftSibling)!=c)d=Math[_0x30da('0xbe')](d,rightPos['get'](leftSibling)-rightPos['get'](node)+this[_0x30da('0x25c')](leftSibling,node));}if(d==Number[_0x30da('0x26b')]){var D=[];for(var n=0x0;n<classNodes[_0x30da('0x16')];n++){var node=classNodes[n];var neighbors=[];neighbors[_0x30da('0x14')](...this['upNodes'][_0x30da('0x5a')](node));neighbors['push'](...this[_0x30da('0x26d')]['get'](node));for(var e=0x0;e<neighbors[_0x30da('0x16')];e++){var neighbor=neighbors[e];if(this[_0x30da('0x261')][_0x30da('0x5a')](neighbor)<c)D[_0x30da('0x14')]({'diff':rightPos[_0x30da('0x5a')](node)-rightPos[_0x30da('0x5a')](neighbor),'n':neighbor});}}D['sort'](function(a,b){var s=a[_0x30da('0x268')]-b[_0x30da('0x268')];if(s==0x0)s=compareByIndex(a['n'],b['n']);return s;});if(D[_0x30da('0x16')]==0x0)d=0x0;else if(D['length']%0x2==0x1)d=D[intDiv(D['length'],0x2)][_0x30da('0x268')];else d=(D[intDiv(D[_0x30da('0x16')],0x2)-0x1][_0x30da('0x268')]+D[intDiv(D[_0x30da('0x16')],0x2)]['diff'])/0x2;}for(var n=0x0;n<classNodes[_0x30da('0x16')];n++){var node=classNodes[n];rightPos[_0x30da('0xa5')](node,rightPos[_0x30da('0x5a')](node)+d);}}return rightPos;}[_0x30da('0x26e')](){for(var l=0x0;l<this[_0x30da('0x255')]['length'];++l){var layer=this[_0x30da('0x255')][l];layer[_0x30da('0xde')](compareByGridPos);}this['minDistances']=[];for(var l=0x0;l<this[_0x30da('0x255')][_0x30da('0x16')];++l){var layer=this[_0x30da('0x255')][l];this[_0x30da('0x25b')][l]=[];for(var n=0x0;n<layer['length'];++n){var node=layer[n];node[_0x30da('0x25a')]=n;this['minDistances'][l][n]=this[_0x30da('0x19b')];if(n<layer[_0x30da('0x16')]-0x1){if(this['direction']%0x2==0x0)this[_0x30da('0x25b')][l][n]+=(node[_0x30da('0xe3')]+layer[n+0x1]['width'])/0x2;else this[_0x30da('0x25b')][l][n]+=(node[_0x30da('0xe4')]+layer[n+0x1]['height'])/0x2;}}}this[_0x30da('0x26d')]=new Map();this['upNodes']=new Map();this[_0x30da('0xa4')][_0x30da('0xbb')][_0x30da('0xd6')](function(node){this[_0x30da('0x26d')]['set'](node,[]);this[_0x30da('0x267')][_0x30da('0xa5')](node,[]);},this);this[_0x30da('0xa4')][_0x30da('0x0')][_0x30da('0xd6')](function(link){var origin=link['origin'];var dest=link[_0x30da('0xa')];var down=null,up=null;if(origin[_0x30da('0x4')]>dest['layer']){down=link[_0x30da('0x8')];up=link[_0x30da('0xa')];}else{up=link[_0x30da('0x8')];down=link[_0x30da('0xa')];}this[_0x30da('0x26d')][_0x30da('0x5a')](up)[_0x30da('0x14')](down);this[_0x30da('0x267')][_0x30da('0x5a')](down)[_0x30da('0x14')](up);},this);this[_0x30da('0x26d')][_0x30da('0xd6')](function(list){list[_0x30da('0xde')](compareByGridPos);});this[_0x30da('0x267')][_0x30da('0xd6')](function(list){list[_0x30da('0xde')](compareByGridPos);});for(var l=0x0;l<this[_0x30da('0x255')][_0x30da('0x16')]-0x1;++l){var layer=this[_0x30da('0x255')][l];for(var u=0x0;u<layer[_0x30da('0x16')]-0x1;u++){var currNode=layer[u];if(!currNode[_0x30da('0x253')])continue;var currDown=this['downNodes']['get'](currNode)[0x0];if(!currDown[_0x30da('0x253')])continue;for(var n=u+0x1;n<layer[_0x30da('0x16')];++n){var node=layer[n];if(!node[_0x30da('0x253')])continue;var downNode=this[_0x30da('0x26d')][_0x30da('0x5a')](node)[0x0];if(!downNode[_0x30da('0x253')])continue;if(currDown[_0x30da('0x252')]>downNode['gridPosition']){var pos=currDown[_0x30da('0x252')];currDown[_0x30da('0x252')]=downNode[_0x30da('0x252')];downNode[_0x30da('0x252')]=pos;var i1=currDown['indexInLayer'];var i2=downNode[_0x30da('0x25a')];this[_0x30da('0x255')][l+0x1][i1]=downNode;this['layers'][l+0x1][i2]=currDown;currDown[_0x30da('0x25a')]=i2;downNode['indexInLayer']=i1;}}}}var leftClasses=this[_0x30da('0x25d')]();var rightClasses=this[_0x30da('0x260')]();var leftPos=this['placeLeftToRight'](leftClasses);var rightPos=this[_0x30da('0x26f')](rightClasses);var x=new Map();this[_0x30da('0xa4')][_0x30da('0xbb')][_0x30da('0xd6')](function(node){x[_0x30da('0xa5')](node,(leftPos[_0x30da('0x5a')](node)+rightPos[_0x30da('0x5a')](node))/0x2);});var order=new Map();var placed=new Map();for(var l=0x0;l<this['layers'][_0x30da('0x16')];++l){var layer=this[_0x30da('0x255')][l];var sequenceStart=-0x1;for(var n=0x0;n<layer[_0x30da('0x16')];++n){var node=layer[n];order[_0x30da('0xa5')](node,0x0);placed[_0x30da('0xa5')](node,![]);if(node[_0x30da('0x253')]){if(sequenceStart==-0x1)sequenceStart=n;else if(sequenceStart==n-0x1)sequenceStart=n;else{order[_0x30da('0xa5')](layer[sequenceStart],0x0);var sdx=x[_0x30da('0x5a')](node)-x[_0x30da('0x5a')](layer[sequenceStart]);if(Math['abs'](sdx-this[_0x30da('0x25c')](layer[sequenceStart],node))<0.0001)placed[_0x30da('0xa5')](layer[sequenceStart],!![]);else placed[_0x30da('0xa5')](layer[sequenceStart],![]);sequenceStart=n;}}}}var directions=[0x1,-0x1];directions[_0x30da('0xd6')](function(d){var start=d==0x1?0x0:this['layers'][_0x30da('0x16')]-0x1;d==0x1?this[_0x30da('0x255')][_0x30da('0x16')]-0x1:0x0;for(var l=start;0x0<=l&&l<this[_0x30da('0x255')][_0x30da('0x16')];l+=d){var layer=this['layers'][l];var virtualStartIndex=leftMostVirtualNode(layer);var virtualStart=null;var sequence=null;if(virtualStartIndex!=-0x1){virtualStart=layer[virtualStartIndex];sequence=[];for(var i=0x0;i<virtualStartIndex;i++)sequence[_0x30da('0x14')](layer[i]);}else{virtualStart=null;sequence=layer;}if(sequence[_0x30da('0x16')]>0x0){this['placeSequence'](x,null,virtualStart,d,sequence);for(var i=0x0;i<sequence[_0x30da('0x16')]-0x1;++i)this[_0x30da('0x270')](sequence[i],sequence[i+0x1],x['get'](sequence[i+0x1])-x['get'](sequence[i]));if(virtualStart!=null)this[_0x30da('0x270')](sequence[sequence['length']-0x1],virtualStart,x['get'](virtualStart)-x[_0x30da('0x5a')](sequence[sequence['length']-0x1]));}while(virtualStart!=null){var virtualEnd=nextVirtualNode(layer,virtualStart);if(virtualEnd==null){virtualStartIndex=virtualStart[_0x30da('0x25a')];sequence=[];for(var i=virtualStartIndex+0x1;i<layer[_0x30da('0x16')];i++)sequence[_0x30da('0x14')](layer[i]);if(sequence[_0x30da('0x16')]>0x0){this[_0x30da('0x271')](x,virtualStart,null,d,sequence);for(var i=0x0;i<sequence[_0x30da('0x16')]-0x1;++i)this[_0x30da('0x270')](sequence[i],sequence[i+0x1],x[_0x30da('0x5a')](sequence[i+0x1])-x[_0x30da('0x5a')](sequence[i]));this['setMinDist'](virtualStart,sequence[0x0],x[_0x30da('0x5a')](sequence[0x0])-x['get'](virtualStart));}}else if(order[_0x30da('0x5a')](virtualStart)==d){virtualStartIndex=virtualStart[_0x30da('0x25a')];var virtualEndIndex=virtualEnd[_0x30da('0x25a')];sequence=[];for(var i=virtualStartIndex+0x1;i<virtualEndIndex;i++)sequence[_0x30da('0x14')](layer[i]);if(sequence['length']>0x0)this[_0x30da('0x271')](x,virtualStart,virtualEnd,d,sequence);placed[_0x30da('0xa5')](virtualStart,!![]);}virtualStart=virtualEnd;}this['adjustDirections'](l,d,order,placed);}},this);var depth=this[_0x30da('0x18e')];for(var i=this[_0x30da('0x94')]<0x2?0x0:this['layers'][_0x30da('0x16')]-0x1;this[_0x30da('0x94')]<0x2?i<this[_0x30da('0x255')]['length']:i>=0x0;i+=this[_0x30da('0x94')]<0x2?0x1:-0x1){var layer=this[_0x30da('0x255')][i];var height=Number['MIN_VALUE'];for(var n=0x0;n<layer[_0x30da('0x16')];++n){var node=layer[n];if(this[_0x30da('0x94')]%0x2==0x0)height=Math[_0x30da('0xbe')](height,node[_0x30da('0xe4')]);else height=Math[_0x30da('0xbe')](height,node['width']);}for(var n=0x0;n<layer['length'];++n){var node=layer[n];node[_0x30da('0x252')];if(this[_0x30da('0x94')]%0x2==0x0){node['x']=x[_0x30da('0x5a')](node);node['y']=depth+height/0x2;}else{node['x']=depth+height/0x2;node['y']=x['get'](node);}}depth+=this[_0x30da('0x24b')]+height;}}[_0x30da('0x272')](l,d,order,placed){if(l+d<0x0||l+d>=this[_0x30da('0x255')][_0x30da('0x16')])return;var prevBridge=null,prevBridgeTarget=null;var layer=this[_0x30da('0x255')][l+d];for(var n=0x0;n<layer[_0x30da('0x16')];++n){var nextBridge=layer[n];if(nextBridge[_0x30da('0x253')]){var nextBridgeTarget=this[_0x30da('0x273')](nextBridge,l);if(nextBridgeTarget[_0x30da('0x253')]){if(prevBridge!=null){var p=placed[_0x30da('0x5a')](prevBridgeTarget);var clayer=this[_0x30da('0x255')][l];var i1=prevBridgeTarget[_0x30da('0x25a')];var i2=nextBridgeTarget[_0x30da('0x25a')];for(var i=i1+0x1;i<i2;++i){if(clayer[i][_0x30da('0x253')])p=p&&placed[_0x30da('0x5a')](clayer[i]);}if(p){order[_0x30da('0xa5')](prevBridge,d);var j1=prevBridge['indexInLayer'];var j2=nextBridge['indexInLayer'];for(var j=j1+0x1;j<j2;++j){if(layer[j][_0x30da('0x253')])order[_0x30da('0xa5')](layer[j],d);}}}prevBridge=nextBridge;prevBridgeTarget=nextBridgeTarget;}}}}['getNeighborOnLayer'](node,l){var neighbor=this[_0x30da('0x267')]['get'](node)[0x0];if(neighbor[_0x30da('0x4')]==l)return neighbor;neighbor=this[_0x30da('0x26d')][_0x30da('0x5a')](node)[0x0];if(neighbor[_0x30da('0x4')]==l)return neighbor;return null;}['placeSequence'](x,virtualStart,virtualEnd,dir,sequence){if(sequence[_0x30da('0x16')]==0x1)this[_0x30da('0x274')](x,virtualStart,virtualEnd,dir,sequence[0x0]);if(sequence[_0x30da('0x16')]>0x1){var r=sequence['length'],t=intDiv(r,0x2);this[_0x30da('0x271')](x,virtualStart,virtualEnd,dir,sequence[_0x30da('0x9c')](0x0,t));this['placeSequence'](x,virtualStart,virtualEnd,dir,sequence['slice'](t));this[_0x30da('0x275')](x,virtualStart,virtualEnd,dir,sequence);}}[_0x30da('0x274')](x,virtualStart,virtualEnd,dir,node){var neighbors=dir==-0x1?this['downNodes'][_0x30da('0x5a')](node):this[_0x30da('0x267')]['get'](node);var n=neighbors[_0x30da('0x16')];if(n!=0x0){if(n%0x2==0x1)x[_0x30da('0xa5')](node,x[_0x30da('0x5a')](neighbors[intDiv(n,0x2)]));else x[_0x30da('0xa5')](node,(x['get'](neighbors[intDiv(n,0x2)-0x1])+x[_0x30da('0x5a')](neighbors[intDiv(n,0x2)]))/0x2);if(virtualStart!=null)x[_0x30da('0xa5')](node,Math[_0x30da('0xbe')](x[_0x30da('0x5a')](node),x[_0x30da('0x5a')](virtualStart)+this['getMinDist'](virtualStart,node)));if(virtualEnd!=null)x[_0x30da('0xa5')](node,Math[_0x30da('0xbd')](x['get'](node),x['get'](virtualEnd)-this[_0x30da('0x25c')](node,virtualEnd)));}}[_0x30da('0x275')](x,virtualStart,virtualEnd,dir,sequence){var r=sequence[_0x30da('0x16')],t=intDiv(r,0x2);var leftHeap=[];for(var i=0x0;i<t;++i){var c=0x0;var neighbors=dir==-0x1?this[_0x30da('0x26d')]['get'](sequence[i]):this['upNodes'][_0x30da('0x5a')](sequence[i]);for(var n=0x0;n<neighbors['length'];++n){var neighbor=neighbors[n];if(x[_0x30da('0x5a')](neighbor)>=x[_0x30da('0x5a')](sequence[i])){c++;}else{c--;leftHeap['push']({'k':x[_0x30da('0x5a')](neighbor)+this[_0x30da('0x25c')](sequence[i],sequence[t-0x1]),'v':0x2});}}leftHeap[_0x30da('0x14')]({'k':x['get'](sequence[i])+this[_0x30da('0x25c')](sequence[i],sequence[t-0x1]),'v':c});}if(virtualStart!=null)leftHeap[_0x30da('0x14')]({'k':x[_0x30da('0x5a')](virtualStart)+this['getMinDist'](virtualStart,sequence[t-0x1]),'v':Number[_0x30da('0xee')]});leftHeap[_0x30da('0xde')](compareByPosDecreasing);var rightHeap=[];for(var i=t;i<r;++i){var c=0x0;var neighbors=dir==-0x1?this[_0x30da('0x26d')]['get'](sequence[i]):this[_0x30da('0x267')]['get'](sequence[i]);for(var n=0x0;n<neighbors[_0x30da('0x16')];++n){var neighbor=neighbors[n];if(x['get'](neighbor)<=x['get'](sequence[i])){c++;}else{c--;rightHeap[_0x30da('0x14')]({'k':x[_0x30da('0x5a')](neighbor)-this[_0x30da('0x25c')](sequence[i],sequence[t]),'v':0x2});}}rightHeap[_0x30da('0x14')]({'k':x[_0x30da('0x5a')](sequence[i])-this[_0x30da('0x25c')](sequence[i],sequence[t]),'v':c});}if(virtualEnd!=null)rightHeap['push']({'k':x['get'](virtualEnd)-this[_0x30da('0x25c')](virtualEnd,sequence[t]),'v':Number['MAX_VALUE']});rightHeap[_0x30da('0xde')](compareByPosIncreasing);var leftRes=0x0,rightRes=0x0;var m=this[_0x30da('0x25c')](sequence[t-0x1],sequence[t]);while(x[_0x30da('0x5a')](sequence[t])-x[_0x30da('0x5a')](sequence[t-0x1])<m){if(leftRes<rightRes){if(leftHeap[_0x30da('0x16')]==0x0){x[_0x30da('0xa5')](sequence[t-0x1],x[_0x30da('0x5a')](sequence[t])-m);break;}else{var pair=leftHeap[_0x30da('0xff')]();leftRes=leftRes+pair['v'];x[_0x30da('0xa5')](sequence[t-0x1],pair['k']);x[_0x30da('0xa5')](sequence[t-0x1],Math[_0x30da('0xbe')](x[_0x30da('0x5a')](sequence[t-0x1]),x[_0x30da('0x5a')](sequence[t])-m));}}else{if(rightHeap[_0x30da('0x16')]==0x0){x['set'](sequence[t],x[_0x30da('0x5a')](sequence[t-0x1])+m);break;}else{var pair=rightHeap[_0x30da('0xff')]();rightRes=rightRes+pair['v'];x[_0x30da('0xa5')](sequence[t],pair['k']);x[_0x30da('0xa5')](sequence[t],Math[_0x30da('0xbd')](x['get'](sequence[t]),x['get'](sequence[t-0x1])+m));}}}for(var i=t-0x2;i>=0x0;i--)x[_0x30da('0xa5')](sequence[i],Math[_0x30da('0xbd')](x[_0x30da('0x5a')](sequence[i]),x[_0x30da('0x5a')](sequence[t-0x1])-this['getMinDist'](sequence[i],sequence[t-0x1])));for(var i=t+0x1;i<r;i++)x[_0x30da('0xa5')](sequence[i],Math[_0x30da('0xbe')](x[_0x30da('0x5a')](sequence[i]),x['get'](sequence[t])+this[_0x30da('0x25c')](sequence[i],sequence[t])));}[_0x30da('0x264')](node,leftPos,leftClass){var pos=Number['NEGATIVE_INFINITY'];this['L'](node)[_0x30da('0xd6')](function(v){var leftSibling=this[_0x30da('0x26c')](v);if(leftSibling!=null&&this[_0x30da('0x25f')][_0x30da('0x5a')](leftSibling)==this[_0x30da('0x25f')][_0x30da('0x5a')](v)){if(!leftPos['has'](leftSibling))this['placeLeft'](leftSibling,leftPos,leftClass);pos=Math['max'](pos,leftPos['get'](leftSibling)+this[_0x30da('0x25c')](leftSibling,v));}},this);if(pos==Number[_0x30da('0x26b')])pos=0x0;this['L'](node)[_0x30da('0xd6')](function(v){leftPos[_0x30da('0xa5')](v,pos);});}[_0x30da('0x276')](node,rightPos,rightClass){var pos=Number['POSITIVE_INFINITY'];this['L'](node)[_0x30da('0xd6')](function(v){var rightSibling=this['rightSibling'](v);if(rightSibling!=null&&this[_0x30da('0x261')][_0x30da('0x5a')](rightSibling)==this[_0x30da('0x261')][_0x30da('0x5a')](v)){if(!rightPos['has'](rightSibling))this[_0x30da('0x276')](rightSibling,rightPos,rightClass);pos=Math[_0x30da('0xbd')](pos,rightPos[_0x30da('0x5a')](rightSibling)-this[_0x30da('0x25c')](v,rightSibling));}},this);if(pos==Number['POSITIVE_INFINITY'])pos=0x0;this['L'](node)[_0x30da('0xd6')](function(v){rightPos[_0x30da('0xa5')](v,pos);});}[_0x30da('0x26c')](node){var layer=this[_0x30da('0x255')][node[_0x30da('0x4')]];var i=node[_0x30da('0x25a')];if(i==0x0)return null;return layer[i-0x1];}[_0x30da('0x266')](node){var layer=this[_0x30da('0x255')][node[_0x30da('0x4')]];var i=node[_0x30da('0x25a')];if(i==layer['length']-0x1)return null;return layer[i+0x1];}['L'](node){if(node[_0x30da('0x253')])return this[_0x30da('0x262')](node);var list=[];list['push'](node);return list;}[_0x30da('0x259')](){for(var l=0x0;l<this[_0x30da('0x255')][_0x30da('0x16')];l++){var layer=this[_0x30da('0x255')][l];for(var ni=0x0;ni<layer[_0x30da('0x16')];ni++){var node=layer[ni];node[_0x30da('0x250')]=node[_0x30da('0x277')];node[_0x30da('0x251')]=node[_0x30da('0x24f')];}}var maxLayoutIterations=0x2;for(var it=0x0;it<maxLayoutIterations;it++){for(var i=this['layers'][_0x30da('0x16')]-0x1;i>=0x1;i--)this[_0x30da('0x278')](![],i);for(var i=0x0;i<this[_0x30da('0x255')][_0x30da('0x16')]-0x1;i++)this[_0x30da('0x278')](!![],i);}var gridPos=Number[_0x30da('0xee')];for(var l=0x0;l<this[_0x30da('0x255')][_0x30da('0x16')];l++){var layer=this[_0x30da('0x255')][l];for(var ni=0x0;ni<layer[_0x30da('0x16')];ni++){var node=layer[ni];gridPos=Math[_0x30da('0xbd')](gridPos,node['gridPosition']);}}if(gridPos<0x0){for(var l=0x0;l<this[_0x30da('0x255')]['length'];l++){var layer=this[_0x30da('0x255')][l];for(var ni=0x0;ni<layer[_0x30da('0x16')];ni++){var node=layer[ni];node[_0x30da('0x252')]=node[_0x30da('0x252')]-gridPos;}}}}[_0x30da('0x278')](down,layer){var iconsidered;var considered;if(down)considered=this[_0x30da('0x255')][iconsidered=layer+0x1];else considered=this['layers'][iconsidered=layer-0x1];var sorted=[];for(var n=0x0;n<considered['length'];n++)sorted['push'](considered[n]);sorted[_0x30da('0xde')](function(n1,n2){var n1Priority=(n1[_0x30da('0x250')]+n1[_0x30da('0x251')])/0x2;var n2Priority=(n2[_0x30da('0x250')]+n2[_0x30da('0x251')])/0x2;if(Math[_0x30da('0x1fb')](n1Priority-n2Priority)<0.0001)return compareByIndex(n1,n2);if(n1Priority<n2Priority)return 0x1;return-0x1;});sorted[_0x30da('0xd6')](function(node){var nodeGridPos=node[_0x30da('0x252')];var nodeBaryCenter=calcBaryCenter(node);var nodePriority=(node['uPriority']+node['dPriority'])/0x2;if(Math[_0x30da('0x1fb')](nodeGridPos-nodeBaryCenter)<0.0001){return;}if(Math[_0x30da('0x1fb')](nodeGridPos-nodeBaryCenter)<0.25+0.0001){return;}if(nodeGridPos<nodeBaryCenter){while(nodeGridPos<nodeBaryCenter){if(!this['moveRight'](node,considered,nodePriority))break;nodeGridPos=node['gridPosition'];}}else{while(nodeGridPos>nodeBaryCenter){if(!this['moveLeft'](node,considered,nodePriority))break;nodeGridPos=node['gridPosition'];}}},this);if(iconsidered>0x0)this[_0x30da('0x279')](iconsidered-0x1);if(iconsidered<this[_0x30da('0x255')]['length']-0x1)this[_0x30da('0x27a')](iconsidered+0x1);}['moveRight'](node,layer,priority){var index=layer[_0x30da('0x9a')](node);if(index==layer[_0x30da('0x16')]-0x1){node['gridPosition']=node[_0x30da('0x252')]+0.5;return!![];}var rightNode=layer[index+0x1];var rightNodePriority=(rightNode[_0x30da('0x250')]+rightNode[_0x30da('0x251')])/0x2;if(rightNode['gridPosition']>node[_0x30da('0x252')]+0x1){node[_0x30da('0x252')]=node[_0x30da('0x252')]+0.5;return!![];}if(rightNodePriority>priority||Math['abs'](rightNodePriority-priority)<0.0001)return![];if(this['moveRight'](rightNode,layer,priority)){node['gridPosition']=node[_0x30da('0x252')]+0.5;return!![];}return![];}[_0x30da('0x27b')](node,layer,priority){var index=layer['indexOf'](node);if(index==0x0){node[_0x30da('0x252')]=node[_0x30da('0x252')]-0.5;return!![];}var leftNode=layer[index-0x1];var leftNodePriority=(leftNode[_0x30da('0x250')]+leftNode[_0x30da('0x251')])/0x2;if(leftNode['gridPosition']<node[_0x30da('0x252')]-0x1){node[_0x30da('0x252')]=node[_0x30da('0x252')]-0.5;return!![];}if(leftNodePriority>priority||Math['abs'](leftNodePriority-priority)<0.0001)return![];if(this[_0x30da('0x27b')](leftNode,layer,priority)){node[_0x30da('0x252')]=node['gridPosition']-0.5;return!![];}return![];}[_0x30da('0x27c')](node,link){this[_0x30da('0x27d')][_0x30da('0xa5')](node,link);if(!this[_0x30da('0x27e')]['has'](link))this['linkToNodeMap'][_0x30da('0xa5')](link,[]);this[_0x30da('0x27e')][_0x30da('0x5a')](link)[_0x30da('0x14')](node);}[_0x30da('0x262')](node){return this['linkToNodeMap'][_0x30da('0x5a')](this['nodeToLinkMap'][_0x30da('0x5a')](node));}[_0x30da('0x256')](){this['linkToNodeMap']=new Map();this['nodeToLinkMap']=new Map();var links=this['graph'][_0x30da('0x0')][_0x30da('0x9c')](0x0);for(var l=0x0;l<links[_0x30da('0x16')];l++){var link=links[l];var o=link['origin'];var d=link[_0x30da('0xa')];var oLayer=o[_0x30da('0x4')];var dLayer=d[_0x30da('0x4')];var oPos=o[_0x30da('0x252')];var dPos=d[_0x30da('0x252')];var step=(dPos-oPos)/Math['abs'](dLayer-oLayer);var p=o;if(oLayer-dLayer>0x1){for(var i=oLayer-0x1;i>dLayer;i--){var newNode=new Vertex();newNode['x']=o['x'];newNode['y']=o['y'];newNode[_0x30da('0xe3')]=o[_0x30da('0xe3')]/0x64;newNode['height']=o['height']/0x64;var layer=this[_0x30da('0x255')][i];var pos=(i-dLayer)*step+oPos;if(pos>layer['length'])pos=layer[_0x30da('0x16')];if(oPos>=this[_0x30da('0x255')][oLayer][_0x30da('0x16')]-0x1&&dPos>=this['layers'][dLayer][_0x30da('0x16')]-0x1)pos=layer[_0x30da('0x16')];else if(oPos==0x0&&dPos==0x0)pos=0x0;newNode['layer']=i;newNode['uBaryCenter']=0x0;newNode[_0x30da('0x27f')]=0x0;newNode[_0x30da('0x277')]=0x0;newNode[_0x30da('0x24f')]=0x0;newNode[_0x30da('0x252')]=pos;newNode[_0x30da('0x253')]=!![];layer[_0x30da('0x9b')](pos,0x0,newNode);for(var r=pos+0x1;r<layer['length'];r++){var node=layer[r];node[_0x30da('0x252')]=node[_0x30da('0x252')]+0x1;}var newLink=new Edge(p,newNode);newLink[_0x30da('0x254')]=0x0;p=newNode;this[_0x30da('0xa4')]['vertices'][_0x30da('0x14')](newNode);this[_0x30da('0xa4')]['addEdge'](newLink);newNode[_0x30da('0x1a')]=this['graph'][_0x30da('0xbb')][_0x30da('0x16')]-0x1;this[_0x30da('0x27c')](newNode,link);}link['changeOrigin'](p);link[_0x30da('0x254')]=oLayer-dLayer-0x1;}if(oLayer-dLayer<-0x1){for(var i=oLayer+0x1;i<dLayer;i++){var newNode=new Vertex();newNode['x']=o['x'];newNode['y']=o['y'];newNode['width']=o[_0x30da('0xe3')]/0x64;newNode['height']=o[_0x30da('0xe4')]/0x64;var layer=this['layers'][i];var pos=(i-oLayer)*step+oPos;if(pos>layer[_0x30da('0x16')])pos=layer[_0x30da('0x16')];if(oPos>=this[_0x30da('0x255')][oLayer][_0x30da('0x16')]-0x1&&dPos>=this[_0x30da('0x255')][dLayer][_0x30da('0x16')]-0x1)pos=layer[_0x30da('0x16')];else if(oPos==0x0&&dPos==0x0)pos=0x0;newNode['layer']=i;newNode[_0x30da('0x24e')]=0x0;newNode[_0x30da('0x27f')]=0x0;newNode['uLinkCount']=0x0;newNode['dLinkCount']=0x0;newNode[_0x30da('0x252')]=pos;newNode[_0x30da('0x253')]=!![];pos=pos&pos;layer['splice'](pos,0x0,newNode);for(var r=pos+0x1;r<layer[_0x30da('0x16')];r++){var node=layer[r];node[_0x30da('0x252')]=node[_0x30da('0x252')]+0x1;}var newLink=new Edge(p,newNode);newLink[_0x30da('0x254')]=0x0;p=newNode;this[_0x30da('0xa4')]['vertices'][_0x30da('0x14')](newNode);this['graph'][_0x30da('0xac')](newLink);newNode['index']=this[_0x30da('0xa4')][_0x30da('0xbb')][_0x30da('0x16')]-0x1;this[_0x30da('0x27c')](newNode,link);}link[_0x30da('0x1d')](p);link[_0x30da('0x254')]=dLayer-oLayer-0x1;}}}[_0x30da('0x280')](){var dedum=!![];while(dedum){dedum=![];for(var l=0x0;l<this['graph'][_0x30da('0x0')][_0x30da('0x16')];l++){var link=this['graph']['edges'][l];if(link[_0x30da('0x254')]==0x0)continue;var points=[];points[_0x30da('0x9b')](0x0,0x0,{'x':link[_0x30da('0xa')]['x'],'y':link[_0x30da('0xa')]['y']});points[_0x30da('0x9b')](0x0,0x0,{'x':link[_0x30da('0x8')]['x'],'y':link[_0x30da('0x8')]['y']});var temp=link;var dummificationLevel=link['dummificationLevel'];for(var d=0x0;d<dummificationLevel;d++){var node=temp[_0x30da('0x8')];var prevLink=node[_0x30da('0x2')][0x0];points[_0x30da('0x9b')](0x0,0x0,{'x':prevLink[_0x30da('0x8')]['x'],'y':prevLink[_0x30da('0x8')]['y']});temp=prevLink;}link[_0x30da('0x1d')](temp['origin']);link[_0x30da('0x254')]=0x0;link[_0x30da('0x1aa')]=points;dedum=!![];break;}}}['minimizeCrossings'](){var moves=-0x1;var maxIterations=0x3;var iter=0x0;while(moves!=0x0){if(iter++>maxIterations)break;moves=0x0;var down=this[_0x30da('0x24d')];for(var i=this[_0x30da('0x255')][_0x30da('0x16')]-0x1;i>=0x1;i--)moves+=this[_0x30da('0x281')](down,i);for(var i=0x0;i<this[_0x30da('0x255')][_0x30da('0x16')]-0x1;i++)moves+=this[_0x30da('0x281')](!down,i);}}['calcUpData'](layer){if(layer==0x0)return;var considered=this[_0x30da('0x255')][layer];var upLayer=new Set();var temp=this['layers'][layer-0x1];for(var i=0x0;i<temp['length'];i++)upLayer[_0x30da('0x5d')](temp[i]);for(var i=0x0;i<considered[_0x30da('0x16')];i++){var node=considered[i];var sum=0x0;var total=0x0;for(var l=0x0;l<node['inEdges'][_0x30da('0x16')];l++){var link=node[_0x30da('0x2')][l];if(upLayer[_0x30da('0xa8')](link[_0x30da('0x8')])){total++;sum+=link['origin'][_0x30da('0x252')];}}for(var l=0x0;l<node[_0x30da('0x1')][_0x30da('0x16')];l++){var link=node[_0x30da('0x1')][l];if(upLayer[_0x30da('0xa8')](link[_0x30da('0xa')])){total++;sum+=link['destination'][_0x30da('0x252')];}}if(total>0x0){node[_0x30da('0x24e')]=sum/total;node[_0x30da('0x277')]=total;}else{node[_0x30da('0x24e')]=i;node[_0x30da('0x277')]=0x0;}}}[_0x30da('0x279')](layer){if(layer==this[_0x30da('0x255')][_0x30da('0x16')]-0x1)return;var considered=this[_0x30da('0x255')][layer];var downLayer=new Set();var temp=this[_0x30da('0x255')][layer+0x1];for(var i=0x0;i<temp[_0x30da('0x16')];i++)downLayer[_0x30da('0x5d')](temp[i]);for(var i=0x0;i<considered['length'];i++){var node=considered[i];var sum=0x0;var total=0x0;for(var l=0x0;l<node['inEdges'][_0x30da('0x16')];l++){var link=node[_0x30da('0x2')][l];if(downLayer[_0x30da('0xa8')](link[_0x30da('0x8')])){total++;sum+=link['origin']['gridPosition'];}}for(var l=0x0;l<node['outEdges']['length'];l++){var link=node[_0x30da('0x1')][l];if(downLayer[_0x30da('0xa8')](link[_0x30da('0xa')])){total++;sum+=link[_0x30da('0xa')][_0x30da('0x252')];}}if(total>0x0){node['dBaryCenter']=sum/total;node[_0x30da('0x24f')]=total;}else{node[_0x30da('0x27f')]=i;node[_0x30da('0x24f')]=0x0;}}}[_0x30da('0x281')](down,layer){var iconsidered;var considered;if(down)considered=this['layers'][iconsidered=layer+0x1];else considered=this[_0x30da('0x255')][iconsidered=layer-0x1];var presorted=considered['slice'](0x0);if(down)this[_0x30da('0x27a')](iconsidered);else this['calcDownData'](iconsidered);considered[_0x30da('0xde')](function(n1,n2){var n1BaryCenter=calcBaryCenter(n1);var n2BaryCenter=calcBaryCenter(n2);if(Math['abs'](n1BaryCenter-n2BaryCenter)<0.0001){if(n1[_0x30da('0x15')]()==n2[_0x30da('0x15')]())return compareByIndex(n1,n2);else if(n1[_0x30da('0x15')]()<n2[_0x30da('0x15')]())return 0x1;return-0x1;}var compareValue=(n2BaryCenter-n1BaryCenter)*0x3e8;if(compareValue>0x0)return-0x1;else if(compareValue<0x0)return 0x1;return compareByIndex(n1,n2);});var moves=0x0;for(var i=0x0;i<considered['length'];i++)if(considered[i]!=presorted[i])moves++;if(moves>0x0){var inode=0x0;for(var i=0x0;i<considered[_0x30da('0x16')];i++){var node=considered[i];node[_0x30da('0x252')]=inode++;}}return moves;}[_0x30da('0x258')](){var maxIterations=this[_0x30da('0x24c')];var iter=0x0;while(!![]){if(iter++>maxIterations)break;var downwards=iter%0x4<=0x1;var secondPass=iter%0x4==0x1;for(var l=downwards?0x0:this[_0x30da('0x255')]['length']-0x1;downwards?l<=this[_0x30da('0x255')][_0x30da('0x16')]-0x1:l>=0x0;l+=downwards?0x1:-0x1){var layer=this['layers'][l];var hasSwapped=![];var calcCrossings=!![];var memCrossings=0x0;for(var n=0x0;n<layer[_0x30da('0x16')]-0x1;n++){var up=0x0;var down=0x0;var crossBefore=0x0;if(calcCrossings){if(l!=0x0)up=this['countCrossings'](l-0x1,l);if(l!=this[_0x30da('0x255')][_0x30da('0x16')]-0x1)down=this['countCrossings'](l,l+0x1);if(downwards)up*=0x2;else down*=0x2;crossBefore=up+down;}else{crossBefore=memCrossings;}if(crossBefore==0x0)continue;var node1=layer[n];var node2=layer[n+0x1];var node1GridPos=node1[_0x30da('0x252')];var node2GridPos=node2[_0x30da('0x252')];layer[n]=node2;layer[n+0x1]=node1;node1[_0x30da('0x252')]=node2GridPos;node2[_0x30da('0x252')]=node1GridPos;up=0x0;if(l!=0x0)up=this['countCrossings'](l-0x1,l);down=0x0;if(l!=this[_0x30da('0x255')][_0x30da('0x16')]-0x1)down=this[_0x30da('0x282')](l,l+0x1);if(downwards)up*=0x2;else down*=0x2;var crossAfter=up+down;var revert=![];if(secondPass)revert=crossAfter>=crossBefore;else revert=crossAfter>crossBefore;if(revert){node1=layer[n];node2=layer[n+0x1];node1GridPos=node1[_0x30da('0x252')];node2GridPos=node2[_0x30da('0x252')];layer[n]=node2;layer[n+0x1]=node1;node1[_0x30da('0x252')]=node2GridPos;node2['gridPosition']=node1GridPos;memCrossings=crossBefore;calcCrossings=![];}else{hasSwapped=!![];calcCrossings=!![];}}if(hasSwapped){if(l!=this['layers'][_0x30da('0x16')]-0x1)this[_0x30da('0x27a')](l+0x1);if(l!=0x0)this[_0x30da('0x279')](l-0x1);}}}}['countCrossings'](ulayer,dlayer){var crossings=0x0;var uLayer=new Set();var temp1=this['layers'][ulayer];for(var i=0x0;i<temp1[_0x30da('0x16')];i++)uLayer[_0x30da('0x5d')](temp1[i]);var dLayer=new Set();var temp2=this[_0x30da('0x255')][dlayer];for(var i=0x0;i<temp2[_0x30da('0x16')];i++)dLayer['add'](temp2[i]);var dlinks=new Set();var links=[];var temp=[];uLayer[_0x30da('0xd6')](function(node){temp[_0x30da('0x14')](...node['inEdges']);temp[_0x30da('0x14')](...node[_0x30da('0x1')]);});for(var ti=0x0;ti<temp[_0x30da('0x16')];ti++){var link=temp[ti];if(uLayer[_0x30da('0xa8')](link['origin'])&&dLayer[_0x30da('0xa8')](link[_0x30da('0xa')])){dlinks[_0x30da('0x5d')](link);links['push'](link);}else if(dLayer[_0x30da('0xa8')](link['origin'])&&uLayer[_0x30da('0xa8')](link[_0x30da('0xa')])){links[_0x30da('0x14')](link);}}for(var l1=0x0;l1<links['length'];l1++){var link1=links[l1];for(var l2=0x0;l2<links[_0x30da('0x16')];l2++){if(l1==l2)continue;var link2=links[l2];var n11,n12;var n21,n22;if(dlinks[_0x30da('0xa8')](link1)){n11=link1[_0x30da('0x8')];n12=link1[_0x30da('0xa')];}else{n11=link1[_0x30da('0xa')];n12=link1[_0x30da('0x8')];}if(dlinks[_0x30da('0xa8')](link2)){n21=link2[_0x30da('0x8')];n22=link2[_0x30da('0xa')];}else{n21=link2[_0x30da('0xa')];n22=link2[_0x30da('0x8')];}var n11gp=n11[_0x30da('0x252')];var n12gp=n12['gridPosition'];var n21gp=n21[_0x30da('0x252')];var n22gp=n22[_0x30da('0x252')];if((n11gp-n21gp)*(n12gp-n22gp)<0x0)crossings++;}}return crossings/0x2;}[_0x30da('0x1b0')](){return this['constructor'][_0x30da('0x1b2')];}get[_0x30da('0x19b')](){return this[_0x30da('0x1b4')];}set['nodeDistance'](value){this['_nodeDistance']=value;}get['layerDistance'](){return this[_0x30da('0x283')];}set['layerDistance'](value){this[_0x30da('0x283')]=value;}get[_0x30da('0x94')](){return this[_0x30da('0x1b6')];}set['direction'](value){this[_0x30da('0x1b6')]=value;}get[_0x30da('0x24c')](){return this[_0x30da('0x284')];}set[_0x30da('0x24c')](value){this['_siftingRounds']=value;}get['anchoring'](){return this[_0x30da('0x18f')];}set[_0x30da('0x18c')](value){this['_anchoring']=value;}get['keepGroupLayout'](){return this[_0x30da('0x190')];}set[_0x30da('0x18d')](value){this[_0x30da('0x190')]=value;}get[_0x30da('0x191')](){return this[_0x30da('0x192')];}set[_0x30da('0x191')](value){this['_multipleGraphsPlacement']=value;}}function nextVirtualNode(layer,node){var nodeIndex=node['indexInLayer'];for(var i=nodeIndex+0x1;i<layer['length'];++i)if(layer[i][_0x30da('0x253')])return layer[i];return null;}function calcBaryCenter(node){var uLinkCount=node['uLinkCount'];var dLinkCount=node[_0x30da('0x24f')];var uBaryCenter=node[_0x30da('0x24e')];var dBaryCenter=node['dBaryCenter'];if(uLinkCount>0x0&&dLinkCount>0x0)return(uBaryCenter+dBaryCenter)/0x2;if(uLinkCount>0x0)return uBaryCenter;if(dLinkCount>0x0)return dBaryCenter;return 0x0;}function compareByGridPos(x,y){if(x['gridPosition']<y['gridPosition'])return-0x1;if(x[_0x30da('0x252')]>y['gridPosition'])return 0x1;return compareByIndex(x,y);}function compareByPosIncreasing(x,y){if(x['k']<y['k'])return-0x1;if(x['k']>y['k'])return 0x1;return 0x0;}function compareByPosDecreasing(x,y){if(x['k']<y['k'])return 0x1;if(x['k']>y['k'])return-0x1;return 0x0;}function leftMostVirtualNode(layer){for(var c=0x0;c<layer[_0x30da('0x16')];c++){if(layer[c][_0x30da('0x253')])return c;}return-0x1;}function compareByIndex(o1,o2){var i1=o1[_0x30da('0x1a')];var i2=o2[_0x30da('0x1a')];if(i1<i2)return-0x1;if(i1>i2)return 0x1;return 0x0;}function intDiv(numerator,denominator){return(numerator-numerator%denominator)/denominator;}class SpringLayout extends Layout{constructor(){super();this[_0x30da('0x19b')]=0x1e;this['iterations']=0x12c;this[_0x30da('0x285')]=![];this[_0x30da('0x286')]=0x0;this[_0x30da('0x287')]=0x0;this['multipleGraphsPlacement']=MultipleGraphsPlacement[_0x30da('0x19f')];}get['setsLinkEndPoints'](){return![];}get[_0x30da('0x196')](){return![];}[_0x30da('0x1d8')](graph){this[_0x30da('0x286')]=this[_0x30da('0x19b')]*0x9;this[_0x30da('0x287')]=this['initialTemperature'];this[_0x30da('0xa4')]=graph;var autoSize=calcAutoFrame(graph,averageNodeSize(graph),0x1,0x4);this['width']=autoSize[_0x30da('0xe3')];this['height']=autoSize['height'];for(var step=0x0;step<this[_0x30da('0x288')];step++){this[_0x30da('0x285')]=step>=this[_0x30da('0x288')]*0x3/0x4;graph[_0x30da('0xbb')]['forEach'](function(v){this['calcRepulsionForce'](v);},this);graph['edges']['forEach'](function(e){this[_0x30da('0x289')](e);},this);graph[_0x30da('0xbb')][_0x30da('0xd6')](function(v){this[_0x30da('0x28a')](v);},this);this[_0x30da('0x287')]=this[_0x30da('0x285')]?this['initialTemperature']/0x1e:this['initialTemperature']*(0x1-step/this[_0x30da('0x288')]/0x2);}}[_0x30da('0x28b')](v,radius){var a=Math[_0x30da('0x28c')]()*0x2*Math['PI'];var l=radius*Math[_0x30da('0x28c')]();if(l==0x0)l=radius/0x2;v['x']+=l*Math[_0x30da('0x248')](a);v['y']-=l*Math['sin'](a);}[_0x30da('0x28d')](distance,desiredDistance,v1,v2){var a=0x0;if(this[_0x30da('0x285')]){var vx=v1['x']-v2['x'];var vy=v1['y']-v2['y'];var r1x=v1[_0x30da('0xe3')]/0x2;var r1y=v1[_0x30da('0xe4')]/0x2;var r2x=v2[_0x30da('0xe3')]/0x2;var r2y=v2[_0x30da('0xe4')]/0x2;a=vx*vx/Math[_0x30da('0x28e')](r1x+r2x+desiredDistance,0x2)+vy*vy/Math['pow'](r1y+r2y+desiredDistance,0x2);}else{a=distance*distance/desiredDistance/desiredDistance;}return a*0x4/0x3;}['repulsion'](distance,desiredDistance,v1,v2){return 0x1/this[_0x30da('0x28d')](distance,desiredDistance,v1,v2);}[_0x30da('0x28f')](v){v['dx']=0x0;v['dy']=0x0;var desiredDist=this['nodeDistance'];this[_0x30da('0xa4')]['vertices']['forEach'](function(v2){if(v2==v)return;while(v['x']==v2['x']&&v['y']==v2['y'])this[_0x30da('0x28b')](v2,desiredDist/0x4);var vx=v['x']-v2['x'];var vy=v['y']-v2['y'];var distance=Math[_0x30da('0x23c')](vx*vx+vy*vy);var r=this['repulsion'](distance,desiredDist,v,v2);v['dx']+=vx/distance*r;v['dy']+=vy/distance*r;},this);}[_0x30da('0x289')](e){var v1=e[_0x30da('0x8')];var v2=e[_0x30da('0xa')];var desiredDist=this[_0x30da('0x19b')];while(v1['x']==v2['x']&&v1['y']==v2['y'])this[_0x30da('0x28b')](v2,desiredDist/0x4);var vx=v1['x']-v2['x'];var vy=v1['y']-v2['y'];var distance=Math[_0x30da('0x23c')](vx*vx+vy*vy);var a=this[_0x30da('0x28d')](distance,desiredDist,v1,v2);var dx=vx/distance*a;var dy=vy/distance*a;v1['dx']-=dx;v1['dy']-=dy;v2['dx']+=dx;v2['dy']+=dy;}['applyForce'](v){var offset=Math[_0x30da('0x23c')](v['dx']*v['dx']+v['dy']*v['dy']);if(offset==0x0)return;v['x']+=Math['min'](offset,this['temperature'])*v['dx']/offset;v['y']+=Math[_0x30da('0xbd')](offset,this['temperature'])*v['dy']/offset;v['x']=Math[_0x30da('0xbd')](this[_0x30da('0xe3')],Math['max'](v[_0x30da('0xe3')]/0x2,v['x']));v['y']=Math[_0x30da('0xbd')](this[_0x30da('0xe4')],Math['max'](v['height']/0x2,v['y']));}[_0x30da('0x1b0')](){return this[_0x30da('0x1b1')][_0x30da('0x1b2')];}get[_0x30da('0x19b')](){return this[_0x30da('0x1b4')];}set['nodeDistance'](value){this[_0x30da('0x1b4')]=value;}get[_0x30da('0x288')](){return this[_0x30da('0x290')];}set[_0x30da('0x288')](value){this[_0x30da('0x290')]=value;}get[_0x30da('0x18c')](){return this[_0x30da('0x18f')];}set[_0x30da('0x18c')](value){this[_0x30da('0x18f')]=value;}get[_0x30da('0x18d')](){return this[_0x30da('0x190')];}set['keepGroupLayout'](value){this['_keepGroupLayout']=value;}get['multipleGraphsPlacement'](){return this['_multipleGraphsPlacement'];}set[_0x30da('0x191')](value){this[_0x30da('0x192')]=value;}}function averageNodeSize(graph){var size=0x0;if(graph[_0x30da('0xbb')][_0x30da('0x16')]==0x0)return size;graph['vertices'][_0x30da('0xd6')](function(v){var area=v[_0x30da('0xe3')]*v['height'];if(area>0x0)size+=Math[_0x30da('0x23c')](area);});return size/graph['vertices']['length'];}function calcAutoFrame(graph,averageNodeSize,widthHeightRatio,multiplier){var squareSize=averageNodeSize*Math[_0x30da('0x291')](Math[_0x30da('0x23c')](graph[_0x30da('0xbb')][_0x30da('0x16')]));var width=squareSize*Math['sqrt'](widthHeightRatio);var height=squareSize/Math[_0x30da('0x23c')](widthHeightRatio);return{'width':width*multiplier,'height':height*multiplier};}class TopologicalLayout extends Layout{constructor(){super();this[_0x30da('0x19b')]=0x14;this['direction']=LayoutDirection['LeftToRight'];this['bendAdjacentLinks']=![];this['mm']=0x1;}get[_0x30da('0x198')](){return!![];}[_0x30da('0x1d8')](graph){if(graph['vertices'][_0x30da('0x16')]==0x0)return![];graph[_0x30da('0xeb')]();this[_0x30da('0xa4')]=graph;var orientation=Orientation[_0x30da('0x19f')];if(this[_0x30da('0x94')]==LayoutDirection[_0x30da('0x1a8')]||this[_0x30da('0x94')]==LayoutDirection[_0x30da('0x1a9')]){orientation=Orientation['Vertical'];}var reverseDirection=![];if(this[_0x30da('0x94')]==LayoutDirection[_0x30da('0x1ac')]||this['direction']==LayoutDirection['BottomToTop']){reverseDirection=!![];}var sort=graph[_0x30da('0x14d')]();if(!sort){var reversed=graph['makeAcyclic']();sort=graph[_0x30da('0x14d')]();}var reversedMap=new Map();if(reversed){for(let edge of reversed){reversedMap[_0x30da('0xa5')](edge,!![]);edge['reverse']();}}var indexMap=new Map();var position=0x0;sort[_0x30da('0xd6')](function(index){indexMap[_0x30da('0xa5')](graph[_0x30da('0xbb')][index],position++);});var maxSize=0x0;graph[_0x30da('0xbb')][_0x30da('0xd6')](function(vertex){if(orientation==Orientation['Horizontal'])maxSize=Math[_0x30da('0xbe')](maxSize,vertex[_0x30da('0xe4')]);else maxSize=Math['max'](maxSize,vertex[_0x30da('0xe3')]);});if(reverseDirection)sort[_0x30da('0x21')]();var thisObj=this;var offset=this[_0x30da('0x18e')];sort[_0x30da('0xd6')](function(index){var vertex=graph[_0x30da('0xbb')][index];if(orientation==Orientation['Horizontal']){vertex['x']=offset+vertex['width']/0x2;vertex['y']=thisObj['margins']+maxSize/0x2;offset+=vertex[_0x30da('0xe3')]+thisObj[_0x30da('0x19b')];}else{vertex['x']=thisObj[_0x30da('0x18e')]+maxSize/0x2;vertex['y']=offset+vertex[_0x30da('0xe4')]/0x2;offset+=vertex[_0x30da('0xe4')]+thisObj[_0x30da('0x19b')];}});var sign=0x1;if(reverseDirection)sign=-0x1;var or=orientation;var straight=!reverseDirection;graph[_0x30da('0x0')]['forEach'](function(edge){var p=[];var o=edge[_0x30da('0x8')];var d=edge[_0x30da('0xa')];if(!reversedMap[_0x30da('0xa8')](edge)){var originIndex=indexMap[_0x30da('0x5a')](o);var destIndex=indexMap['get'](d);if(!thisObj[_0x30da('0x292')]&&Math[_0x30da('0x1fb')](originIndex-destIndex)==0x1){p[0x0]=PointFromBL(straight?Tools['GetLFar'](o,or):Tools[_0x30da('0x22e')](o,or),Tools[_0x30da('0x1c6')](o,or),or);p[0x3]=PointFromBL(straight?Tools[_0x30da('0x22e')](d,or):Tools['GetLFar'](d,or),Tools[_0x30da('0x1c6')](d,or),or);var h=Math[_0x30da('0x1fb')](Tools[_0x30da('0x1ce')](p[0x3],or)-Tools['GetL'](p[0x0],or));p[0x1]=PointFromBL(Tools[_0x30da('0x1ce')](p[0x0],or)+sign*h/0x4,Tools['GetB'](p[0x0],or),or);p[0x2]=PointFromBL(Tools['GetL'](p[0x3],or)-sign*h/0x4,Tools[_0x30da('0x229')](p[0x3],or),or);}else{p[0x0]=PointFromBL(Tools[_0x30da('0x1c8')](o,or),Tools[_0x30da('0x1c9')](o,or),or);p[0x3]=PointFromBL(Tools[_0x30da('0x1c8')](d,or),Tools[_0x30da('0x1c9')](d,or),or);var h=Math['abs'](Tools[_0x30da('0x1ce')](p[0x3],or)-Tools[_0x30da('0x1ce')](p[0x0],or));p[0x1]=PointFromBL(Tools[_0x30da('0x1ce')](p[0x0],or)+sign*h/0x4,Tools['GetB'](p[0x0],or)-h/0x3,or);p[0x2]=PointFromBL(Tools['GetL'](p[0x3],or)-sign*h/0x4,Tools['GetB'](p[0x3],or)-h/0x3,or);}}else{p[0x0]=PointFromBL(Tools['GetLCenter'](o,or),Tools[_0x30da('0x1ca')](o,or),or);p[0x3]=PointFromBL(Tools[_0x30da('0x1c8')](d,or),Tools[_0x30da('0x1ca')](d,or),or);var h=Math[_0x30da('0x1fb')](Tools['GetL'](p[0x3],or)-Tools[_0x30da('0x1ce')](p[0x0],or));p[0x1]=PointFromBL(Tools['GetL'](p[0x0],or)-sign*h/0x4,Tools['GetB'](p[0x0],or)+h/0x3,or);p[0x2]=PointFromBL(Tools[_0x30da('0x1ce')](p[0x3],or)+sign*h/0x4,Tools[_0x30da('0x229')](p[0x3],or)+h/0x3,or);}edge[_0x30da('0x1aa')]=p;});}[_0x30da('0x1b0')](){return this[_0x30da('0x1b1')][_0x30da('0x1b2')];}get[_0x30da('0x19b')](){return this[_0x30da('0x1b4')];}set['nodeDistance'](value){this[_0x30da('0x1b4')]=value;}get[_0x30da('0x94')](){return this[_0x30da('0x1b6')];}set[_0x30da('0x94')](value){this[_0x30da('0x1b6')]=value;}get[_0x30da('0x292')](){return this[_0x30da('0x293')];}set[_0x30da('0x292')](value){this[_0x30da('0x293')]=value;}}function PointFromBL(l,b,or){if(or==Orientation[_0x30da('0x19f')])return new Point(l,b);else return new Point(b,l);}class TreeLayout extends Layout{constructor(){super();this[_0x30da('0x1a4')]=0xa;this['nodeDistance']=0xa;this[_0x30da('0x19c')]=![];this[_0x30da('0x94')]=LayoutDirection[_0x30da('0x1a8')];this[_0x30da('0x19d')]=TreeLayoutLinkType['Default'];this[_0x30da('0x294')]=![];this[_0x30da('0x295')]=![];this[_0x30da('0x191')]=MultipleGraphsPlacement[_0x30da('0x19f')];}get[_0x30da('0x1a0')](){return![];}get[_0x30da('0x199')](){return this[_0x30da('0x19d')]==TreeLayoutLinkType[_0x30da('0x1a1')];}get['isStatic'](){return this[_0x30da('0x19c')];}[_0x30da('0x1d8')](graph){var root;graph['vertices'][_0x30da('0xd6')](function(v){if(v[_0x30da('0x2')]['length']==0x0){root=v;return $break;}});if(!root)return $skipLayout;var tree=graph[_0x30da('0xd4')](root,this[_0x30da('0x294')],this[_0x30da('0x295')]);if(!tree)return $skipLayout;tree[_0x30da('0xbb')]['forEach'](function(v){v[_0x30da('0x296')]=v[_0x30da('0x6')][_0x30da('0xd8')][_0x30da('0xdf')];});var rootX=root['x']+root['width']/0x2;var rootY=root['y']+root['height']/0x2;walk(tree,root,function(node,params){node['x']=node['width']/0x2;node['y']=node[_0x30da('0xe4')]/0x2;},null);var levelSizes=[];for(var i=0x0;i<tree[_0x30da('0xdd')][_0x30da('0x16')];i++){var treeLevel=tree[_0x30da('0xdd')][i];var sz=0x0;for(var j=0x0;j<treeLevel[_0x30da('0x16')];j++){if(this[_0x30da('0x1a3')]())sz=Math['max'](sz,treeLevel[j]['width']);else sz=Math[_0x30da('0xbe')](sz,treeLevel[j][_0x30da('0xe4')]);}levelSizes['push'](sz);}var lastLevel=tree[_0x30da('0xdd')][tree[_0x30da('0xdd')]['length']-0x1];var s=0x0;for(var i=0x0;i<lastLevel[_0x30da('0x16')];i++){var node=lastLevel[i];if(this[_0x30da('0x1a3')]()){node['y']=s+node['height']/0x2;s+=node[_0x30da('0xe4')]+this[_0x30da('0x19b')];}else{node['x']=s+node[_0x30da('0xe3')]/0x2;s+=node[_0x30da('0xe3')]+this[_0x30da('0x19b')];}}var previousLefts=new Map();var previousRights=new Map();for(var i=tree['treeLevels'][_0x30da('0x16')]-0x1;i>=0x0;i--){var treeLevel=tree[_0x30da('0xdd')][i];for(var j=0x0;j<treeLevel[_0x30da('0x16')];j++){var node=treeLevel[j];var children=childrenOf(tree,node);if(children[_0x30da('0x16')]>0x0){if(this['hasAssistants'](node)&&this[_0x30da('0x294')]){var firstLeftAssistant=undefined;var firstRightAssistant=undefined;children['forEach'](function(child){if(child[_0x30da('0xda')]===AssistantPosition[_0x30da('0xd9')])firstLeftAssistant=child;else if(child[_0x30da('0xda')]===AssistantPosition[_0x30da('0xd7')])firstRightAssistant=child;});if(firstLeftAssistant&&firstRightAssistant){var leftBounds=this[_0x30da('0x297')](firstLeftAssistant);var rightBounds=this[_0x30da('0x297')](firstRightAssistant);if(this[_0x30da('0x1a3')]())node['y']+=leftBounds[_0x30da('0x1af')]()+(rightBounds[_0x30da('0x1ae')]()-leftBounds[_0x30da('0x1af')]())/0x2-node['height']/0x2;else node['x']+=leftBounds['right']()+(rightBounds[_0x30da('0x71')]()-leftBounds[_0x30da('0x6b')]())/0x2-node[_0x30da('0xe3')]/0x2;}else{if(firstLeftAssistant){var assistantBounds=this[_0x30da('0x297')](firstLeftAssistant);if(this[_0x30da('0x1a3')]())node['y']=assistantBounds['bottom']()+this[_0x30da('0x19b')]/0x2;else node['x']=assistantBounds[_0x30da('0x6b')]()+this['nodeDistance']/0x2;}else{var assistantBounds=this[_0x30da('0x297')](firstRightAssistant);if(this[_0x30da('0x1a3')]())node['y']=assistantBounds[_0x30da('0x1ae')]()-this['nodeDistance']/0x2;else node['x']=assistantBounds['left']()-this[_0x30da('0x19b')]/0x2;}}}else{var rcTotal=Rect['fromVertex'](children[0x0]);for(var c=0x1;c<children[_0x30da('0x16')];c++)rcTotal=rcTotal[_0x30da('0x1b8')](Rect[_0x30da('0x1ad')](children[c]));if(this['isHorizontal']())node['y']+=(rcTotal[_0x30da('0x1ae')]()+rcTotal['bottom']())/0x2-node['height']/0x2;else node['x']+=(rcTotal[_0x30da('0x71')]()+rcTotal['right']())/0x2-node[_0x30da('0xe3')]/0x2;}}if(node['assistantType']&&this[_0x30da('0x294')]){var subordinates=[];if(node[_0x30da('0x33')]){for(var c=0x0;c<node[_0x30da('0x33')]['outEdges'][_0x30da('0x16')];c++){var child=node[_0x30da('0x33')]['outEdges'][c][_0x30da('0xa')];if(child[_0x30da('0x296')])continue;subordinates[_0x30da('0x14')](child);}}if(subordinates[_0x30da('0x16')]>0x0){var rcTotal=Rect[_0x30da('0x1ad')](subordinates[0x0]);for(var c=0x1;c<subordinates[_0x30da('0x16')];c++)rcTotal=rcTotal[_0x30da('0x1b8')](Rect[_0x30da('0x1ad')](subordinates[c]));var rc=this[_0x30da('0x297')](node);if(this['isHorizontal']()){var offset=0x0;if(node[_0x30da('0xda')]===AssistantPosition[_0x30da('0xd9')]){offset=rcTotal['y']+rcTotal[_0x30da('0xe4')]/0x2-rc[_0x30da('0x1af')]()-this[_0x30da('0x19b')]/0x2;}else{offset=rcTotal['y']+rcTotal[_0x30da('0xe4')]/0x2-rc[_0x30da('0x1ae')]()+this[_0x30da('0x19b')]/0x2;}this['offsetBranch'](tree,node,0x0,offset);}else{var offset=0x0;if(node[_0x30da('0xda')]===AssistantPosition['Left']){offset=rcTotal['x']+rcTotal['width']/0x2-rc[_0x30da('0x6b')]()-this['nodeDistance']/0x2;}else{offset=rcTotal['x']+rcTotal[_0x30da('0xe3')]/0x2-rc[_0x30da('0x71')]()+this['nodeDistance']/0x2;}this['offsetBranch'](tree,node,offset,0x0);}}else{if(node[_0x30da('0x33')]){var previousLeft=undefined;if(previousLefts['has'](node[_0x30da('0x33')]))previousLeft=previousLefts[_0x30da('0x5a')](node[_0x30da('0x33')]);var previousRight=undefined;if(previousRights[_0x30da('0xa8')](node[_0x30da('0x33')]))previousRight=previousRights[_0x30da('0x5a')](node[_0x30da('0x33')]);if(previousLeft||previousRight){var nodeBounds=this[_0x30da('0x297')](node);if(node[_0x30da('0xda')]===AssistantPosition[_0x30da('0xd7')]){if(previousRight){var previousBounds=this['branchBounds'](previousRight);if(this[_0x30da('0x1a3')]()){var offset=previousBounds[_0x30da('0x1ae')]()-nodeBounds[_0x30da('0x1ae')]();this[_0x30da('0x1a6')](tree,node,0x0,offset);}else{var offset=previousBounds[_0x30da('0x71')]()-nodeBounds['left']();this[_0x30da('0x1a6')](tree,node,offset,0x0);}}else if(previousLeft){var previousBounds=this[_0x30da('0x297')](previousLeft);if(this[_0x30da('0x1a3')]()){var offset=previousBounds['bottom']()+this[_0x30da('0x19b')]-nodeBounds[_0x30da('0x1ae')]();this[_0x30da('0x1a6')](tree,node,0x0,offset);}else{var offset=previousBounds[_0x30da('0x6b')]()+this[_0x30da('0x19b')]-nodeBounds[_0x30da('0x71')]();this[_0x30da('0x1a6')](tree,node,offset,0x0);}}}else{if(previousLeft){var previousBounds=this[_0x30da('0x297')](previousLeft);if(this['isHorizontal']()){var offset=previousBounds['bottom']()-nodeBounds[_0x30da('0x1af')]();this['offsetBranch'](tree,node,0x0,offset);}else{var offset=previousBounds['right']()-nodeBounds[_0x30da('0x6b')]();this[_0x30da('0x1a6')](tree,node,offset,0x0);}}else if(previousRight){var previousBounds=this['branchBounds'](previousRight);if(this[_0x30da('0x1a3')]()){var offset=previousBounds[_0x30da('0x1ae')]()-this[_0x30da('0x19b')]-nodeBounds[_0x30da('0x1af')]();this[_0x30da('0x1a6')](tree,node,0x0,offset);}else{var offset=previousBounds['left']()-this[_0x30da('0x19b')]-nodeBounds[_0x30da('0x6b')]();this[_0x30da('0x1a6')](tree,node,offset,0x0);}}}}}}}if(node[_0x30da('0x296')]&&this[_0x30da('0x294')]){if(node['assistantPosition']===AssistantPosition['Left'])previousLefts[_0x30da('0xa5')](node[_0x30da('0x33')],node);else if(node[_0x30da('0xda')]===AssistantPosition[_0x30da('0xd7')])previousRights[_0x30da('0xa5')](node[_0x30da('0x33')],node);}}for(var j=0x0;j<treeLevel[_0x30da('0x16')]-0x1;j++){for(var k=j;k>=0x0;k--){if(treeLevel[k][_0x30da('0x296')]||treeLevel[j+0x1][_0x30da('0x296')])continue;var dist=this[_0x30da('0x298')](tree,treeLevel[k],treeLevel[j+0x1]);var checkDistance=k!=j;if(checkDistance?dist<this[_0x30da('0x19b')]:!![]){if(this[_0x30da('0x1a3')]())this[_0x30da('0x1a6')](tree,treeLevel[j+0x1],0x0,this['nodeDistance']-dist);else this[_0x30da('0x1a6')](tree,treeLevel[j+0x1],this['nodeDistance']-dist,0x0);}}}}var iStart;var iEnd;var iGrow;if(this['isStraight']()){iStart=0x0;iEnd=tree[_0x30da('0xdd')][_0x30da('0x16')];iGrow=+0x1;}else{iStart=tree[_0x30da('0xdd')][_0x30da('0x16')]-0x1;iEnd=-0x1;iGrow=-0x1;}var currentPos=0x0;for(var i=iStart;this[_0x30da('0x1a5')]()?i<iEnd:i>iEnd;i+=iGrow){var maxSize=0x0;var treeLevel=tree[_0x30da('0xdd')][i];for(var j=0x0;j<treeLevel['length'];j++){var node=treeLevel[j];var size=0x0;if(this[_0x30da('0x1a3')]()){size=node['width'];var xoff=0x0;if(this[_0x30da('0x94')]==LayoutDirection[_0x30da('0x1ac')])xoff=levelSizes[i]-size;node['x']=currentPos+xoff+this[_0x30da('0x18e')]+node['width']/0x2;node['y']=node['y']+this[_0x30da('0x18e')];}else{size=node[_0x30da('0xe4')];var yoff=0x0;if(this['direction']==LayoutDirection[_0x30da('0x1a9')])yoff=levelSizes[i]-size;node['x']=node['x']+this[_0x30da('0x18e')];node['y']=currentPos+yoff+this[_0x30da('0x18e')]+node['height']/0x2;}maxSize=Math[_0x30da('0xbe')](maxSize,size);}currentPos+=maxSize+this['levelDistance'];}if(this[_0x30da('0x19c')]){var newRootX=root['x'];var newRootY=root['y'];var xoff=rootX-newRootX;var yoff=rootY-newRootY;this['offsetBranch'](tree,root,xoff,yoff);}if(this[_0x30da('0x19d')]!=TreeLayoutLinkType['Default']){switch(this['linkType']){case TreeLayoutLinkType['Straight']:{switch(this[_0x30da('0x94')]){case LayoutDirection[_0x30da('0x1a8')]:{tree['edges'][_0x30da('0xd6')](function(e){e[_0x30da('0x1aa')]=[{'x':e['origin']['x'],'y':e[_0x30da('0x8')]['y']+e['origin']['height']/0x2},{'x':e[_0x30da('0xa')]['x'],'y':e[_0x30da('0xa')]['y']-e['destination'][_0x30da('0xe4')]/0x2}];});break;}case LayoutDirection[_0x30da('0x1a9')]:{tree[_0x30da('0x0')]['forEach'](function(e){e[_0x30da('0x1aa')]=[{'x':e[_0x30da('0x8')]['x'],'y':e[_0x30da('0x8')]['y']-e[_0x30da('0x8')][_0x30da('0xe4')]/0x2},{'x':e[_0x30da('0xa')]['x'],'y':e[_0x30da('0xa')]['y']+e['destination'][_0x30da('0xe4')]/0x2}];});break;}case LayoutDirection[_0x30da('0x1ab')]:{tree[_0x30da('0x0')][_0x30da('0xd6')](function(e){e[_0x30da('0x1aa')]=[{'x':e[_0x30da('0x8')]['x']+e[_0x30da('0x8')][_0x30da('0xe3')]/0x2,'y':e[_0x30da('0x8')]['y']},{'x':e['destination']['x']-e[_0x30da('0xa')][_0x30da('0xe3')]/0x2,'y':e[_0x30da('0xa')]['y']}];});break;}case LayoutDirection['RightToLeft']:{tree[_0x30da('0x0')][_0x30da('0xd6')](function(e){e[_0x30da('0x1aa')]=[{'x':e[_0x30da('0x8')]['x']-e[_0x30da('0x8')][_0x30da('0xe3')]/0x2,'y':e['origin']['y']},{'x':e['destination']['x']+e[_0x30da('0xa')][_0x30da('0xe3')]/0x2,'y':e[_0x30da('0xa')]['y']}];});break;}}break;}case TreeLayoutLinkType[_0x30da('0x1a1')]:{var enableAssistants=this[_0x30da('0x294')];var halfDistance=this[_0x30da('0x1a4')]/0x2;switch(this['direction']){case LayoutDirection[_0x30da('0x1a8')]:{tree[_0x30da('0x0')][_0x30da('0xd6')](function(e){if(enableAssistants&&e[_0x30da('0xa')][_0x30da('0x296')]){e[_0x30da('0x1aa')]=[{'x':e['origin']['x'],'y':e[_0x30da('0x8')]['y']+e[_0x30da('0x8')][_0x30da('0xe4')]/0x2},{'x':e[_0x30da('0x8')]['x'],'y':e['destination']['y']},e[_0x30da('0xa')]['assistantPosition']===AssistantPosition[_0x30da('0xd9')]?{'x':e[_0x30da('0xa')]['x']+e[_0x30da('0xa')]['width']/0x2,'y':e[_0x30da('0xa')]['y']}:{'x':e[_0x30da('0xa')]['x']-e[_0x30da('0xa')]['width']/0x2,'y':e['destination']['y']}];}else{e['points']=[{'x':e[_0x30da('0x8')]['x'],'y':e[_0x30da('0x8')]['y']+e[_0x30da('0x8')]['height']/0x2},{'x':e[_0x30da('0x8')]['x'],'y':e[_0x30da('0xa')]['y']-e[_0x30da('0xa')][_0x30da('0xe4')]/0x2-halfDistance},{'x':e[_0x30da('0xa')]['x'],'y':e[_0x30da('0xa')]['y']-e[_0x30da('0xa')][_0x30da('0xe4')]/0x2-halfDistance},{'x':e['destination']['x'],'y':e[_0x30da('0xa')]['y']-e[_0x30da('0xa')][_0x30da('0xe4')]/0x2}];}});break;}case LayoutDirection['BottomToTop']:{tree[_0x30da('0x0')][_0x30da('0xd6')](function(e){if(enableAssistants&&e[_0x30da('0xa')][_0x30da('0x296')]){e['points']=[{'x':e[_0x30da('0x8')]['x'],'y':e['origin']['y']-e[_0x30da('0x8')]['height']/0x2},{'x':e[_0x30da('0x8')]['x'],'y':e['destination']['y']},e[_0x30da('0xa')]['assistantPosition']===AssistantPosition[_0x30da('0xd9')]?{'x':e['destination']['x']+e[_0x30da('0xa')]['width']/0x2,'y':e[_0x30da('0xa')]['y']}:{'x':e[_0x30da('0xa')]['x']-e[_0x30da('0xa')]['width']/0x2,'y':e[_0x30da('0xa')]['y']}];}else{e['points']=[{'x':e['origin']['x'],'y':e[_0x30da('0x8')]['y']-e[_0x30da('0x8')][_0x30da('0xe4')]/0x2},{'x':e[_0x30da('0x8')]['x'],'y':e[_0x30da('0xa')]['y']+e[_0x30da('0xa')][_0x30da('0xe4')]/0x2+halfDistance},{'x':e[_0x30da('0xa')]['x'],'y':e[_0x30da('0xa')]['y']+e[_0x30da('0xa')]['height']/0x2+halfDistance},{'x':e[_0x30da('0xa')]['x'],'y':e[_0x30da('0xa')]['y']+e[_0x30da('0xa')][_0x30da('0xe4')]/0x2}];}});break;}case LayoutDirection[_0x30da('0x1ab')]:{tree['edges'][_0x30da('0xd6')](function(e){if(enableAssistants&&e[_0x30da('0xa')][_0x30da('0x296')]){e['points']=[{'x':e[_0x30da('0x8')]['x']+e[_0x30da('0x8')]['width']/0x2,'y':e['origin']['y']},{'x':e['destination']['x'],'y':e[_0x30da('0x8')]['y']},e[_0x30da('0xa')][_0x30da('0xda')]===AssistantPosition[_0x30da('0xd9')]?{'x':e[_0x30da('0xa')]['x'],'y':e[_0x30da('0xa')]['y']+e[_0x30da('0xa')][_0x30da('0xe4')]/0x2}:{'x':e[_0x30da('0xa')]['x'],'y':e[_0x30da('0xa')]['y']-e[_0x30da('0xa')][_0x30da('0xe4')]/0x2}];}else{e['points']=[{'x':e[_0x30da('0x8')]['x']+e[_0x30da('0x8')][_0x30da('0xe3')]/0x2,'y':e['origin']['y']},{'x':e[_0x30da('0xa')]['x']-e[_0x30da('0xa')]['width']/0x2-halfDistance,'y':e[_0x30da('0x8')]['y']},{'x':e[_0x30da('0xa')]['x']-e[_0x30da('0xa')][_0x30da('0xe3')]/0x2-halfDistance,'y':e['destination']['y']},{'x':e[_0x30da('0xa')]['x']-e['destination'][_0x30da('0xe3')]/0x2,'y':e[_0x30da('0xa')]['y']}];}});break;}case LayoutDirection[_0x30da('0x1ac')]:{tree[_0x30da('0x0')][_0x30da('0xd6')](function(e){if(enableAssistants&&e[_0x30da('0xa')][_0x30da('0x296')]){e[_0x30da('0x1aa')]=[{'x':e[_0x30da('0x8')]['x']-e[_0x30da('0x8')][_0x30da('0xe3')]/0x2,'y':e[_0x30da('0x8')]['y']},{'x':e[_0x30da('0xa')]['x'],'y':e['origin']['y']},e['destination'][_0x30da('0xda')]===AssistantPosition[_0x30da('0xd9')]?{'x':e[_0x30da('0xa')]['x'],'y':e[_0x30da('0xa')]['y']+e['destination'][_0x30da('0xe4')]/0x2}:{'x':e[_0x30da('0xa')]['x'],'y':e[_0x30da('0xa')]['y']-e[_0x30da('0xa')][_0x30da('0xe4')]/0x2}];}else{e[_0x30da('0x1aa')]=[{'x':e[_0x30da('0x8')]['x']-e[_0x30da('0x8')]['width']/0x2,'y':e[_0x30da('0x8')]['y']},{'x':e[_0x30da('0xa')]['x']+e[_0x30da('0xa')][_0x30da('0xe3')]/0x2+halfDistance,'y':e[_0x30da('0x8')]['y']},{'x':e['destination']['x']+e[_0x30da('0xa')][_0x30da('0xe3')]/0x2+halfDistance,'y':e[_0x30da('0xa')]['y']},{'x':e[_0x30da('0xa')]['x']+e[_0x30da('0xa')]['width']/0x2,'y':e[_0x30da('0xa')]['y']}];}});break;}}}}}}[_0x30da('0x299')](node){for(var i=0x0;i<node[_0x30da('0x1')][_0x30da('0x16')];i++){if(node[_0x30da('0x1')][i][_0x30da('0xa')][_0x30da('0x296')])return!![];}return![];}[_0x30da('0x297')](root){var temp=[];temp[_0x30da('0x14')](root);var visited=[];var result;while(temp[_0x30da('0x16')]>0x0){var node=temp[0x0];temp[_0x30da('0x9b')](0x0,0x1);visited[_0x30da('0x14')](node);if(!result)result=Rect[_0x30da('0x1ad')](node);else result=result[_0x30da('0x1b8')](Rect[_0x30da('0x1ad')](node));for(var i=0x0;i<node[_0x30da('0x1')]['length'];i++){var child=node[_0x30da('0x1')][i][_0x30da('0xa')];if(!visited[_0x30da('0xc')](child))temp['push'](child);}}return result;}[_0x30da('0x298')](tree,node1,node2){var dist=this['left'](node2)-this[_0x30da('0x6b')](node1);var levels1=new Map();var levels2=new Map();enumerateLevels(tree,node1,levels1);enumerateLevels(tree,node2,levels2);var keys=[...levels1['keys']()];for(var i=0x0;i<keys[_0x30da('0x16')];i++){var levelIndex=keys[i];if(!levels2[_0x30da('0xa8')](levelIndex))continue;var level1=levels1['get'](levelIndex);var level2=levels2[_0x30da('0x5a')](levelIndex);var r=0x0;for(var j=0x0;j<level1['length'];j++)r=Math[_0x30da('0xbe')](r,this[_0x30da('0x6b')](level1[j]));var l=Number[_0x30da('0xee')];for(var j=0x0;j<level2[_0x30da('0x16')];j++)l=Math[_0x30da('0xbd')](l,this['left'](level2[j]));if(l-r<dist&&(level1['length']>0x0&&level2[_0x30da('0x16')]>0x0))dist=l-r;}return dist;}[_0x30da('0x6b')](vertex){if(this[_0x30da('0x1a3')]())return vertex['y']+vertex['height']/0x2;else return vertex['x']+vertex[_0x30da('0xe3')]/0x2;}[_0x30da('0x71')](vertex){if(this['isHorizontal']())return vertex['y']-vertex[_0x30da('0xe4')]/0x2;else return vertex['x']-vertex[_0x30da('0xe3')]/0x2;}['offsetBranch'](tree,nodeFrom,xoff,yoff){if(!xoff&&!yoff)return;var offsetFunc=function(node,params){node['x']+=params[0x0];node['y']+=params[0x1];};walk(tree,nodeFrom,offsetFunc,[xoff,yoff]);}[_0x30da('0x1a3')](){return this[_0x30da('0x94')]==LayoutDirection[_0x30da('0x1ab')]||this['direction']==LayoutDirection[_0x30da('0x1ac')];}[_0x30da('0x1a5')](){return this[_0x30da('0x94')]==LayoutDirection[_0x30da('0x1ab')]||this[_0x30da('0x94')]==LayoutDirection['TopToBottom'];}['intDiv'](numerator,denominator){return(numerator-numerator%denominator)/denominator;}[_0x30da('0x1b0')](){return this[_0x30da('0x1b1')][_0x30da('0x1b2')];}get[_0x30da('0x1a4')](){return this[_0x30da('0x1b3')];}set[_0x30da('0x1a4')](value){this['_levelDistance']=value;}get['nodeDistance'](){return this[_0x30da('0x1b4')];}set[_0x30da('0x19b')](value){this[_0x30da('0x1b4')]=value;}get[_0x30da('0x19c')](){return this[_0x30da('0x1b5')];}set[_0x30da('0x19c')](value){this[_0x30da('0x1b5')]=value;}get['direction'](){return this[_0x30da('0x1b6')];}set[_0x30da('0x94')](value){this[_0x30da('0x1b6')]=value;}get[_0x30da('0x19d')](){return this[_0x30da('0x1b7')];}set[_0x30da('0x19d')](value){this[_0x30da('0x1b7')]=value;}get[_0x30da('0x18c')](){return this[_0x30da('0x18f')];}set[_0x30da('0x18c')](value){this[_0x30da('0x18f')]=value;}get[_0x30da('0x18d')](){return this[_0x30da('0x190')];}set[_0x30da('0x18d')](value){this[_0x30da('0x190')]=value;}get[_0x30da('0x294')](){return this[_0x30da('0x29a')];}set[_0x30da('0x294')](value){this[_0x30da('0x29a')]=value;}get[_0x30da('0x295')](){return this[_0x30da('0x29b')];}set[_0x30da('0x295')](value){this['_compactAssistants']=value;}get[_0x30da('0x191')](){return this[_0x30da('0x192')];}set[_0x30da('0x191')](value){this[_0x30da('0x192')]=value;}}function enumerateLevels(tree,node,levels){var levelIndex=node[_0x30da('0xd5')];var level=null;if(levels[_0x30da('0xa8')](levelIndex)){level=levels['get'](levelIndex);}else{level=[];levels['set'](levelIndex,level);}level[_0x30da('0x14')](node);childrenOf(tree,node)[_0x30da('0xd6')](function(child){enumerateLevels(tree,child,levels);});}function walk(tree,node,func,params){func[_0x30da('0x1c3')](this,node,params);var children=childrenOf(tree,node);children['forEach'](function(child){walk(tree,child,func,params);});}function childrenOf(tree,node){var children=[];node[_0x30da('0x1')][_0x30da('0xd6')](function(e){if(tree[_0x30da('0x0')][_0x30da('0xc')](e))children['push'](e[_0x30da('0xa')]);});return children;}class TreeMapLayout extends Layout{constructor(){super();this[_0x30da('0x1d9')]=Orientation[_0x30da('0x1ba')];this[_0x30da('0x29c')]=!![];this[_0x30da('0x29d')]=0x1;this[_0x30da('0x29e')]=null;this[_0x30da('0x29f')]=0x0;this[_0x30da('0x2a0')]=0x1;}get['setsLinkEndPoints'](){return![];}get['setsLinkPoints'](){return![];}get['requiresConnectedGraph'](){return![];}get[_0x30da('0x1a0')](){return![];}get[_0x30da('0x2a1')](){return!![];}['arrange'](graph){if(this[_0x30da('0x29e')]==null)this[_0x30da('0x29e')]=graph[_0x30da('0x29e')];var roots=[];this[_0x30da('0x2a2')]=new Map();var totalWeight=0x0;graph[_0x30da('0xbb')][_0x30da('0xd6')](function(vertex){if(vertex[_0x30da('0x2a3')]==null){totalWeight+=this[_0x30da('0x2a4')](vertex);roots[_0x30da('0x14')](vertex);}},this);if(this['squarify'])this['arrangeSquare'](roots,this['layoutArea'],[],totalWeight);else this[_0x30da('0x2a5')](roots,this['layoutArea'],this[_0x30da('0x1d9')]==Orientation[_0x30da('0x19f')],totalWeight);}[_0x30da('0x2a6')](nodes,layoutArea,row,parentWeight){var children=nodes['slice']();var weights=this[_0x30da('0x2a2')];children['sort'](function(n1,n2){return weights[_0x30da('0x5a')](n2)-weights[_0x30da('0x5a')](n1);});this[_0x30da('0x2a7')](children,layoutArea,row,parentWeight);}[_0x30da('0x2a7')](children,layoutArea,row,parentWeight){var horizontal=layoutArea[_0x30da('0xe3')]>layoutArea[_0x30da('0xe4')];var sideLen=Math['min'](layoutArea[_0x30da('0xe3')],layoutArea['height']);var ratio1=0x0,ratio2=0x0;var row2=row[_0x30da('0x9c')]();if(children[_0x30da('0x16')]>0x0){var node=children[0x0];row2[_0x30da('0x14')](node);var area=layoutArea['width']*layoutArea[_0x30da('0xe4')];ratio1=this[_0x30da('0x2a8')](row,sideLen,area*this[_0x30da('0x3')](row)/parentWeight);ratio2=this[_0x30da('0x2a8')](row2,sideLen,area*this['weight'](row2)/parentWeight);}if(children[_0x30da('0x16')]>0x0&&(ratio1==0x0||ratio1>=ratio2)){children[_0x30da('0xff')]();this[_0x30da('0x2a7')](children,layoutArea,row2,parentWeight);}else{var len=this['layoutRow'](layoutArea,row,!horizontal,parentWeight);parentWeight-=this[_0x30da('0x3')](row);if(horizontal){layoutArea['x']+=len;layoutArea[_0x30da('0xe3')]-=len;}else{layoutArea['y']+=len;layoutArea[_0x30da('0xe4')]-=len;}if(children[_0x30da('0x16')]>0x0)this[_0x30da('0x2a7')](children,layoutArea,[],parentWeight);}}[_0x30da('0x3')](row){var total=0x0;row[_0x30da('0xd6')](function(node){total+=this[_0x30da('0x2a2')][_0x30da('0x5a')](node);},this);return total;}[_0x30da('0x2a9')](rect){var hp=-this[_0x30da('0x29d')]/0x2;rect=rect['inflate'](hp);var mm=this[_0x30da('0x2a0')];if(rect[_0x30da('0xe3')]<mm)rect[_0x30da('0xe3')]=mm;if(rect[_0x30da('0xe4')]<mm)rect['height']=mm;}[_0x30da('0x2aa')](layoutArea,row,horizontal,parentWeight){var parentArea=layoutArea[_0x30da('0xe3')]*layoutArea[_0x30da('0xe4')];var sideLen=horizontal?layoutArea['width']:layoutArea['height'];var total=0x0;row[_0x30da('0xd6')](function(node){total+=this[_0x30da('0x2a2')][_0x30da('0x5a')](node);},this);var rowArea=parentArea*total/parentWeight;var len=rowArea/sideLen;var pos=horizontal?layoutArea['x']:layoutArea['y'];row[_0x30da('0xd6')](function(node){var weight=this[_0x30da('0x2a2')][_0x30da('0x5a')](node);var bounds=horizontal?new Rect(pos,layoutArea['y'],rowArea*weight/total/len,len):new Rect(layoutArea['x'],pos,len,rowArea*weight/total/len);this['subtractPadding'](bounds);setBounds(node,bounds);pos+=rowArea*weight/total/len;if(node['subordinates']!=null){var children=node[_0x30da('0x2ab')]['slice']();var childArea=this[_0x30da('0x2ac')](node);this['subtractPadding'](childArea);this[_0x30da('0x2a6')](children,childArea,[],weight);}},this);return len;}[_0x30da('0x2a5')](nodes,layoutArea,horizontal,totalWeight){var pos=horizontal?layoutArea['x']:layoutArea['y'];var length=horizontal?layoutArea[_0x30da('0xe3')]:layoutArea[_0x30da('0xe4')];nodes['forEach'](function(node){var nodeSize=length*this[_0x30da('0x2a2')][_0x30da('0x5a')](node)/totalWeight;var bounds=horizontal?new Rect(pos,layoutArea['y'],nodeSize,layoutArea[_0x30da('0xe4')]):new Rect(layoutArea['x'],pos,layoutArea[_0x30da('0xe3')],nodeSize);this['subtractPadding'](bounds);setBounds(node,bounds);if(node[_0x30da('0x2ab')]!=null){var children=node[_0x30da('0x2ab')][_0x30da('0x9c')]();var childArea=this[_0x30da('0x2ac')](node);this['subtractPadding'](childArea);this[_0x30da('0x2a5')](children,childArea,!horizontal,this[_0x30da('0x2a2')][_0x30da('0x5a')](node));}pos+=nodeSize;},this);}[_0x30da('0x2a8')](row,sideLen,rowArea){var worst=0x0;var total=0x0;row[_0x30da('0xd6')](function(node){var weight=this[_0x30da('0x2a2')][_0x30da('0x5a')](node);total+=weight;},this);row[_0x30da('0xd6')](function(node){var weight=this[_0x30da('0x2a2')][_0x30da('0x5a')](node);var area=rowArea*weight/total;worst=Math['max'](worst,Math[_0x30da('0xbe')](sideLen*sideLen*area/(rowArea*rowArea),rowArea*rowArea/(sideLen*sideLen*area)));},this);return worst;}[_0x30da('0x2a4')](root){if(this[_0x30da('0x2a2')][_0x30da('0xa8')](root))return this[_0x30da('0x2a2')][_0x30da('0x5a')](root);if(root[_0x30da('0x2ab')]==null){this[_0x30da('0x2a2')][_0x30da('0xa5')](root,root[_0x30da('0x3')]);return root[_0x30da('0x3')];}var weight=0x0;root[_0x30da('0x2ab')][_0x30da('0xd6')](function(child){weight+=this['calcWeights'](child);},this);this[_0x30da('0x2a2')][_0x30da('0xa5')](root,weight);return weight;}[_0x30da('0x2ac')](node){var la=Rect['fromVertex'](node);if(node[_0x30da('0x2ad')]){var headerSize=node['headerSize'];if(headerSize<la[_0x30da('0xe4')]){la['y']+=headerSize;la[_0x30da('0xe4')]-=headerSize;}else{la['y']+=la[_0x30da('0xe4')]/0x2;la[_0x30da('0xe4')]/=0x2;}}if(node[_0x30da('0x2ab')]!=null)return la[_0x30da('0x2ae')](-this[_0x30da('0x29f')]);return la;}[_0x30da('0x1b0')](){return this[_0x30da('0x1b1')]['__typeName'];}get[_0x30da('0x1d9')](){return this[_0x30da('0x1fe')];}set[_0x30da('0x1d9')](value){this[_0x30da('0x1fe')]=value;}get['squarify'](){return this[_0x30da('0x2af')];}set['squarify'](value){this[_0x30da('0x2af')]=value;}get[_0x30da('0x29d')](){return this['_padding'];}set[_0x30da('0x29d')](value){this[_0x30da('0x2b0')]=value;}get[_0x30da('0x29e')](){return this[_0x30da('0x2b1')];}set[_0x30da('0x29e')](value){this[_0x30da('0x2b1')]=value;}get[_0x30da('0x29f')](){return this['_containerPadding'];}set[_0x30da('0x29f')](value){this[_0x30da('0x2b2')]=value;}}function setBounds(vertex,rect){var c=rect['center']();vertex['x']=c['x'];vertex['y']=c['y'];vertex[_0x30da('0xe3')]=rect[_0x30da('0xe3')];vertex['height']=rect[_0x30da('0xe4')];}class DrawingGrid{constructor(graph,vertexPoints,edgePoints){this[_0x30da('0xa4')]=graph;this[_0x30da('0x2b3')]=vertexPoints;this[_0x30da('0x2b4')]=edgePoints;this[_0x30da('0x2b5')]=new DrawingGrid[(_0x30da('0x2b6'))]();this[_0x30da('0x2b7')]=new DrawingGrid['Rectangle'](Number['MAX_SAFE_INTEGER'],Number[_0x30da('0x13b')],Number[_0x30da('0x2b8')],Number['MIN_SAFE_INTEGER']);for(let v of graph['vertices']){let p=vertexPoints[_0x30da('0x5a')](v);this[_0x30da('0x2b9')](p);this[_0x30da('0x2ba')](p['x'],p['y'])[_0x30da('0x5d')](v);}for(let e of graph[_0x30da('0x0')]){let points=edgePoints[_0x30da('0x5a')](e);this['normalizePath'](points,e,![]);this[_0x30da('0x2bb')](points);let prevPoint=points[0x0];for(let i=0x1;i<points[_0x30da('0x16')]-0x1;++i){let point=points[i];if(point[_0x30da('0x2bc')](prevPoint))continue;this[_0x30da('0x2ba')](point['x'],point['y'])[_0x30da('0x5d')](new DrawingGrid[(_0x30da('0x2bd'))](e));prevPoint=point;}}this[_0x30da('0x2be')]=new Map();for(let c=this[_0x30da('0x2b7')][_0x30da('0x71')];c<=this[_0x30da('0x2b7')]['right'];++c)this[_0x30da('0x2be')][_0x30da('0xa5')](c,0x1);this['rowHeights']=new Map();for(let r=this[_0x30da('0x2b7')][_0x30da('0x1ae')];r<=this[_0x30da('0x2b7')][_0x30da('0x1af')];++r)this[_0x30da('0x2bf')][_0x30da('0xa5')](r,0x1);}[_0x30da('0x2c0')](vertexSize,padding,edgeCellSize){this[_0x30da('0x2c1')]=new Map();this[_0x30da('0x2c2')]=new Map();this[_0x30da('0x2c3')]=new Map();this['maxHeight']=new Map();for(let v of this[_0x30da('0xa4')][_0x30da('0xbb')]){let vs=vertexSize(v);let cp=this[_0x30da('0x2b3')]['get'](v);this[_0x30da('0x2c1')][_0x30da('0xa5')](cp['x'],this[_0x30da('0x2c1')][_0x30da('0xa8')](cp['x'])?Math['min'](this[_0x30da('0x2c1')][_0x30da('0x5a')](cp['x']),vs['width']):vs[_0x30da('0xe3')]);this[_0x30da('0x2c2')][_0x30da('0xa5')](cp['x'],this['maxWidth'][_0x30da('0xa8')](cp['x'])?Math[_0x30da('0xbe')](this[_0x30da('0x2c2')][_0x30da('0x5a')](cp['x']),vs[_0x30da('0xe3')]):vs['width']);this['minHeight']['set'](cp['y'],this['minHeight'][_0x30da('0xa8')](cp['y'])?Math['min'](this[_0x30da('0x2c3')][_0x30da('0x5a')](cp['y']),vs[_0x30da('0xe4')]):vs[_0x30da('0xe4')]);this[_0x30da('0x2c4')]['set'](cp['y'],this[_0x30da('0x2c4')][_0x30da('0xa8')](cp['y'])?Math['max'](this['maxHeight'][_0x30da('0x5a')](cp['y']),vs[_0x30da('0xe4')]):vs[_0x30da('0xe4')]);}this[_0x30da('0x2c5')]=new Map();this[_0x30da('0x2c6')]=new Map();let x=0x0;for(let c=this['bounds']['left'];c<=this[_0x30da('0x2b7')][_0x30da('0x6b')];++c){let w=this[_0x30da('0x2c2')]['has'](c)?this[_0x30da('0x2c2')]['get'](c)+padding:this['columnWidths'][_0x30da('0x5a')](c)*edgeCellSize;x+=w;this[_0x30da('0x2c5')][_0x30da('0xa5')](c,x-w/0x2);}let y=0x0;for(let r=this[_0x30da('0x2b7')]['top'];r<=this[_0x30da('0x2b7')][_0x30da('0x1af')];++r){let h=this[_0x30da('0x2c4')][_0x30da('0xa8')](r)?this[_0x30da('0x2c4')][_0x30da('0x5a')](r)+padding:this[_0x30da('0x2bf')][_0x30da('0x5a')](r)*edgeCellSize;y+=h;this[_0x30da('0x2c6')][_0x30da('0xa5')](r,y-h/0x2);}}['getPosition'](point){return new Point(this[_0x30da('0x2c5')]['get'](point['x']),this[_0x30da('0x2c6')][_0x30da('0x5a')](point['y']));}[_0x30da('0x2c7')](point,edge,width,height){if(this[_0x30da('0x2c8')]==null)return this[_0x30da('0x2c9')](point);let result=new Point(this['columnPositions']['get'](point['x']),this['rowPositions']['get'](point['y']));let bend=null;if(this['cells']['has'](point)){let cell=this['cells'][_0x30da('0x5a')](point);bend=cell[_0x30da('0x2ca')](edge);}if(this[_0x30da('0x2c1')]['has'](point['x']))width=this['minWidth'][_0x30da('0x5a')](point['x']);if(this[_0x30da('0x2c3')][_0x30da('0xa8')](point['y']))height=this[_0x30da('0x2c3')]['get'](point['y']);if(bend!=null){let laneWidth=width/bend['maxVNeighbors'];result['x']=result['x']-width/0x2+(0.5+bend['verticalLane'])*laneWidth;let laneHeight=height/bend[_0x30da('0x2cb')];result['y']=result['y']-height/0x2+(0.5+bend['horizontalLane'])*laneHeight;}else{let hlane=-0x1,vlane=-0x1;let hneighbors={'val':-0x1},vneighbors={'val':-0x1};let np=new Point(point['x']-0x1,point['y']);if(this[_0x30da('0x2b5')][_0x30da('0xa8')](np)){let cell=this['cells'][_0x30da('0x5a')](np);hlane=cell[_0x30da('0x2cc')](edge,!![],hneighbors);}if(hlane==-0x1){np=new Point(point['x']+0x1,point['y']);if(this['cells'][_0x30da('0xa8')](np)){let cell=this['cells']['get'](np);hlane=cell[_0x30da('0x2cc')](edge,!![],hneighbors);}}np=new Point(point['x'],point['y']-0x1);if(this[_0x30da('0x2b5')][_0x30da('0xa8')](np)){let cell=this[_0x30da('0x2b5')][_0x30da('0x5a')](np);vlane=cell['getEdgeLane'](edge,![],vneighbors);}if(vlane==-0x1){np=new Point(point['x'],point['y']+0x1);if(this[_0x30da('0x2b5')][_0x30da('0xa8')](np)){let cell=this[_0x30da('0x2b5')]['get'](np);vlane=cell[_0x30da('0x2cc')](edge,![],vneighbors);}}if(vlane!=-0x1){let laneWidth=width/vneighbors[_0x30da('0x2cd')];result['x']=result['x']-width/0x2+(0.5+vlane)*laneWidth;}if(hlane!=-0x1){let laneHeight=height/hneighbors[_0x30da('0x2cd')];result['y']=result['y']-height/0x2+(0.5+hlane)*laneHeight;}}return result;}['updateBounds'](point){this[_0x30da('0x2b7')][_0x30da('0x71')]=Math['min'](this[_0x30da('0x2b7')][_0x30da('0x71')],point['x']);this[_0x30da('0x2b7')]['top']=Math[_0x30da('0xbd')](this[_0x30da('0x2b7')][_0x30da('0x1ae')],point['y']);this[_0x30da('0x2b7')][_0x30da('0x6b')]=Math[_0x30da('0xbe')](this[_0x30da('0x2b7')][_0x30da('0x6b')],point['x']);this[_0x30da('0x2b7')][_0x30da('0x1af')]=Math[_0x30da('0xbe')](this['bounds'][_0x30da('0x1af')],point['y']);}[_0x30da('0x2bb')](points){for(let point of points)this[_0x30da('0x2b9')](point);}['refine'](iterations){this[_0x30da('0x2ce')]();for(let i=0x0;i<iterations;i++){this[_0x30da('0x2cf')]();this['refineUTurns']();this[_0x30da('0x2d0')]();}this['removeUnusedRows']();this[_0x30da('0x2d1')]();this[_0x30da('0x2d2')]();}[_0x30da('0x2d3')](){this[_0x30da('0x2d4')]();this[_0x30da('0x2d1')]();}[_0x30da('0x2ce')](){for(let e of this[_0x30da('0xa4')][_0x30da('0x0')]){let points=this[_0x30da('0x2b4')][_0x30da('0x5a')](e);for(let i=0x0;i<points['length']-0x1;i++){let ss=points[i];let se=points[i+0x1];let dx=se['x']-ss['x'];if(dx!=0x0)dx/=Math[_0x30da('0x1fb')](dx);let dy=se['y']-ss['y'];if(dy!=0x0)dy/=Math['abs'](dy);let segment=new DrawingGrid[(_0x30da('0x2d5'))](e,dx,dy);for(let p=ss;!p['equals'](se);p=new Point(p['x']+dx,p['y']+dy)){if(!p[_0x30da('0x2bc')](ss)&&!p['equals'](se))this[_0x30da('0x2ba')](p['x'],p['y'])[_0x30da('0x5d')](segment);}}}}[_0x30da('0x2cf')](){for(let v of this['graph'][_0x30da('0xbb')]){if(v[_0x30da('0x15')]()==0x1){let vPoint=this[_0x30da('0x2b3')]['get'](v);let vCell=this[_0x30da('0x2b5')][_0x30da('0x5a')](vPoint);let e=v['edges'][0x0];let o=e[_0x30da('0xf')](v);let oPoint=this[_0x30da('0x2b3')][_0x30da('0x5a')](o);let points=this[_0x30da('0x2b4')]['get'](e);let start=e[_0x30da('0x8')]==o?0x0:points['length']-0x1;let end=e[_0x30da('0x8')]==o?points[_0x30da('0x16')]-0x1:0x0;let step=e[_0x30da('0x8')]==o?+0x1:-0x1;let removeStart=-0x1,removeCount=-0x1,replaceIndex=-0x1;let replacePoint=new Point(0x0,0x0);for(let i=start;i!=end;i+=step){let ss=points[i];let se=points[i+step];let dx=se['x']-ss['x'];if(dx!=0x0)dx/=Math[_0x30da('0x1fb')](dx);let dy=se['y']-ss['y'];if(dy!=0x0)dy/=Math['abs'](dy);for(let p=ss;!p[_0x30da('0x2bc')](se);p=new Point(p['x']+dx,p['y']+dy)){if(p[_0x30da('0x2bc')](vPoint)||p[_0x30da('0x2bc')](oPoint))continue;if(!this[_0x30da('0x2b5')][_0x30da('0xa8')](p))continue;let cell=this['cells']['get'](p);if(vCell==null){this[_0x30da('0x2d6')](cell,p,e,dy==0x0);}else{if(cell[_0x30da('0x2d7')]['length']==0x1){Utils[_0x30da('0x9')](vCell[_0x30da('0x2d7')],v);if(vCell[_0x30da('0x2d7')][_0x30da('0x16')]==0x0)this[_0x30da('0x2b5')][_0x30da('0xab')](vPoint);vCell=null;cell['content'][_0x30da('0x16')]=0x0;cell[_0x30da('0x5d')](v);this[_0x30da('0x2b3')][_0x30da('0xa5')](v,p);replaceIndex=i+step;replacePoint=p;if(step==+0x1){removeStart=i+0x2;removeCount=points[_0x30da('0x16')]-i-0x2;}else if(step==-0x1){removeStart=0x0;removeCount=i-0x1;}}}}}if(removeStart!=-0x1){points[replaceIndex]=replacePoint;points[_0x30da('0x9b')](removeStart,removeCount);}}}}[_0x30da('0x2d4')](){for(let r=this[_0x30da('0x2b7')][_0x30da('0x1ae')];r<=this[_0x30da('0x2b7')][_0x30da('0x1af')];++r){let unused=!![];for(let c=this[_0x30da('0x2b7')]['left'];c<=this[_0x30da('0x2b7')]['right'];++c){let p=new Point(c,r);if(this[_0x30da('0x2b5')][_0x30da('0xa8')](p)){let cell=this[_0x30da('0x2b5')]['get'](p);if(cell[_0x30da('0x2d8')]()){unused=![];break;}}}if(unused)this[_0x30da('0x2bf')]['set'](r,0x0);}}[_0x30da('0x2d1')](){for(let c=this[_0x30da('0x2b7')][_0x30da('0x71')];c<=this[_0x30da('0x2b7')][_0x30da('0x6b')];++c){let unused=!![];for(let r=this[_0x30da('0x2b7')][_0x30da('0x1ae')];r<=this[_0x30da('0x2b7')]['bottom'];++r){let p=new Point(c,r);if(this[_0x30da('0x2b5')][_0x30da('0xa8')](p)){let cell=this[_0x30da('0x2b5')]['get'](p);if(cell['containsVertexOrBend']()){unused=![];break;}}}if(unused)this[_0x30da('0x2be')][_0x30da('0xa5')](c,0x0);}}[_0x30da('0x2d6')](cell,p,edge,horizontal){cell[_0x30da('0x2d9')](edge,horizontal);if(cell['content'][_0x30da('0x16')]==0x0)this[_0x30da('0x2b5')][_0x30da('0xab')](p);}[_0x30da('0x2da')](){for(let e of this[_0x30da('0xa4')][_0x30da('0x0')]){let path=this['edgePoints'][_0x30da('0x5a')](e);if(path['length']<0x4)continue;for(let i=0x0;i<=path[_0x30da('0x16')]-0x4;++i){let p1=path[i];let p2=path[i+0x1];let p3=path[i+0x2];let p4=path[i+0x3];let dx1=p1['x']-p2['x'];let dx2=p2['x']-p3['x'];let dx3=p3['x']-p4['x'];let dy1=p1['y']-p2['y'];let dy3=p3['y']-p4['y'];if(dx1*dx3<0x0||dy1*dy3<0x0){let armDist1=p1[_0x30da('0x2db')](p2);let armDist2=p4[_0x30da('0x2db')](p3);let ss=armDist1<armDist2?p1:p4;let ls=armDist1<armDist2?p4:p1;let se=armDist1<armDist2?p2:p3;let cd=armDist1<armDist2?p3:p2;let sai=armDist1<armDist2?i+0x1:i+0x2;let lai=armDist1<armDist2?i+0x2:i+0x1;let dx=p2['x']-p1['x'];if(dx!=0x0)dx/=Math[_0x30da('0x1fb')](dx);let dy=p2['y']-p1['y'];if(dy!=0x0)dy/=Math[_0x30da('0x1fb')](dy);let cx=cd['x']-se['x'];if(cx!=0x0)cx/=Math[_0x30da('0x1fb')](cx);let cy=cd['y']-se['y'];if(cy!=0x0)cy/=Math[_0x30da('0x1fb')](cy);let cl=se[_0x30da('0x2db')](cd);let css=cx==0x0?new Point(ss['x'],ls['y']):new Point(ls['x'],ss['y']);if(this[_0x30da('0x2dc')](e,ss,![],css,!![])){this[_0x30da('0x2dd')](e,css,!![],cd,![]);this[_0x30da('0x2dd')](e,cd,!![],se,![]);this['removeSegmentsFromRange'](e,se,!![],ss,![]);this[_0x30da('0x2dd')](e,ss,!![],css,!![]);this['getCell'](css['x'],css['y'])[_0x30da('0x5d')](new DrawingGrid[(_0x30da('0x2bd'))](e));path[_0x30da('0x9b')](i+0x1,0x2);if(sai<lai)path[i]=css;else path[i+0x1]=css;i--;continue;}for(let p=ss;!p['equals'](se);p=new Point(p['x']+dx,p['y']+dy)){let cr=p;let unused=!![];for(let j=0x1;j<cl;++j){cr=new Point(cr['x']+cx,cr['y']+cy);if(this['cells']['has'](cr)){let cell=this['cells'][_0x30da('0x5a')](cr);if(cell[_0x30da('0x2d8')]()){unused=![];break;}}}if(unused){let toRemove=se;for(let j=0x0;j<=cl;++j){if(this['cells'][_0x30da('0xa8')](toRemove))this[_0x30da('0x2d6')](this['cells'][_0x30da('0x5a')](toRemove),toRemove,e,cy==0x0);toRemove=new Point(toRemove['x']+cx,toRemove['y']+cy);}for(let ap=p;!ap[_0x30da('0x2bc')](se);ap=new Point(ap['x']+dx,ap['y']+dy)){let sp=dx2==0x0?new Point(ap['x'],cd['y']):new Point(cd['x'],ap['y']);if(this[_0x30da('0x2b5')]['has'](ap))this[_0x30da('0x2d6')](this['cells'][_0x30da('0x5a')](ap),ap,e,dy==0x0);if(this['cells'][_0x30da('0xa8')](sp))this[_0x30da('0x2d6')](this[_0x30da('0x2b5')][_0x30da('0x5a')](sp),sp,e,dy==0x0);}let removes=!![];if(!p[_0x30da('0x2bc')](ss)){this[_0x30da('0x2ba')](p['x'],p['y'])['add'](new DrawingGrid[(_0x30da('0x2bd'))](e));path[sai]=p;removes=![];}let sp2=dx2==0x0?new Point(p['x'],cd['y']):new Point(cd['x'],p['y']);let removel=!![];if(!sp2[_0x30da('0x2bc')](ls)){this['getCell'](sp2['x'],sp2['y'])[_0x30da('0x5d')](new DrawingGrid[(_0x30da('0x2bd'))](e));path[lai]=sp2;removel=![];}if(lai>sai){if(removel)path['splice'](lai,0x1);if(removes)path[_0x30da('0x9b')](sai,0x1);}else{if(removes)path['splice'](sai,0x1);if(removel)path[_0x30da('0x9b')](lai,0x1);}let ep=p;let segment=new DrawingGrid[(_0x30da('0x2d5'))](e,cx,cy);for(let j=0x1;j<cl;++j){ep=new Point(ep['x']+cx,ep['y']+cy);this[_0x30da('0x2ba')](ep['x'],ep['y'])[_0x30da('0x5d')](segment);}if(removes||removel){i=-0x1;this[_0x30da('0x2de')](path,e,!![]);}break;}}}}}}['removeRedundantBends'](){for(let e of this[_0x30da('0xa4')]['edges']){let path=this['edgePoints'][_0x30da('0x5a')](e);if(path[_0x30da('0x16')]<0x4)continue;for(let i=0x0;i<=path['length']-0x4;++i){let p1=path[i];let p2=path[i+0x1];let p3=path[i+0x2];let p4=path[i+0x3];let dx1=p1['x']-p2['x'];let dx3=p3['x']-p4['x'];let dy1=p1['y']-p2['y'];let dy3=p3['y']-p4['y'];if(dx1*dx3>0x0||dy1*dy3>0x0){let dx=p2['x']-p1['x'];if(dx!=0x0)dx/=Math[_0x30da('0x1fb')](dx);let dy=p2['y']-p1['y'];if(dy!=0x0)dy/=Math[_0x30da('0x1fb')](dy);let newBend=dx!=0x0?new Point(p4['x'],p1['y']):new Point(p1['x'],p4['y']);let cx=p4['x']-newBend['x'];if(cx!=0x0)cx/=Math[_0x30da('0x1fb')](cx);let cy=p4['y']-newBend['y'];if(cy!=0x0)cy/=Math[_0x30da('0x1fb')](cy);let unused=!![];for(let p=new Point(p2['x']+dx,p2['y']+dy);!p[_0x30da('0x2bc')](newBend);p=new Point(p['x']+dx,p['y']+dy)){if(this['cells'][_0x30da('0xa8')](p)){let cell=this[_0x30da('0x2b5')][_0x30da('0x5a')](p);if(cell['containsVertexOrBend']()){unused=![];break;}}}if(unused){for(let p=newBend;!p['equals'](p4);p=new Point(p['x']+cx,p['y']+cy)){if(this['cells'][_0x30da('0xa8')](p)){let cell=this[_0x30da('0x2b5')]['get'](p);if(cell['containsVertexOrBend']()){unused=![];break;}}}}if(unused){for(let toRemove=new Point(p1['x']+dx,p1['y']+dy);!toRemove[_0x30da('0x2bc')](p2);toRemove=new Point(toRemove['x']+dx,toRemove['y']+dy)){if(this[_0x30da('0x2b5')][_0x30da('0xa8')](toRemove))this['removeFromCell'](this['cells']['get'](toRemove),toRemove,e,dy==0x0);}for(let toRemove=p2;!toRemove[_0x30da('0x2bc')](p3);toRemove=new Point(toRemove['x']+cx,toRemove['y']+cy)){if(this['cells'][_0x30da('0xa8')](toRemove))this['removeFromCell'](this[_0x30da('0x2b5')][_0x30da('0x5a')](toRemove),toRemove,e,cy==0x0);}for(let toRemove=p3;!toRemove[_0x30da('0x2bc')](p4);toRemove=new Point(toRemove['x']+dx,toRemove['y']+dy)){if(this[_0x30da('0x2b5')]['has'](toRemove))this['removeFromCell'](this[_0x30da('0x2b5')][_0x30da('0x5a')](toRemove),toRemove,e,dy==0x0);}if(this[_0x30da('0x2b5')]['has'](p4))this['removeFromCell'](this['cells'][_0x30da('0x5a')](p4),p4,e,!![]);this[_0x30da('0x2ba')](newBend['x'],newBend['y'])[_0x30da('0x5d')](new DrawingGrid[(_0x30da('0x2bd'))](e));let segment=new DrawingGrid[(_0x30da('0x2d5'))](e,dx,dy);for(let p=new Point(p1['x']+dx,p1['y']+dy);!p[_0x30da('0x2bc')](newBend);p=new Point(p['x']+dx,p['y']+dy)){this[_0x30da('0x2ba')](p['x'],p['y'])[_0x30da('0x5d')](segment);}segment=new DrawingGrid[(_0x30da('0x2d5'))](e,cx,cy);for(let p=new Point(newBend['x']+cx,newBend['y']+cy);!p[_0x30da('0x2bc')](p4);p=new Point(p['x']+cx,p['y']+cy)){this['getCell'](p['x'],p['y'])['add'](segment);}path[_0x30da('0x9b')](i+0x2,0x1);path[i+0x1]=newBend;i=-0x1;this[_0x30da('0x2de')](path,e,!![]);}}}}}['setSegmentsInRange'](e,p1,includeP1,p2,includeP2){let dx=p2['x']-p1['x'];if(dx!=0x0)dx/=Math['abs'](dx);let dy=p2['y']-p1['y'];if(dy!=0x0)dy/=Math[_0x30da('0x1fb')](dy);let segment=new DrawingGrid[(_0x30da('0x2d5'))](e,dx,dy);let start=includeP1?p1:new Point(p1['x']+dx,p1['y']+dy);for(let p=start;!p['equals'](p2);p=new Point(p['x']+dx,p['y']+dy))this[_0x30da('0x2ba')](p['x'],p['y'])['add'](segment);if(includeP2)this['getCell'](p2['x'],p2['y'])[_0x30da('0x5d')](segment);}[_0x30da('0x2dd')](e,p1,removeP1,p2,removeP2){let dx=p2['x']-p1['x'];if(dx!=0x0)dx/=Math['abs'](dx);let dy=p2['y']-p1['y'];if(dy!=0x0)dy/=Math[_0x30da('0x1fb')](dy);let start=removeP1?p1:new Point(p1['x']+dx,p1['y']+dy);for(let toRemove=start;!toRemove[_0x30da('0x2bc')](p2);toRemove=new Point(toRemove['x']+dx,toRemove['y']+dy)){if(this[_0x30da('0x2b5')][_0x30da('0xa8')](toRemove))this[_0x30da('0x2d6')](this[_0x30da('0x2b5')]['get'](toRemove),toRemove,e,dy==0x0);}if(removeP2&&this[_0x30da('0x2b5')]['has'](p2))this[_0x30da('0x2d6')](this[_0x30da('0x2b5')][_0x30da('0x5a')](p2),p2,e,dy==0x0);}[_0x30da('0x2dc')](e,p1,includeP1,p2,includeP2){let dx=p2['x']-p1['x'];if(dx!=0x0)dx/=Math[_0x30da('0x1fb')](dx);let dy=p2['y']-p1['y'];if(dy!=0x0)dy/=Math[_0x30da('0x1fb')](dy);let start=includeP1?p1:new Point(p1['x']+dx,p1['y']+dy);for(let toRemove=start;!toRemove[_0x30da('0x2bc')](p2);toRemove=new Point(toRemove['x']+dx,toRemove['y']+dy)){if(this['cells'][_0x30da('0xa8')](toRemove)){if(!this[_0x30da('0x2b5')]['get'](toRemove)[_0x30da('0x2df')](e,dy==0x0))return![];}}if(includeP2&&this[_0x30da('0x2b5')][_0x30da('0xa8')](p2)){if(!this[_0x30da('0x2b5')][_0x30da('0x5a')](p2)['containsEdgeSegment'](e,dy==0x0))return![];}return!![];}[_0x30da('0x2de')](path,e,setSegments){let points=path['slice']();path[_0x30da('0x16')]=0x0;for(let p of points){if(path[_0x30da('0x16')]==0x0||!path[path[_0x30da('0x16')]-0x1][_0x30da('0x2bc')](p)){let l=path[_0x30da('0x16')]-0x1;let threeAligned=l>0x0&&(path[l-0x1]['x']==path[l]['x']&&path[l]['x']==p['x']||path[l-0x1]['y']==path[l]['y']&&path[l]['y']==p['y']);if(threeAligned){if(setSegments){this['removeSegmentsFromRange'](e,path[l-0x1],![],p,![]);this[_0x30da('0x2e0')](e,path[l-0x1],![],p,![]);}path[l]=p;}else{path[_0x30da('0x14')](p);}}}}[_0x30da('0x2d2')](){let bounds=this[_0x30da('0x2b7')];this[_0x30da('0x2c8')]=new Grid(bounds[_0x30da('0x6b')]-bounds[_0x30da('0x71')]+0x1,bounds[_0x30da('0x1af')]-bounds['top']+0x1);this[_0x30da('0x2e1')]=new Grid(bounds[_0x30da('0x6b')]-bounds[_0x30da('0x71')]+0x1,bounds[_0x30da('0x1af')]-bounds['top']+0x1);for(let r=bounds[_0x30da('0x1ae')];r<=bounds['bottom'];r++){if(this['rowHeights'][_0x30da('0x5a')](r)==0x0)continue;let lastVertex=bounds['left'];let maxEdges=0x0;for(let c=bounds[_0x30da('0x71')];c<=bounds[_0x30da('0x6b')];c++){let p=new Point(c,r);if(this[_0x30da('0x2b5')][_0x30da('0xa8')](p)){let cell=this['cells'][_0x30da('0x5a')](p);maxEdges=Math[_0x30da('0xbe')](maxEdges,cell[_0x30da('0x2e2')](!![]));if(cell['containsVertex']()||c==bounds[_0x30da('0x6b')]){this[_0x30da('0x2e3')](maxEdges,r,lastVertex,c);lastVertex=c;maxEdges=0x0;}}else if(c==bounds[_0x30da('0x6b')]){this[_0x30da('0x2e3')](maxEdges,r,lastVertex,c);}}}for(let c=bounds['left'];c<=bounds['right'];c++){if(this[_0x30da('0x2be')][_0x30da('0x5a')](c)==0x0)continue;let lastVertex=bounds[_0x30da('0x1ae')];let maxEdges=0x0;for(let r=bounds[_0x30da('0x1ae')];r<=bounds[_0x30da('0x1af')];r++){let p=new Point(c,r);if(this['cells'][_0x30da('0xa8')](p)){let cell=this['cells']['get'](p);maxEdges=Math[_0x30da('0xbe')](maxEdges,cell[_0x30da('0x2e2')](![]));if(cell[_0x30da('0x2e4')]()||r==bounds[_0x30da('0x1af')]){this['setVerticalEdgesInRange'](maxEdges,c,lastVertex,r);lastVertex=r;maxEdges=0x0;}}else if(r==bounds[_0x30da('0x1af')]){this[_0x30da('0x2e5')](maxEdges,c,lastVertex,r);}}}}[_0x30da('0x2e6')](bend,column,row){if(bend[_0x30da('0x2e7')]!=null)return bend[_0x30da('0x2e7')];let path=this[_0x30da('0x2b4')][_0x30da('0x5a')](bend[_0x30da('0x117')]);for(let i=0x1;i<path['length']-0x1;++i){let point=path[i];if(point['x']==column&&point['y']==row){bend['neighborPoints']=[path[i-0x1],path[i+0x1]];return bend[_0x30da('0x2e7')];}}return null;}[_0x30da('0x2e8')](bend,column,row){let neighborPoints=this[_0x30da('0x2e6')](bend,column,row);if(neighborPoints==null)return![];let nx=neighborPoints[0x0]['x']==column?neighborPoints[0x1]['x']:neighborPoints[0x0]['x'];return nx<column;}['bendsToTheTop'](bend,column,row){let neighborPoints=this[_0x30da('0x2e6')](bend,column,row);if(neighborPoints==null)return![];let ny=neighborPoints[0x0]['y']==row?neighborPoints[0x1]['y']:neighborPoints[0x0]['y'];return ny<row;}[_0x30da('0x2e3')](edges,row,c1,c2){let occupiedLanes=[];let edgeLanes=new Map();let freeLanes=new Set();for(let i=0x0;i<edges;++i)freeLanes[_0x30da('0x5d')](i);for(let i=c1;i<=c2;i++){this[_0x30da('0x2c8')][_0x30da('0xa5')](i-this[_0x30da('0x2b7')][_0x30da('0x71')],row-this['bounds'][_0x30da('0x1ae')],edges);let p=new Point(i,row);let cell=this[_0x30da('0x2b5')][_0x30da('0xa8')](p)?this[_0x30da('0x2b5')][_0x30da('0x5a')](p):null;for(let e=0x0;e<edges;e++){let edge=occupiedLanes[e];if(edge!=null&&(cell==null||!cell['containsEdge'](edge))){occupiedLanes[e]=null;edgeLanes[_0x30da('0xab')](edge);freeLanes[_0x30da('0x5d')](e);}}if(cell!=null){for(let item of cell['content']){let segment=item instanceof DrawingGrid[_0x30da('0x2d5')]?item:null;if(segment!=null&&segment[_0x30da('0x2e9')]==-0x1&&segment[_0x30da('0x1fa')]){if(!edgeLanes[_0x30da('0xa8')](segment['edge'])){let freeLane=Utils['first'](freeLanes);segment['lane']=freeLane;segment[_0x30da('0x2ea')]=edges;occupiedLanes[freeLane]=segment[_0x30da('0x117')];edgeLanes[_0x30da('0xa5')](segment['edge'],segment[_0x30da('0x2e9')]);freeLanes[_0x30da('0xab')](freeLane);}else{segment[_0x30da('0x2e9')]=edgeLanes[_0x30da('0x5a')](segment['edge']);segment[_0x30da('0x2ea')]=edges;}}let bend=item instanceof DrawingGrid[_0x30da('0x2bd')]?item:null;if(bend!=null&&bend[_0x30da('0x2eb')]==-0x1){if(!edgeLanes[_0x30da('0xa8')](bend[_0x30da('0x117')])){let freeLane=Utils['first'](freeLanes);bend[_0x30da('0x2eb')]=freeLane;bend[_0x30da('0x2cb')]=edges;occupiedLanes[freeLane]=bend[_0x30da('0x117')];edgeLanes[_0x30da('0xa5')](bend[_0x30da('0x117')],bend[_0x30da('0x2eb')]);freeLanes[_0x30da('0xab')](freeLane);}else{bend['horizontalLane']=edgeLanes[_0x30da('0x5a')](bend[_0x30da('0x117')]);bend['maxHNeighbors']=edges;}}}}}if(edges>0x1&&edges<0x7){let permutations=new DrawingGrid[(_0x30da('0x2ec'))](edges);let minCrossingsPerm=permutations[_0x30da('0x5a')](0x0);let minCrossings=Number[_0x30da('0x13b')];for(let permutation of permutations['list']()){let crossings=this['countHorizontalEdgesCrossings'](edges,row,c1,c2,permutation);if(crossings<minCrossings){minCrossings=crossings;minCrossingsPerm=permutation;}if(crossings==0x0)break;}if(minCrossingsPerm!=permutations['get'](0x0))this[_0x30da('0x2ed')](row,c1,c2,minCrossingsPerm);}}[_0x30da('0x2e5')](edges,column,r1,r2){let occupiedLanes=[];let edgeLanes=new Map();let freeLanes=new Set();for(let i=0x0;i<edges;++i)freeLanes[_0x30da('0x5d')](i);for(let i=r1;i<=r2;i++){this['verticalEdges'][_0x30da('0xa5')](column-this[_0x30da('0x2b7')][_0x30da('0x71')],i-this[_0x30da('0x2b7')][_0x30da('0x1ae')],edges);let p=new Point(column,i);let cell=this['cells']['has'](p)?this[_0x30da('0x2b5')][_0x30da('0x5a')](p):null;for(let e=0x0;e<edges;e++){let edge=occupiedLanes[e];if(edge!=null&&(cell==null||!cell['containsEdge'](edge))){occupiedLanes[e]=null;edgeLanes[_0x30da('0xab')](edge);freeLanes[_0x30da('0x5d')](e);}}if(cell!=null){for(let item of cell['content']){let segment=item instanceof DrawingGrid[_0x30da('0x2d5')]?item:null;if(segment!=null&&segment[_0x30da('0x2e9')]==-0x1&&!segment[_0x30da('0x1fa')]){if(!edgeLanes[_0x30da('0xa8')](segment['edge'])){let freeLane=Utils[_0x30da('0x2ee')](freeLanes);segment[_0x30da('0x2e9')]=freeLane;segment[_0x30da('0x2ea')]=edges;occupiedLanes[freeLane]=segment[_0x30da('0x117')];edgeLanes[_0x30da('0xa5')](segment[_0x30da('0x117')],segment[_0x30da('0x2e9')]);freeLanes[_0x30da('0xab')](freeLane);}else{segment['lane']=edgeLanes[_0x30da('0x5a')](segment[_0x30da('0x117')]);segment[_0x30da('0x2ea')]=edges;}}let bend=item instanceof DrawingGrid['Bend']?item:null;if(bend!=null&&bend[_0x30da('0x2ef')]==-0x1){if(!edgeLanes[_0x30da('0xa8')](bend['edge'])){let freeLane=Utils[_0x30da('0x2ee')](freeLanes);bend['verticalLane']=freeLane;bend[_0x30da('0x2f0')]=edges;occupiedLanes[freeLane]=bend[_0x30da('0x117')];edgeLanes[_0x30da('0xa5')](bend['edge'],bend[_0x30da('0x2ef')]);freeLanes[_0x30da('0xab')](freeLane);}else{bend['verticalLane']=edgeLanes[_0x30da('0x5a')](bend[_0x30da('0x117')]);bend[_0x30da('0x2f0')]=edges;}}}}}if(edges>0x1&&edges<0x7){let permutations=new DrawingGrid['PermutationSet'](edges);let minCrossingsPerm=permutations[_0x30da('0x5a')](0x0);let minCrossings=Number[_0x30da('0x13b')];for(let permutation of permutations[_0x30da('0x2f1')]()){let crossings=this[_0x30da('0x2f2')](edges,column,r1,r2,permutation);if(crossings<minCrossings){minCrossings=crossings;minCrossingsPerm=permutation;}if(crossings==0x0)break;}if(minCrossingsPerm!=permutations[_0x30da('0x5a')](0x0))this[_0x30da('0x2f3')](column,r1,r2,minCrossingsPerm);}}['countHorizontalEdgesCrossings'](edges,row,c1,c2,permutation){let totalCrossings=0x0;for(let i=c1;i<=c2;i++){let p=new Point(i,row);let cell=this['cells'][_0x30da('0xa8')](p)?this[_0x30da('0x2b5')]['get'](p):null;if(cell!=null){let cellCrossings=0x0;let sortedLane=[];for(let o of cell[_0x30da('0x2d7')]){let edgeSegment=o instanceof DrawingGrid[_0x30da('0x2d5')]?o:null;if(edgeSegment!=null&&edgeSegment[_0x30da('0x1fa')])sortedLane[permutation[edgeSegment[_0x30da('0x2e9')]]]=edgeSegment;let bend=o instanceof DrawingGrid[_0x30da('0x2bd')]?o:null;if(bend!=null)sortedLane[permutation[bend[_0x30da('0x2eb')]]]=bend;}let edgesToTheTop=0x0;let downBendsToTheTop=0x0;for(let j=0x0;j<edges;++j){let o=sortedLane[j];let edgeSegment=o instanceof DrawingGrid[_0x30da('0x2d5')]?o:null;if(edgeSegment!=null&&edgeSegment[_0x30da('0x1fa')]){edgesToTheTop++;cellCrossings+=downBendsToTheTop;}let bend=o instanceof DrawingGrid[_0x30da('0x2bd')]?o:null;if(bend!=null){if(this[_0x30da('0x2f4')](bend,i,row))cellCrossings+=edgesToTheTop;else downBendsToTheTop++;}}totalCrossings+=cellCrossings;}}return totalCrossings;}['countVerticalEdgesCrossings'](edges,column,r1,r2,permutation){let totalCrossings=0x0;for(let i=r1;i<=r2;i++){let p=new Point(column,i);let cell=this[_0x30da('0x2b5')][_0x30da('0xa8')](p)?this[_0x30da('0x2b5')][_0x30da('0x5a')](p):null;if(cell!=null){let cellCrossings=0x0;let sortedLane=[];for(let o of cell[_0x30da('0x2d7')]){let edgeSegment=o instanceof DrawingGrid['EdgeSegment']?o:null;if(edgeSegment!=null&&!edgeSegment[_0x30da('0x1fa')])sortedLane[permutation[edgeSegment['lane']]]=edgeSegment;let bend=o instanceof DrawingGrid['Bend']?o:null;if(bend!=null)sortedLane[permutation[bend['verticalLane']]]=bend;}let edgesToTheLeft=0x0;let rightBendsToTheLeft=0x0;for(let j=0x0;j<edges;++j){let o=sortedLane[j];let edgeSegment=o instanceof DrawingGrid[_0x30da('0x2d5')]?o:null;if(edgeSegment!=null&&!edgeSegment[_0x30da('0x1fa')]){edgesToTheLeft++;cellCrossings+=rightBendsToTheLeft;}let bend=o instanceof DrawingGrid[_0x30da('0x2bd')]?o:null;if(bend!=null){if(this[_0x30da('0x2e8')](bend,column,i))cellCrossings+=edgesToTheLeft;else rightBendsToTheLeft++;}}totalCrossings+=cellCrossings;}}return totalCrossings;}['permuteHorizontalEdgeLanes'](row,c1,c2,permutation){let laneObjects=new Set();for(let i=c1;i<=c2;i++){let p=new Point(i,row);let cell=this['cells'][_0x30da('0xa8')](p)?this[_0x30da('0x2b5')]['get'](p):null;if(cell!=null){for(let o of cell['content']){let s=o instanceof DrawingGrid[_0x30da('0x2d5')]?o:null;if(s!=null&&s[_0x30da('0x1fa')]&&!laneObjects[_0x30da('0xa8')](s))laneObjects[_0x30da('0x5d')](s);let b=o instanceof DrawingGrid[_0x30da('0x2bd')]?o:null;if(b!=null&&!laneObjects[_0x30da('0xa8')](b))laneObjects[_0x30da('0x5d')](b);}}}for(let o of laneObjects){let s=o instanceof DrawingGrid['EdgeSegment']?o:null;if(s!=null)s[_0x30da('0x2e9')]=permutation[s[_0x30da('0x2e9')]];let b=o instanceof DrawingGrid[_0x30da('0x2bd')]?o:null;if(b!=null)b[_0x30da('0x2eb')]=permutation[b[_0x30da('0x2eb')]];}}['permuteVerticalEdgeLanes'](column,r1,r2,permutation){let laneObjects=new Set();for(let i=r1;i<=r2;i++){let p=new Point(column,i);let cell=this[_0x30da('0x2b5')][_0x30da('0xa8')](p)?this[_0x30da('0x2b5')][_0x30da('0x5a')](p):null;if(cell!=null){for(let o of cell['content']){let s=o instanceof DrawingGrid[_0x30da('0x2d5')]?o:null;if(s!=null&&!s['horizontal']&&!laneObjects[_0x30da('0xa8')](s))laneObjects[_0x30da('0x5d')](s);let b=o instanceof DrawingGrid[_0x30da('0x2bd')]?o:null;if(b!=null&&!laneObjects[_0x30da('0xa8')](b))laneObjects[_0x30da('0x5d')](b);}}}for(let o of laneObjects){let s=o instanceof DrawingGrid[_0x30da('0x2d5')]?o:null;if(s!=null)s['lane']=permutation[s['lane']];let b=o instanceof DrawingGrid[_0x30da('0x2bd')]?o:null;if(b!=null)b[_0x30da('0x2ef')]=permutation[b[_0x30da('0x2ef')]];}}[_0x30da('0x2ba')](column,row){let i=new Point(column,row);if(!this['cells'][_0x30da('0xa8')](i))this['cells'][_0x30da('0xa5')](i,new DrawingGrid[(_0x30da('0x2f5'))]());return this['cells'][_0x30da('0x5a')](i);}}DrawingGrid['Cell']=class{constructor(){this['content']=[];}[_0x30da('0x5d')](item){this['content'][_0x30da('0x14')](item);}['removeEdgeOrBend'](e,horizontal){for(let i=0x0;i<this[_0x30da('0x2d7')]['length'];i++){let item=this[_0x30da('0x2d7')][i];let s=item instanceof DrawingGrid['EdgeSegment']?item:null;if(s!=null&&s[_0x30da('0x117')]==e&&s[_0x30da('0x1fa')]==horizontal){this[_0x30da('0x2d7')]['splice'](i,0x1);break;}let b=item instanceof DrawingGrid[_0x30da('0x2bd')]?item:null;if(b!=null&&b[_0x30da('0x117')]==e){this['content']['splice'](i,0x1);break;}}}[_0x30da('0x2e2')](horizontal){let count=0x0;for(let item of this['content']){let s=item instanceof DrawingGrid[_0x30da('0x2d5')]?item:null;if(s!=null&&s['horizontal']==horizontal)count++;let b=item instanceof DrawingGrid[_0x30da('0x2bd')]?item:null;if(b!=null)count++;}return count;}[_0x30da('0x2e4')](){for(let item of this['content']){if(item instanceof Vertex)return!![];}return![];}[_0x30da('0x2d8')](){for(let item of this[_0x30da('0x2d7')]){if(item instanceof Vertex||item instanceof DrawingGrid[_0x30da('0x2bd')])return!![];}return![];}[_0x30da('0x2f6')](edge){for(let item of this[_0x30da('0x2d7')]){let s=item instanceof DrawingGrid['EdgeSegment']?item:null;if(s!=null&&s[_0x30da('0x117')]==edge)return!![];let b=item instanceof DrawingGrid[_0x30da('0x2bd')]?item:null;if(b!=null&&b[_0x30da('0x117')]==edge)return!![];}return![];}[_0x30da('0x2df')](edge,horizontal){for(let item of this['content']){let s=item instanceof DrawingGrid[_0x30da('0x2d5')]?item:null;if(s!=null&&s[_0x30da('0x117')]==edge&&s[_0x30da('0x1fa')]==horizontal)return!![];}return![];}[_0x30da('0x2f7')](edge,horizontal){for(let item of this[_0x30da('0x2d7')]){let s=item instanceof DrawingGrid['EdgeSegment']?item:null;if(s!=null&&s['edge']==edge&&s['horizontal']==horizontal)return s;}return null;}[_0x30da('0x2ca')](edge){for(let item of this[_0x30da('0x2d7')]){let b=item instanceof DrawingGrid[_0x30da('0x2bd')]?item:null;if(b!=null&&b[_0x30da('0x117')]==edge)return b;}return null;}[_0x30da('0x2cc')](edge,horizontal,neighbors){for(let item of this[_0x30da('0x2d7')]){let s=item instanceof DrawingGrid[_0x30da('0x2d5')]?item:null;if(s!=null&&s[_0x30da('0x117')]==edge&&s[_0x30da('0x1fa')]==horizontal){neighbors[_0x30da('0x2cd')]=s[_0x30da('0x2ea')];return s[_0x30da('0x2e9')];}let b=item instanceof DrawingGrid['Bend']?item:null;if(b!=null&&b[_0x30da('0x117')]==edge){neighbors[_0x30da('0x2cd')]=horizontal?b['maxHNeighbors']:b[_0x30da('0x2f0')];return horizontal?b[_0x30da('0x2eb')]:b[_0x30da('0x2ef')];}}return-0x1;}['permuteLanes'](permutation,horizontal){for(let item of this[_0x30da('0x2d7')]){let s=item instanceof DrawingGrid['EdgeSegment']?item:null;if(s!=null&&s['horizontal']==horizontal)s[_0x30da('0x2e9')]=permutation[s[_0x30da('0x2e9')]];let b=item instanceof DrawingGrid[_0x30da('0x2bd')]?item:null;if(b!=null){if(horizontal)b[_0x30da('0x2eb')]=permutation[b[_0x30da('0x2eb')]];else b[_0x30da('0x2ef')]=permutation[b[_0x30da('0x2ef')]];}}}};DrawingGrid[_0x30da('0x2f8')]=class{constructor(left,top,right,bottom){this[_0x30da('0x71')]=left;this[_0x30da('0x1ae')]=top;this[_0x30da('0x6b')]=right;this['bottom']=bottom;}};DrawingGrid['Size']=class{constructor(width,height){this[_0x30da('0xe3')]=width;this[_0x30da('0xe4')]=height;}};DrawingGrid[_0x30da('0x2d5')]=class{constructor(edge,dx,dy){this['edge']=edge;this['dx']=dx;this['dy']=dy;this[_0x30da('0x2e9')]=-0x1;this[_0x30da('0x2ea')]=0x1;}get['horizontal'](){return this['dy']==0x0;}};DrawingGrid[_0x30da('0x2bd')]=class{constructor(edge){this[_0x30da('0x117')]=edge;this[_0x30da('0x2eb')]=-0x1;this[_0x30da('0x2cb')]=0x1;this[_0x30da('0x2ef')]=-0x1;this[_0x30da('0x2f0')]=0x1;this[_0x30da('0x2e7')]=null;}};DrawingGrid['PointMap']=class extends Map{[_0x30da('0xa8')](point){let key=this[_0x30da('0x2f9')](point);return super['has'](key);}[_0x30da('0x5a')](point){let key=this[_0x30da('0x2f9')](point);return super['get'](key);}[_0x30da('0xa5')](point,value){let key=this[_0x30da('0x2f9')](point);super[_0x30da('0xa5')](key,value);}[_0x30da('0xab')](point){let key=this['key'](point);return super['delete'](key);}[_0x30da('0x2f9')](point){return String(point['x'])+':'+String(point['y']);}};DrawingGrid[_0x30da('0x2ec')]=class{constructor(n){this['permutations']=[];this['current']=[];for(let i=0x0;i<n;++i)this[_0x30da('0x2fa')][i]=i;this[_0x30da('0x2fb')](n);}['heapPermute'](n){if(n==0x1){this['addItem']();}else{for(let i=0x0;i<n;i++){this['heapPermute'](n-0x1);if(n%0x2==0x1)this[_0x30da('0x2fc')](0x0,n-0x1);else this[_0x30da('0x2fc')](i,n-0x1);}}}['addItem'](){this[_0x30da('0x2fd')][_0x30da('0x14')](this[_0x30da('0x2fa')]['slice']());}[_0x30da('0x2fc')](i,j){let t=this[_0x30da('0x2fa')][i];this[_0x30da('0x2fa')][i]=this[_0x30da('0x2fa')][j];this[_0x30da('0x2fa')][j]=t;}['get'](i){return this[_0x30da('0x2fd')][i];}[_0x30da('0x2f1')](){return this[_0x30da('0x2fd')];}};class Representation{constructor(stGraph,weighted,xOrdering,stEmbedding){this[_0x30da('0x2fe')]=stGraph[_0x30da('0x14d')]();if(weighted)this['Y']=stGraph[_0x30da('0x14e')](this[_0x30da('0x2fe')],0x0);else{this['Y']=[];for(let i=0x0;i<stGraph['vertices']['length'];++i)this['Y'][this[_0x30da('0x2fe')][i]]=i;}if(stEmbedding==null){this['s']=stGraph[_0x30da('0xbb')][this[_0x30da('0x2fe')][0x0]];this['t']=stGraph['vertices'][this[_0x30da('0x2fe')][this[_0x30da('0x2fe')][_0x30da('0x16')]-0x1]];this['d']=stGraph['getDualGraph'](!![]);this['d'][_0x30da('0x168')](this['s'],this['t']);}else{this['s']=stEmbedding['s'];this['t']=stEmbedding['t'];this['d']=stGraph['getDualGraphE'](stEmbedding[_0x30da('0xa3')],this['s'],this['t']);}if(xOrdering){if(weighted)this['X']=this['d'][_0x30da('0x14c')]();else{let dsort=this['d'][_0x30da('0x14d')]();this['X']=[];for(let i=0x0;i<this['d'][_0x30da('0xbb')][_0x30da('0x16')];++i)this['X'][dsort[i]]=i;}}}['left'](e){return e[_0x30da('0x23')]?this['d'][_0x30da('0x163')][_0x30da('0x5a')](this['d'][_0x30da('0xa3')][_0x30da('0x16d')](e)):this['d'][_0x30da('0x163')]['get'](e);}['right'](e){return e[_0x30da('0x23')]?this['d'][_0x30da('0x163')]['get'](e):this['d']['edgeToFaceMap'][_0x30da('0x5a')](this['d'][_0x30da('0xa3')][_0x30da('0x16d')](e));}[_0x30da('0x2ff')](v){if(v==this['s']||v==this['t'])return this['d']['rightExFace'];let edges=this['d']['embedding'][_0x30da('0x5a')](v);for(let i=0x0;i<edges[_0x30da('0x16')];++i){let e=edges[i];let n=edges[(i+0x1)%edges[_0x30da('0x16')]];if(this['Y'][v[_0x30da('0x1a')]]>this['Y'][e['getOtherEnd'](v)[_0x30da('0x1a')]]&&this['Y'][v[_0x30da('0x1a')]]<this['Y'][n[_0x30da('0xf')](v)[_0x30da('0x1a')]])return this['left'](n);}return null;}[_0x30da('0x300')](v){if(v==this['s']||v==this['t'])return this['d']['leftExFace'];let edges=this['d'][_0x30da('0xa3')][_0x30da('0x5a')](v);for(let i=0x0;i<edges[_0x30da('0x16')];++i){let e=edges[i];let n=edges[(i+0x1)%edges[_0x30da('0x16')]];if(this['Y'][v[_0x30da('0x1a')]]<this['Y'][e[_0x30da('0xf')](v)[_0x30da('0x1a')]]&&this['Y'][v[_0x30da('0x1a')]]>this['Y'][n[_0x30da('0xf')](v)['index']])return this['right'](e);}return null;}['orig'](e){return e[_0x30da('0x8')];}[_0x30da('0x301')](e){return e[_0x30da('0xa')];}[_0x30da('0x302')](f){if(f==this['d'][_0x30da('0x16a')]||f==this['d'][_0x30da('0x16b')])return this['s'];let min=f[_0x30da('0x0')][0x0][_0x30da('0x8')];for(let e of f[_0x30da('0x0')]){if(this['Y'][min['index']]>this['Y'][e[_0x30da('0x8')][_0x30da('0x1a')]])min=e[_0x30da('0x8')];}return min;}[_0x30da('0x303')](f){if(f==this['d'][_0x30da('0x16a')]||f==this['d'][_0x30da('0x16b')])return this['t'];let max=f[_0x30da('0x0')][0x0][_0x30da('0x8')];for(let e of f[_0x30da('0x0')]){if(this['Y'][max[_0x30da('0x1a')]]<this['Y'][e['origin'][_0x30da('0x1a')]])max=e['origin'];}return max;}['leftMostIncoming'](v){if(v==this['t']){for(let e of this['t'][_0x30da('0x2')])if(this['d']['edgeToFaceMap'][_0x30da('0x5a')](e)==this['d']['leftExFace'])return e;}let edges=this['d']['embedding'][_0x30da('0x5a')](v);for(let i=0x0;i<edges[_0x30da('0x16')];++i){let e=edges[i];let n=edges[(i+0x1)%edges[_0x30da('0x16')]];if(this['Y'][v[_0x30da('0x1a')]]>this['Y'][e['getOtherEnd'](v)[_0x30da('0x1a')]]&&this['Y'][v['index']]<this['Y'][n[_0x30da('0xf')](v)[_0x30da('0x1a')]])return this['d'][_0x30da('0xa3')]['getReverse'](e);}return null;}['leftMostOutgoing'](v){if(v==this['s']){for(let e of this['s']['outEdges'])if(this['d'][_0x30da('0x163')]['get'](e)==this['d'][_0x30da('0x16a')])return e;}let edges=this['d'][_0x30da('0xa3')][_0x30da('0x5a')](v);for(let i=0x0;i<edges['length'];++i){let e=edges[i];let n=edges[(i+0x1)%edges[_0x30da('0x16')]];if(this['Y'][v[_0x30da('0x1a')]]>this['Y'][e['getOtherEnd'](v)[_0x30da('0x1a')]]&&this['Y'][v[_0x30da('0x1a')]]<this['Y'][n[_0x30da('0xf')](v)['index']])return n;}return null;}[_0x30da('0x304')](v){let edges=this['d'][_0x30da('0xa3')][_0x30da('0x5a')](v);for(let i=0x0;i<edges['length'];++i){let e=edges[i];let n=edges[(i+0x1)%edges[_0x30da('0x16')]];if(this['Y'][v[_0x30da('0x1a')]]<this['Y'][e[_0x30da('0xf')](v)[_0x30da('0x1a')]]&&this['Y'][v[_0x30da('0x1a')]]>this['Y'][n[_0x30da('0xf')](v)[_0x30da('0x1a')]])return e;}return null;}[_0x30da('0x305')](v){let outEdges=[];let e=this[_0x30da('0x306')](v);if(e!=null){do{outEdges['push'](e);e=this['d'][_0x30da('0xa3')][_0x30da('0x307')](v,e);}while(e[_0x30da('0x8')]==v&&outEdges[_0x30da('0x16')]<v['outEdges']['length']);}return outEdges;}[_0x30da('0x308')](v){let inEdges=[];let e=this[_0x30da('0x309')](v);if(e!=null){do{inEdges[_0x30da('0x14')](e);e=this['d']['embedding'][_0x30da('0x30a')](v,e);}while(e[_0x30da('0xa')]==v&&inEdges[_0x30da('0x16')]<v[_0x30da('0x2')][_0x30da('0x16')]);}return inEdges;}[_0x30da('0x30b')](v){let edges=this[_0x30da('0x305')](v);return edges[Math[_0x30da('0xca')](edges[_0x30da('0x16')]/0x2)];}[_0x30da('0x30c')](v){let edges=this[_0x30da('0x308')](v);return edges[Math[_0x30da('0xca')](edges[_0x30da('0x16')]/0x2)];}[_0x30da('0x30d')](){return{'y':0x0,'x1':0x0,'x2':0x0};}[_0x30da('0x30e')](){return{'x':0x0,'y1':0x0,'y2':0x0};}get[_0x30da('0x30f')](){return this['d'];}get['source'](){return this['s'];}get[_0x30da('0xcb')](){return this['t'];}get[_0x30da('0x14d')](){return this[_0x30da('0x2fe')];}}class ConstrainedVisibility extends Representation{constructor(stGraph,vpaths){super(stGraph,!![],![],null);this['d'][_0x30da('0xe1')]();this[_0x30da('0x310')]=new Map();this['pathToVertexMap']=new Map();for(let p of vpaths){let v=new Vertex();this['d'][_0x30da('0xbb')]['push'](v);this['pathToVertexMap'][_0x30da('0xa5')](p,v);for(let e of p)this['edgeToPathMap'][_0x30da('0xa5')](e,p);}for(let e of stGraph[_0x30da('0x0')]){if(!this[_0x30da('0x310')][_0x30da('0xa8')](e)){let p=[];p[_0x30da('0x14')](e);this[_0x30da('0x310')][_0x30da('0xa5')](e,p);vpaths[_0x30da('0x14')](p);let v=new Vertex();this['d']['vertices']['push'](v);this[_0x30da('0x311')][_0x30da('0xa5')](p,v);}}for(const [e,p]of this[_0x30da('0x310')][_0x30da('0xd1')]()){let pv=this[_0x30da('0x311')]['get'](p);let l=this['left'](e);let r=this[_0x30da('0x6b')](e);let lv=this['d']['faceToVertexMap']['get'](l);let rv=this['d'][_0x30da('0x165')][_0x30da('0x5a')](r);if(!lv['adjacentTo'](pv))this['d'][_0x30da('0xe0')](lv,pv)[_0x30da('0x3')]=0.5;if(!pv['adjacentTo'](rv))this['d']['createEdge'](pv,rv)[_0x30da('0x3')]=0.5;}this[_0x30da('0x312')]=new Map();this[_0x30da('0x313')]=new Map();this['X']=this['d'][_0x30da('0x14c')](-0.5);for(let p of vpaths){for(let e of p){let vs=this[_0x30da('0x30e')]();vs['x']=this['X'][this[_0x30da('0x311')][_0x30da('0x5a')](p)[_0x30da('0x1a')]];vs['y2']=this['Y'][this[_0x30da('0x314')](e)['index']];vs['y1']=this['Y'][this['dest'](e)[_0x30da('0x1a')]];this[_0x30da('0x313')]['set'](e,vs);}}for(let v of stGraph[_0x30da('0xbb')]){let hs=this[_0x30da('0x30d')]();hs['y']=this['Y'][v[_0x30da('0x1a')]];let x1=Number[_0x30da('0x265')];let x2=Number[_0x30da('0x26b')];for(let e of v[_0x30da('0x0')]){let p=this[_0x30da('0x310')][_0x30da('0x5a')](e);x1=Math[_0x30da('0xbd')](x1,this['X'][this[_0x30da('0x311')][_0x30da('0x5a')](p)[_0x30da('0x1a')]]);x2=Math['max'](x2,this['X'][this[_0x30da('0x311')][_0x30da('0x5a')](p)[_0x30da('0x1a')]]);}hs['x1']=x1;hs['x2']=x2;this[_0x30da('0x312')]['set'](v,hs);}}get[_0x30da('0x315')](){return this[_0x30da('0x312')];}get[_0x30da('0x316')](){return this['vSegments'];}}class OrthogonalLayout extends Layout{constructor(){super();this['refine']=!![];this[_0x30da('0x29d')]=0xf;this[_0x30da('0x317')]=0xa;this['mm']=0x1;}get[_0x30da('0x199')](){return!![];}[_0x30da('0x1d8')](graph){graph['setItemIndices']();this['graph']=graph;for(let edge of graph[_0x30da('0x0')])edge[_0x30da('0x3')]=0x1;if(graph[_0x30da('0xbb')][_0x30da('0x16')]==0x0||graph[_0x30da('0x0')][_0x30da('0x16')]==0x0){this[_0x30da('0x2b3')]=new Map();for(let v of graph[_0x30da('0xbb')])this[_0x30da('0x2b3')]['set'](v,new Point(0x0,0x0));this[_0x30da('0x2b4')]=new Map();this[_0x30da('0x318')]=new DrawingGrid(graph,this[_0x30da('0x2b3')],this[_0x30da('0x2b4')]);return this[_0x30da('0x319')](this[_0x30da('0x318')]);}let nonplanarReplacement=new Map();let stGraph=graph[_0x30da('0x13e')](nonplanarReplacement);for(let edge of stGraph[_0x30da('0x0')])edge['temporary']=![];let biconnectionEdges=stGraph[_0x30da('0x31a')]();let maxDegreeeReplacement=stGraph[_0x30da('0x14f')](0x4,stGraph[_0x30da('0x12a')]());stGraph[_0x30da('0xeb')]();let reversedEdges=stGraph[_0x30da('0x125')]();let r=new Representation(stGraph,!![]);let vertexToPathMap=new Map();let startEdges=new Map();let endEdges=new Map();for(let i=0x1;i<stGraph[_0x30da('0xbb')][_0x30da('0x16')]-0x1;++i){let ts=r[_0x30da('0x14d')][i];let v=stGraph[_0x30da('0xbb')][ts];let path=[];switch(v[_0x30da('0x2')][_0x30da('0x16')]){case 0x1:path['push'](v[_0x30da('0x2')][0x0]);path[_0x30da('0x14')](r['getOutMedian'](v));break;case 0x2:path[_0x30da('0x14')](r[_0x30da('0x309')](v));path[_0x30da('0x14')](r[_0x30da('0x304')](v));break;case 0x3:path['push'](r[_0x30da('0x30c')](v));path[_0x30da('0x14')](v[_0x30da('0x1')][0x0]);break;}vertexToPathMap[_0x30da('0xa5')](v,path[_0x30da('0x9c')]());startEdges['set'](path[0x0],path);endEdges['set'](path[0x1],path);}for(let e of stGraph['edges']){if(endEdges[_0x30da('0xa8')](e)&&startEdges[_0x30da('0xa8')](e)){let p1=endEdges[_0x30da('0x5a')](e);let p2=startEdges[_0x30da('0x5a')](e);p1['splice'](p1[_0x30da('0x16')]-0x1,0x1);p1[_0x30da('0x14')](...p2);startEdges[_0x30da('0xa5')](p1[0x0],p1);endEdges[_0x30da('0xa5')](p1[p1[_0x30da('0x16')]-0x1],p1);}}let unifiedPaths=[];for(const [edge,path]of endEdges[_0x30da('0xd1')]()){if(edge==path[path[_0x30da('0x16')]-0x1])unifiedPaths[_0x30da('0x14')](path);}let cv=new ConstrainedVisibility(stGraph,unifiedPaths);this[_0x30da('0x2b3')]=new Map();for(let v of stGraph['vertices']){if(v==r[_0x30da('0xcb')]||v==r[_0x30da('0x31b')])continue;let vertexSegment=cv[_0x30da('0x315')][_0x30da('0x5a')](v);let e=vertexToPathMap['get'](v)[0x0];let edgeSegment=cv[_0x30da('0x316')][_0x30da('0x5a')](e);let vPoint=new Point(Math[_0x30da('0xca')](edgeSegment['x']),Math[_0x30da('0xca')](vertexSegment['y']));this[_0x30da('0x2b3')][_0x30da('0xa5')](v,vPoint);}let s=r[_0x30da('0x31b')];let sSegment=cv[_0x30da('0x315')][_0x30da('0x5a')](s);let sem=r[_0x30da('0x305')](s);let sMedian=sem[Math[_0x30da('0xca')](sem['length']/0x2)];let sMedianSegment=cv[_0x30da('0x316')][_0x30da('0x5a')](sMedian);let sPoint=new Point(Math[_0x30da('0xca')](sMedianSegment['x']),Math[_0x30da('0xca')](sSegment['y']));this[_0x30da('0x2b3')][_0x30da('0xa5')](s,sPoint);let t=r[_0x30da('0xcb')];let tSegment=cv['vertexSegments'][_0x30da('0x5a')](t);let tem=r[_0x30da('0x308')](t);let tMedian=tem[Math[_0x30da('0xca')](tem['length']/0x2)];let tMedianSegment=cv[_0x30da('0x316')][_0x30da('0x5a')](tMedian);let tPoint=new Point(Math[_0x30da('0xca')](tMedianSegment['x']),Math[_0x30da('0xca')](tSegment['y']));this['vertexPoints'][_0x30da('0xa5')](t,tPoint);this[_0x30da('0x2b4')]=new Map();for(let e of stGraph[_0x30da('0x0')]){let points=[];let eSegment=cv[_0x30da('0x316')][_0x30da('0x5a')](e);if(e[_0x30da('0x8')]==s&&s[_0x30da('0x1')][_0x30da('0x16')]==0x4&&e==sem[0x0]){points[_0x30da('0x14')](this[_0x30da('0x2b3')]['get'](s));points[_0x30da('0x14')](new Point(points[0x0]['x'],points[0x0]['y']-0x1));points[_0x30da('0x14')](new Point(Math[_0x30da('0xca')](eSegment['x']),points[0x0]['y']-0x1));if(e[_0x30da('0xa')]==t&&t[_0x30da('0x2')]['length']==0x4&&e==tem[0x0]){points['push'](new Point(Math[_0x30da('0xca')](eSegment['x']),this[_0x30da('0x2b3')][_0x30da('0x5a')](e['destination'])['y']+0x1));points[_0x30da('0x14')](new Point(this[_0x30da('0x2b3')][_0x30da('0x5a')](e['destination'])['x'],this[_0x30da('0x2b3')][_0x30da('0x5a')](e[_0x30da('0xa')])['y']+0x1));}else{points['push'](new Point(Math['floor'](eSegment['x']),this[_0x30da('0x2b3')][_0x30da('0x5a')](e['destination'])['y']));}points[_0x30da('0x14')](this[_0x30da('0x2b3')][_0x30da('0x5a')](e[_0x30da('0xa')]));this['edgePoints']['set'](e,points);continue;}if(e[_0x30da('0xa')]==t&&t['inEdges'][_0x30da('0x16')]==0x4&&e==tem[0x0]){points['push'](this['vertexPoints'][_0x30da('0x5a')](e[_0x30da('0x8')]));points['push'](new Point(Math[_0x30da('0xca')](eSegment['x']),points[0x0]['y']));points[_0x30da('0x14')](new Point(Math[_0x30da('0xca')](eSegment['x']),this[_0x30da('0x2b3')][_0x30da('0x5a')](t)['y']+0x1));points['push'](new Point(this[_0x30da('0x2b3')][_0x30da('0x5a')](t)['x'],this[_0x30da('0x2b3')][_0x30da('0x5a')](t)['y']+0x1));points[_0x30da('0x14')](this['vertexPoints'][_0x30da('0x5a')](t));this[_0x30da('0x2b4')][_0x30da('0xa5')](e,points);continue;}let u=e[_0x30da('0x8')];let uSegment=cv[_0x30da('0x315')]['get'](u);let v=e[_0x30da('0xa')];let vSegment=cv[_0x30da('0x315')][_0x30da('0x5a')](v);points[_0x30da('0x14')](this['vertexPoints'][_0x30da('0x5a')](u));points[_0x30da('0x14')](new Point(Math[_0x30da('0xca')](eSegment['x']),Math[_0x30da('0xca')](uSegment['y'])));points[_0x30da('0x14')](new Point(Math['floor'](eSegment['x']),Math['floor'](vSegment['y'])));points[_0x30da('0x14')](this['vertexPoints'][_0x30da('0x5a')](v));this[_0x30da('0x2b4')][_0x30da('0xa5')](e,points);}for(let e of reversedEdges){e[_0x30da('0x21')]();this['edgePoints']['get'](e)['reverse']();}for(const [v,c]of maxDegreeeReplacement[_0x30da('0xd1')]()){let m=Math[_0x30da('0xca')](c[_0x30da('0xbb')][_0x30da('0x16')]/0x2);this['mergePaths'](v,c,0x1,m+0x1,+0x1);this[_0x30da('0x31c')](v,c,c[_0x30da('0xbb')][_0x30da('0x16')]-0x1,m,-0x1);}for(const [v,c]of maxDegreeeReplacement[_0x30da('0xd1')]()){for(let e of c[_0x30da('0x0')])stGraph[_0x30da('0x7')](e);for(let i=0x1;i<c[_0x30da('0xbb')][_0x30da('0x16')];i++)stGraph[_0x30da('0x13a')](c[_0x30da('0xbb')][i]);}for(let e of biconnectionEdges)stGraph['removeEdge'](e);let stgVertexPoints=this['vertexPoints'];this[_0x30da('0x2b3')]=new Map();for(let v of graph[_0x30da('0xbb')]){this[_0x30da('0x2b3')][_0x30da('0xa5')](v,stgVertexPoints['get'](stGraph[_0x30da('0xd2')][_0x30da('0x5a')](v)));}let stgEdgePoints=this[_0x30da('0x2b4')];this['edgePoints']=new Map();for(let e of graph[_0x30da('0x0')]){if(stgEdgePoints[_0x30da('0xa8')](stGraph[_0x30da('0xd3')]['get'](e))){this['edgePoints']['set'](e,stgEdgePoints['get'](stGraph[_0x30da('0xd3')]['get'](e)));}}for(const [edge,path]of nonplanarReplacement['entries']())this['edgePoints'][_0x30da('0xa5')](edge,this['mergePath'](path,stgEdgePoints));this[_0x30da('0x318')]=new DrawingGrid(graph,this[_0x30da('0x2b3')],this[_0x30da('0x2b4')]);return this[_0x30da('0x319')](this['drawingGrid']);}[_0x30da('0x319')](grid){let graph=this[_0x30da('0xa4')];if(this[_0x30da('0x31d')])grid[_0x30da('0x31d')](0x1);grid[_0x30da('0x2c0')](v=>({'width':v[_0x30da('0xe3')],'height':v[_0x30da('0xe4')]}),this['padding'],this['padding']+this['minLaneSize']);for(let v of graph['vertices']){let gp=grid[_0x30da('0x2b3')][_0x30da('0x5a')](v);let p=grid[_0x30da('0x2c9')](gp);v['x']=p['x'];v['y']=p['y'];}for(let edge of graph[_0x30da('0x0')]){var points=[];let gp=grid['edgePoints'][_0x30da('0x5a')](edge);for(let i=0x0;i<gp[_0x30da('0x16')];++i){let p=grid[_0x30da('0x2c7')](gp[i],edge,this[_0x30da('0x317')],this['minLaneSize']);if(i==0x0||!gp[i][_0x30da('0x2bc')](gp[i-0x1]))points[_0x30da('0x14')](new Point(p['x'],p['y']));}edge[_0x30da('0x1aa')]=points;this[_0x30da('0x31e')](edge);}return!![];}[_0x30da('0x31e')](edge){let p=edge['points'];let e=p[_0x30da('0x16')]-0x1;let x=p[0x0]['x'];let y=p[0x0]['y'];let orect=Rect[_0x30da('0x1ad')](edge['origin']);if(p[0x0]['x']<p[0x1]['x'])x=orect['right']();else if(p[0x0]['x']>p[0x1]['x'])x=orect[_0x30da('0x71')]();else if(p[0x0]['y']<p[0x1]['y'])y=orect[_0x30da('0x1af')]();else if(p[0x0]['y']>p[0x1]['y'])y=orect['top']();p[0x0]=new Point(x,y);x=p[e]['x'];y=p[e]['y'];let drect=Rect['fromVertex'](edge['destination']);if(p[e]['x']<p[e-0x1]['x'])x=drect[_0x30da('0x6b')]();else if(p[e]['x']>p[e-0x1]['x'])x=drect[_0x30da('0x71')]();else if(p[e]['y']<p[e-0x1]['y'])y=drect['bottom']();else if(p[e]['y']>p[e-0x1]['y'])y=drect[_0x30da('0x1ae')]();p[e]=new Point(x,y);}['getType'](){return this[_0x30da('0x1b1')][_0x30da('0x1b2')];}['reverseRange'](array,l,r){let d=Math[_0x30da('0xca')]((r-l+0x1)/0x2);for(let i=0x0;i<d;i++){let t=array[l+i];array[l+i]=array[r-i];array[r-i]=t;}}[_0x30da('0x31c')](v,c,rs,re,step){let dummyPath=[];let p=v;for(let i=rs;i!=re;i+=step){let d=c[_0x30da('0xbb')][i];for(let e of d['edges']){if(e[_0x30da('0x8')]==p){dummyPath[_0x30da('0x14')](...this['edgePoints']['get'](e));break;}if(e['destination']==p){let destPoints=this['edgePoints'][_0x30da('0x5a')](e);destPoints['reverse']();dummyPath[_0x30da('0x14')](...destPoints);break;}}let realEdges=[];for(let e of d[_0x30da('0x0')])if(!e['temporary'])realEdges['push'](e);for(let e of realEdges){if(e['origin']==d){e['changeOrigin'](v);let path=dummyPath[_0x30da('0x9c')]();path[_0x30da('0x14')](...this[_0x30da('0x2b4')][_0x30da('0x5a')](e));this['edgePoints']['set'](e,path);}else if(e[_0x30da('0xa')]==d){e[_0x30da('0x1e')](v);let path=this['edgePoints'][_0x30da('0x5a')](e);let destPoints=dummyPath[_0x30da('0x9c')]();destPoints[_0x30da('0x21')]();path[_0x30da('0x14')](...destPoints);}}p=d;}}['mergePath'](edges,stgEdgePoints){let path=[];for(let e of edges)path[_0x30da('0x14')](...stgEdgePoints['get'](e));return path;}get[_0x30da('0x31d')](){return this[_0x30da('0x31f')];}set[_0x30da('0x31d')](value){this['_refine']=value;}get[_0x30da('0x29d')](){return this[_0x30da('0x2b0')];}set[_0x30da('0x29d')](value){this[_0x30da('0x2b0')]=value;}get[_0x30da('0x317')](){return this[_0x30da('0x320')];}set[_0x30da('0x317')](value){this['_minLaneSize']=value;}}export{Anchoring,AssistantPosition,AssistantType,BorderedTreeLayout,FlowchartLayout,FractalLayout,Graph,LayeredLayout,LayoutDirection,MultipleGraphsPlacement,Orientation,OrthogonalLayout,PathFinder,SpringLayout,TopologicalLayout,TreeLayout,TreeLayoutLinkType,TreeMapLayout};
